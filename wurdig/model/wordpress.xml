<?xml version="1.0" encoding="UTF-8"?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your blog. -->
<!-- It contains information about your blog's posts, comments, and categories. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your blog. -->

<!-- To import this information into a WordPress blog follow these steps. -->
<!-- 1. Log into that blog as an administrator. -->
<!-- 2. Go to Tools: Import in the blog's admin panels (or Manage: Import in older versions of WordPress). -->
<!-- 3. Choose "WordPress" from the list. -->
<!-- 4. Upload this file using the form provided on that page. -->
<!-- 5. You will first be asked to map the authors in this export file to users -->
<!--    on the blog.  For each author, you may choose to map to an -->
<!--    existing user on the blog or to create a new user -->
<!-- 6. WordPress will then import each of the posts, comments, and categories -->
<!--    contained in this file into your blog -->

<!-- generator="WordPress/2.7.1" created="2009-04-20 21:18"-->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.0/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.0/"
>

<channel>
	<title>Jason Leveille's Blog</title>
	<link>http://jasonleveille.com</link>
	<description>A Place Where I Occasionally Write About Things</description>
	<pubDate>Mon, 20 Apr 2009 23:57:01 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.7.1</generator>
	<language>en</language>
	<wp:wxr_version>1.0</wp:wxr_version>
	<wp:base_site_url>http://jasonleveille.com</wp:base_site_url>
	<wp:base_blog_url>http://jasonleveille.com</wp:base_blog_url>
	<wp:category><wp:category_nicename>xhtml</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[(X)HTML]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>net</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[.net]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>apache</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Apache]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>aptana</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Aptana]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>blog</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Blog]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>book-reviews</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Book Reviews]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>css</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[CSS]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>database</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Database]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>deployed</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Deployed]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>frameworks</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Frameworks]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>git</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Git]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>htaccess</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[htaccess]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>html</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[HTML]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>javascript</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[JavaScript]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>jquery-javascript</wp:category_nicename><wp:category_parent>JavaScript</wp:category_parent><wp:cat_name><![CDATA[JQuery]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>lighttpd</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[lighttpd]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>linux</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[linux]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>miscellaneous</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Miscellaneous]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>mysql</wp:category_nicename><wp:category_parent>Database</wp:category_parent><wp:cat_name><![CDATA[mysql]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>open-source</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Open Source Projects]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>php</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[PHP]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>plugins</wp:category_nicename><wp:category_parent>JQuery</wp:category_parent><wp:cat_name><![CDATA[Plugins]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>python</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Python]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>quicklinks</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[quicklinks]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>quotes</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Quotes]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>rails</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Rails]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>recipes</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Recipes]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>responsible-developer</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Responsible Developer]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>security</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Security]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>simplemc</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[simplemc]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>subversion</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Subversion]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>tools</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Tools]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>tweets</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Tweets]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>vi</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[vi]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>web-services</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Web Services]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>wordpress</wp:category_nicename><wp:category_parent>PHP</wp:category_parent><wp:cat_name><![CDATA[Wordpress]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>api</wp:category_nicename><wp:category_parent>Web Services</wp:category_parent><wp:cat_name><![CDATA[API]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>cakephp</wp:category_nicename><wp:category_parent>PHP</wp:category_parent><wp:cat_name><![CDATA[CakePHP]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>django-python</wp:category_nicename><wp:category_parent>Python</wp:category_parent><wp:cat_name><![CDATA[Django]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>pylons</wp:category_nicename><wp:category_parent>Python</wp:category_parent><wp:cat_name><![CDATA[Pylons]]></wp:cat_name></wp:category>
	<wp:category><wp:category_nicename>rest-web-services</wp:category_nicename><wp:category_parent>Web Services</wp:category_parent><wp:cat_name><![CDATA[REST]]></wp:cat_name></wp:category>
	<wp:tag><wp:tag_path>xhtml</wp:tag_path><wp:tag_name><![CDATA[(X)HTML]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>net</wp:tag_path><wp:tag_name><![CDATA[.net]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>apache</wp:tag_path><wp:tag_name><![CDATA[Apache]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>api</wp:tag_path><wp:tag_name><![CDATA[API]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>aptana</wp:tag_path><wp:tag_name><![CDATA[Aptana]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>blog</wp:tag_path><wp:tag_name><![CDATA[Blog]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>book-review</wp:tag_path><wp:tag_name><![CDATA[Book Review]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>books</wp:tag_path><wp:tag_name><![CDATA[Books]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>cakephp</wp:tag_path><wp:tag_name><![CDATA[CakePHP]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>codeignitor</wp:tag_path><wp:tag_name><![CDATA[CodeIgnitor]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>coding</wp:tag_path><wp:tag_name><![CDATA[coding]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>css</wp:tag_path><wp:tag_name><![CDATA[CSS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>deployed</wp:tag_path><wp:tag_name><![CDATA[Deployed]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>development</wp:tag_path><wp:tag_name><![CDATA[Development]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>django</wp:tag_path><wp:tag_name><![CDATA[Django]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>doctrine</wp:tag_path><wp:tag_name><![CDATA[Doctrine]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>expression-engine</wp:tag_path><wp:tag_name><![CDATA[Expression Engine]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>frameworks</wp:tag_path><wp:tag_name><![CDATA[Frameworks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>git</wp:tag_path><wp:tag_name><![CDATA[Git]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>htaccess</wp:tag_path><wp:tag_name><![CDATA[htaccess]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>html</wp:tag_path><wp:tag_name><![CDATA[HTML]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>javascript</wp:tag_path><wp:tag_name><![CDATA[JavaScript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>jquery</wp:tag_path><wp:tag_name><![CDATA[jQuery]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>knowledge</wp:tag_path><wp:tag_name><![CDATA[Knowledge]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>lighttpd</wp:tag_path><wp:tag_name><![CDATA[lighttpd]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>linux</wp:tag_path><wp:tag_name><![CDATA[linux]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>miscellaneous</wp:tag_path><wp:tag_name><![CDATA[Miscellaneous]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>mysql</wp:tag_path><wp:tag_name><![CDATA[mysql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>open-source-projects</wp:tag_path><wp:tag_name><![CDATA[Open Source Projects]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>opml</wp:tag_path><wp:tag_name><![CDATA[opml]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>orm</wp:tag_path><wp:tag_name><![CDATA[ORM]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>php</wp:tag_path><wp:tag_name><![CDATA[PHP]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>plugins</wp:tag_path><wp:tag_name><![CDATA[Plugins]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>project-alumni</wp:tag_path><wp:tag_name><![CDATA[project alumni]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>pylons</wp:tag_path><wp:tag_name><![CDATA[Pylons]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>python</wp:tag_path><wp:tag_name><![CDATA[Python]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>quicklinks</wp:tag_path><wp:tag_name><![CDATA[quicklinks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>quotes</wp:tag_path><wp:tag_name><![CDATA[Quotes]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>rails</wp:tag_path><wp:tag_name><![CDATA[Rails]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>recipe</wp:tag_path><wp:tag_name><![CDATA[recipe]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>responsible</wp:tag_path><wp:tag_name><![CDATA[responsible]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>rest</wp:tag_path><wp:tag_name><![CDATA[REST]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>security</wp:tag_path><wp:tag_name><![CDATA[Security]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>simpemc</wp:tag_path><wp:tag_name><![CDATA[simpemc]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>simplemc</wp:tag_path><wp:tag_name><![CDATA[simplemc]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>subversion</wp:tag_path><wp:tag_name><![CDATA[Subversion]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>tools</wp:tag_path><wp:tag_name><![CDATA[Tools]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>ubuntu</wp:tag_path><wp:tag_name><![CDATA[ubuntu]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>vi</wp:tag_path><wp:tag_name><![CDATA[vi]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>virtual</wp:tag_path><wp:tag_name><![CDATA[virtual]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>web</wp:tag_path><wp:tag_name><![CDATA[web]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>web-services</wp:tag_path><wp:tag_name><![CDATA[Web Services]]></wp:tag_name></wp:tag>
	<wp:tag><wp:tag_path>wordpress</wp:tag_path><wp:tag_name><![CDATA[Wordpress]]></wp:tag_name></wp:tag>
<item>
<title>This time I mean it</title>
<link>http://jasonleveille.com/2008/04/this-time-i-mean-it/</link>
<pubDate>Thu, 10 Apr 2008 15:25:05 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://blog/?p=3</guid>
<description></description>
<content:encoded><![CDATA[Ok, so here it is.  I originally had grand plans of launching the new blog powered by <a title="Expression Engine" href="http://expressionengine.com/">ExpressionEngine</a>, however for various reasons I never got around to it.  I always knew though that I could launch a WordPress blog in under 10 minutes.  The downside is that I won't be implementing my new design (thanks to Jon Weaver for his creative genious) until this summer.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>3</wp:post_id>
<wp:post_date>2008-04-10 10:25:05</wp:post_date>
<wp:post_date_gmt>2008-04-10 15:25:05</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>this-time-i-mean-it</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1240272006</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Depth First Search and Iterative Deepening</title>
<link>http://jasonleveille.com/2008/04/depth-first-search-and-iterative-deepening/</link>
<pubDate>Thu, 10 Apr 2008 15:36:08 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://blog/?p=4</guid>
<description></description>
<content:encoded><![CDATA[I recently implemented <a href="http://en.wikipedia.org/wiki/Depth-first_search"><abbr title="Depth First Search">DFS</abbr></a> and <a href="http://en.wikipedia.org/wiki/Iterative_deepening_depth-first_search">Iterative Deepening</a> algorithms to search for a target node in a tree.  Initially I thought I would write my program in C++, however after some thought I decided to go the route of JavaScript.  I believe the source code is commented sufficiently to give you a glimpse into some of the decisions I made, therefore I won't be providing any real detail in this post.

<a href="http://jasonleveille.com/cs520/assignment3/">DFS and Iterative Deepening Project</a>

I have to give much thanks to <a href="http://www.kirupa.com/">Kirupa</a>, as his <a href="http://www.kirupa.com/developer/actionscript/depth_breadth_search.htm">ActionScript implementation</a> of <a href="http://en.wikipedia.org/wiki/Depth-first_search"><abbr title="Depth First Search">DFS</abbr></a> and <a href="http://en.wikipedia.org/wiki/Breadth-first_search"><abbr title="Breadth First Search">BFS</abbr></a> gave me the inspiration to go the route of JavaScript.  Not only that, but I was able to use much of his work as a model for the direction I took.  I hope you find that I did provide sufficient credit in my comments.  Enjoy.

<strong>NOTE</strong>: I stayed up until 1am, two nights in a row to finish this.  I don't work well late at night and that is likely reflected in some of the algorithmic decisions I made.  If you have any questions please don't hesitate to ask.  Also, you might be asking, <abbr title="Why The Hell">WTH</abbr> did he use <a href="http://extjs.com">extjs</a> here?  Honestly, I don't know.  I originally had grand visions for my node tree, etc, however those didn't pan out.  In it's current state there is no advantage to using that framework.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>4</wp:post_id>
<wp:post_date>2008-04-10 10:36:08</wp:post_date>
<wp:post_date_gmt>2008-04-10 15:36:08</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>depth-first-search-and-iterative-deepening</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1208394654</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Simple MC: Starting the Open Source Process</title>
<link>http://jasonleveille.com/2008/04/simple-mc-starting-the-open-source-process/</link>
<pubDate>Thu, 10 Apr 2008 17:22:35 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=5</guid>
<description></description>
<content:encoded><![CDATA[I've been working on a project for a while now at <a href="http://www.blueatlas.com">work</a> which we have dubbed SimpleMC (Simple Managed Content).  I spoke with Dave this morning, and he gave me the go ahead to start the process of open sourcing the project ... which I'm very excited about.  I haven't officially even released an alpha version yet, however you can get a sneak peak:
<ul>
	<li><a href="http://code.google.com/p/simple-mc/">Google Code Repository</a></li>
	<li><a href="http://jasonleveille.com/bai_cms/">Live Demo</a>
<ul>
	<li> u: admin</li>
	<li> p: admin</li>
</ul>
</li>
</ul>
I apologize in advance if someone gets in there and changes the admin password or completely destroys the demo.  It is a demo and thus I haven't spent a lot of time (5 minutes) putting it in true demo mode.  I'd also like to mention that you won't find any documentation about getting SimpleMC to work for you.  You can take a look at /bai_cms/demo/ in the source to see how it is integrated into a page.  Any issues, just contact me or post a comment here.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>5</wp:post_id>
<wp:post_date>2008-04-10 12:22:35</wp:post_date>
<wp:post_date_gmt>2008-04-10 17:22:35</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>simple-mc-starting-the-open-source-process</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1207848155</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>3</wp:comment_id>
<wp:comment_author><![CDATA[Eelco Wiersma]]></wp:comment_author>
<wp:comment_author_email>contact@pagebakers.nl</wp:comment_author_email>
<wp:comment_author_url>http://www.pagebakery.org</wp:comment_author_url>
<wp:comment_author_IP>212.83.82.236</wp:comment_author_IP>
<wp:comment_date>2008-04-11 11:14:22</wp:comment_date>
<wp:comment_date_gmt>2008-04-11 16:14:22</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey Jason,

Looking good m8.

Pagebakery is doing well also, maybe we could have a chat again soon and exchange some idea's.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>4</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-04-11 14:27:04</wp:comment_date>
<wp:comment_date_gmt>2008-04-11 19:27:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks Eelco.  I check out the Trac <a href="http://www.pagebakery.org" rel="nofollow">PageBakery</a> timeline at least once a week to see what you guys are up to.  Unfortunately all I have time for are quick glances at the <a href="http://trac.pagebakery.org/timeline" rel="nofollow">recent commits</a>.  Things look great though.

I'd like to chat and exchange ideas for sure.  I've implemented a simple caching mechanism for SimpleMC that you may or may not find interesting.

I'll be in touch.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>5</wp:comment_id>
<wp:comment_author><![CDATA[William]]></wp:comment_author>
<wp:comment_author_email>wellywoody@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.haere.com</wp:comment_author_url>
<wp:comment_author_IP>125.236.225.49</wp:comment_author_IP>
<wp:comment_date>2008-04-14 17:51:43</wp:comment_date>
<wp:comment_date_gmt>2008-04-14 22:51:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I have been looking for something like SimpleMC for so, so long.

Thank you for sharing.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>6</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>76.100.197.164</wp:comment_author_IP>
<wp:comment_date>2008-04-14 19:17:18</wp:comment_date>
<wp:comment_date_gmt>2008-04-15 00:17:18</wp:comment_date_gmt>
<wp:comment_content><![CDATA[No problem William.  I'm hoping to have an alpha release package by the end of this month, with installation and setup instructions.  That way you'll really be able to check things out.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>20</wp:comment_id>
<wp:comment_author><![CDATA[Matthew]]></wp:comment_author>
<wp:comment_author_email>sonic_hf@yahoo.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>58.71.15.242</wp:comment_author_IP>
<wp:comment_date>2008-05-20 21:58:56</wp:comment_date>
<wp:comment_date_gmt>2008-05-21 02:58:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Can't wait for this!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>23</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-05-21 07:52:20</wp:comment_date>
<wp:comment_date_gmt>2008-05-21 12:52:20</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I have had so many other things getting in my way that I haven't had the time in a while to come back to this project and create a release.  As you can see, there is <a href="http://code.google.com/p/simple-mc/issues/list" rel="nofollow">quite a bit that needs to be done</a>.  A big one of course is documentation.  

Anyway, keep checking back.  I guess this is the nature of open source software.  There are really no timelines.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>39</wp:comment_id>
<wp:comment_author><![CDATA[pokoka]]></wp:comment_author>
<wp:comment_author_email>pokoka@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.makethingstalk.co.nz</wp:comment_author_url>
<wp:comment_author_IP>125.236.230.53</wp:comment_author_IP>
<wp:comment_date>2008-07-16 15:59:31</wp:comment_date>
<wp:comment_date_gmt>2008-07-16 20:59:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[hello,

how can i submit changes and/or tackle some of those "things to do"?

i've just start using simple mc (perfect for a friend that isn't ready for the likes of WordPress or Joombla). it's a bit 'flakey' in parts (Extjs has it's moments) but a rather neat little project. the "combine" part is gold!

i'm surprised you didn't bind it to cakephp for most of this bit n pieces that are missing but heck no a biggy.

cheers.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>43</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>76.100.197.164</wp:comment_author_IP>
<wp:comment_date>2008-07-16 19:45:37</wp:comment_date>
<wp:comment_date_gmt>2008-07-17 00:45:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi, Pokaka.  Thanks for stopping by.  A little background:

I started SimpleMC prior to working at all with CakePHP.  We wanted a tight little package that provided a super simple way to update content.  Needless to say it became a bit large, with extjs/htmlpurifier/etc.  Anyway, it is definitely flaky in parts, especially with extjs on the frontend.  Using extjs on the frontend causes a few issues:

<ol>
<li>extjs uses a css reset, therefore integrating SimpleMC w/in a site that was originally designed without a reset in mind causes more work than it should</li>
<li>extjs is large.  I am an ardent Steve Sounders fan, and I do everything I can to make things zippy, but I think extjs on the frontend is overkill.  I would rather see something like jQuery modal on the frontend and keep extjs on the back</li>
</ol>

As for how you can contribute, shoot me an email and let's talk: leveillej [at] gmail [dot] com.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>The Death of an Open Source Project?</title>
<link>http://jasonleveille.com/2008/04/the-death-of-an-open-source-project/</link>
<pubDate>Sun, 13 Apr 2008 18:23:02 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=8</guid>
<description></description>
<content:encoded><![CDATA[The death of an open source project starts when the lead developers stop actually using the project.  If it is only being maintained out of a feeling of obligation for those who have downloaded and installed the code, than it's bound to have a short shelf life.  In July of 2006 <a href="http://www.antiemotion.com/">Stephen Eskin</a> (a <a href="http://webteam.qohs.org/05-06.php#eskin">former student</a> of mine) and I launched the first version of <a href="https://sourceforge.net/projects/project-alumni/">Project Alumni</a>.  We had implemented an alumni application for our <a href="http://www.qohs.org">High School</a> and we figured we might as well make it available to the world.  In nearly two years the project has been <a href="https://sourceforge.net/project/stats/detail.php?group_id=173545&amp;ugn=project-alumni&amp;type=prdownload&amp;mode=alltime&amp;package_id=0">downloaded approximately 3400 times</a>.  I'm pretty happy with those numbers. Just query google for "<a href="http://www.google.com/search?hl=en&amp;q=powered+by+project-alumni&amp;btnG=Google+Search">Powered by Project-Alumni</a>" and you can get a good idea of the number of sites using the project.<!--more-->
<p style="text-align: center;"><a href="http://jasonleveille.com/wp-content/uploads/2008/04/project-alumni-downloads.jpg"><img class="aligncenter size-medium wp-image-10" title="project-alumni-downloads" src="http://jasonleveille.com/wp-content/uploads/2008/04/project-alumni-downloads-280x300.jpg" alt="" width="280" height="300" /></a></p>

<h3>Personally</h3>
On a personal level I've always been happy with the responses we've gotten from the people using the project.  For what it's worth, I'm proud of the fact that this was the first real application I ever took part in developing.  I've always been really impressed by what Eskin was able to accomplish with almost no PHP experience, and very little development experience.  The project really has it's origins in the need for a teacher to find something for a very bright student to do.  We launched the <a href="http://alumni.qohs.org/">first Project Alumni</a> 1 month after conceiving the project in October of 2005, and most of that credit goes to Eskin.
<h3>Professionally</h3>
On a professional level I've never felt quite right about the codebase.  Considering the inexperience of Eskin and I when the project was first open sourced, and considering how much I didn't know about basic security best practices, I think it's ok.  Ok won't cut it though when new security vulnerabilities are discovered and I'm not around to patch them.  Even though the data we're housing might not be that sensitive (others might argue otherwise), a member might be using the same username/password that they use for their banking account.  If that data isnt' safe we have a problem.  <a href="http://project-alumni.svn.sourceforge.net/viewvc/project-alumni/trunk/projectAlumni/includes/functions/login.func.inc.php?view=markup">At least</a> we are using <a href="http://us2.php.net/mysql_real_escape_string">mysql_real_escape_string</a> and <a href="http://en.wikipedia.org/wiki/MD5">hashing</a> the password.  Actually, the more I dig into the code (again, which I have been disconnected from for a while now) the more I see things that I like.  For instance, checking for '<a href="http://us3.php.net/manual/en/info.configuration.php#ini.magic-quotes-gpc">magic_quotes_gpc</a>' and stripping slashes before running mysql_real_escape_string.  Good one whoever implemented that way back in 2006.  Someone was paying attention to the PHP manual.  Probably Eskin.
<h3>Support</h3>
I basically stopped supporting the project <a href="http://project-alumni.svn.sourceforge.net/viewvc/project-alumni/trunk/">4 months ago</a>.  The only reason I made a commit was because someone started asking me about <a href="http://www.google.com/search?hl=en&amp;q=project+alumni+sql+injection&amp;btnG=Search">security vulnerability reports</a> that had started showing up.  So, I <a href="https://sourceforge.net/project/showfiles.php?group_id=173545">pushed out a patch</a> and moved on.  I used to maintain a website and a help forum, but I decided one day that I didn't want that burden anymore, especially with a codebase that I wasn't really invested in.  Don't get me wrong.  I used to be invested in the project.  I spent 8 hours on my day off once getting the application to install properly and behave on a Windows server running IIS, just because the guy who needed help was a nice guy.
<h3>Not Using your own Code</h3>
So, how do you kill an open source project?  I have stopped releases.  I have stopped supporting the project.  I have stopped submitting patches.  I took down the website and forums.  Still, this thing is getting downloaded 100 - 200 times a month.  I feel like I can't just pull the plug.  I think the real way you kill an open source project is by not actually using it.  I think the best projects are the ones where the lead developers are heavily invested in the security/structure/scalabilty/maintainability of their own code.  It was easy to use this project when I was teaching and I was responsible for the websites at <a href="http://www.qohs.org">Quince Orchard</a>.  A security fix was good because it directly impacted a site that I was responsible for.  That's obviously changed now.  An <a href="http://jasonleveille.com/2008/04/simple-mc-starting-the-open-source-process/">up-and-coming open-source software project</a> of mine on the other hand will see a lot of use in the future.  A small percentage of our client base at <a href="http://www.blueatlas.com">BlueAtlas</a> is a perfect fit for what <a href="http://jasonleveille.com/bai_cms/">SimpleMC</a> has to offer.  Another percentage of our client base is a good fit after some client specific customization of the application.  Some of which makes it back into the project, and some of which does not.

So, to kill or not to kill, that of course is the question.  I'm definitely leaning towards no now that I have written this post.  I was way in the direction of yes 30 seconds before I started writing.  I would be interested to hear what others think.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>8</wp:post_id>
<wp:post_date>2008-04-13 13:23:02</wp:post_date>
<wp:post_date_gmt>2008-04-13 18:23:02</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-death-of-an-open-source-project</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1208115368</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>keywords</wp:meta_key>
<wp:meta_value>open source, php, project alumni, alumni</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>description</wp:meta_key>
<wp:meta_value>Killing an open source project really boils down to not using your own code base.</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>title</wp:meta_key>
<wp:meta_value>How do you kill an open source project?</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>cool-comments</title>
<link>http://jasonleveille.com/2008/04/my-comment-story-is-better-than-yours/cool-comments/</link>
<pubDate>Sun, 13 Apr 2008 18:49:43 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/wp-content/uploads/2008/04/cool-comments.jpg</guid>
<description></description>
<content:encoded><![CDATA[Comments from Eric Meyer left me feeling light headed.]]></content:encoded>
<excerpt:encoded><![CDATA[Mr CSS left a comment!!]]></excerpt:encoded>
<wp:post_id>12</wp:post_id>
<wp:post_date>2008-04-13 13:49:43</wp:post_date>
<wp:post_date_gmt>2008-04-13 18:49:43</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>cool-comments</wp:post_name>
<wp:status>inherit</wp:status>
<wp:post_parent>11</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>attachment</wp:post_type>
<wp:post_password></wp:post_password>
<wp:attachment_url>http://jasonleveille.com/wp-content/uploads/2008/04/cool-comments.jpg</wp:attachment_url>
<wp:postmeta>
<wp:meta_key>_wp_attached_file</wp:meta_key>
<wp:meta_value>/home/jleveille/public_html/wp-content/uploads/2008/04/cool-comments.jpg</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
<wp:meta_value>a:6:{s:5:"width";i:475;s:6:"height";i:862;s:14:"hwstring_small";s:22:"height='96' width='52'";s:4:"file";s:72:"/home/jleveille/public_html/wp-content/uploads/2008/04/cool-comments.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"cool-comments-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;}s:6:"medium";a:3:{s:4:"file";s:25:"cool-comments-165x300.jpg";s:5:"width";i:165;s:6:"height";i:300;}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>My Comment Story is Better than Yours</title>
<link>http://jasonleveille.com/2008/04/my-comment-story-is-better-than-yours/</link>
<pubDate>Sun, 13 Apr 2008 19:03:23 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=11</guid>
<description></description>
<content:encoded><![CDATA[So, of all the comments you may have ever received on your blog, who provided the comment that made you say, "holy sheat, xxxx yyyyy just commented on my blog"?  In early 2007 I was working with Jeff Brown of <a href="http://jeffbrowndesigns.com">Jeff Brown Designs</a>.  We had recently launched his new site and Jeff had written a post on <a href="http://jeffbrowndesigns.com/2007/04/11/yui-css-grids/">the use of <abbr title="Cascading Style Sheets">CSS</abbr> grids</a>.  Now, I know this doesn't count for me, and Jeff is probably going to call me up and ask why the hell I stole <a href="http://meyerweb.com/">Eric</a> from him, but I'm writing about it anyway.  The day of Jeff's post who should place a comment on the blog?  <a href="http://meyerweb.com/">Eric Meyer</a> himself.  I felt all tingly and warm inside, and I had to breathe into a small paper bag to catch my breath.  <!--more-->I'll admit that I was Jealous that Jeff had garnered the attention of Eric Meyer and not I.  You can actually see my attempt to get in on the conversation (in the screen shot below).  Anyhow, definitely one of the most exciting comment experiences of my life.  Sorry Jeff.  This definitely counts as yours.
<p style="text-align: center;"><a href="http://jasonleveille.com/wp-content/uploads/2008/04/cool-comments.jpg"><img class="alignnone size-full wp-image-12" title="cool-comments" src="http://jasonleveille.com/wp-content/uploads/2008/04/cool-comments.jpg" alt="Mr CSS left a comment!!" width="428" height="777" /></a></p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>11</wp:post_id>
<wp:post_date>2008-04-13 14:03:23</wp:post_date>
<wp:post_date_gmt>2008-04-13 19:03:23</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>my-comment-story-is-better-than-yours</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1211985075</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Permanent Redirects and CakePHP</title>
<link>http://jasonleveille.com/2008/04/permanent-redirects-and-cakephp/</link>
<pubDate>Mon, 14 Apr 2008 20:47:40 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=14</guid>
<description></description>
<content:encoded><![CDATA[I recently had the need to set up some permanent redirects for an application built on <a href="http://cakephp.org/">CakePHP</a>.  My first thought was to use a simple <a href="http://httpd.apache.org/docs/1.3/mod/mod_alias.html#redirect">.htaccess Redirect</a> at the top of my www .htaccess file, like such:
<pre class="xml" name="code">Redirect 301 /foo /bar</pre>
However, the result of the redirect was actually the following <abbr title="Uniform Resource Locator">url</abbr>:
<pre class="xml" name="code">http://foobar.com/bar?url=foo</pre>
This has to do with the QSA flag in the last RewriteRule of the root htaccess file.  The QSA flag indicates that a query string should be appended to the <abbr title="Uniform Resource Locator">url</abbr>.  In our case, foo is recognized as the query string and it ultimately is appended at the end of the bar redirect.  Not what I wanted, as the appending of foo to bar results in a 404 error.<!--more-->
<h2>Using a RewriteRule</h2>
My next thought was to set up a RewriteRule for foo, so that it would be redirected to bar.  Here is what I came up with, with its exact placement in the default CakePHP webroot htaccess file.  The really important thing here has to do with the placement of the rule:
<pre class="xml" name="code">RewriteEngine On

#rule to redirect foo to bar
RewriteRule ^foo$ /bar [R=301,L]

RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^(.*)$ index.php?url=$1 [QSA,L]</pre>
As you can see here, I am using the R and L flags at the end of the RewriteRule.  These flags serve the following purpose:

<strong>R</strong>: <a href="http://www.yourhtmlsource.com/sitemanagement/urlrewriting.html#forcingnewrequests">Forces a redirect</a> to the new url, and loads the new page
<strong> L</strong>: Ensures that this is the last rule that is processed by the server in this file.  This is important here, as without the L flag the server would move on to the last rewrite rule, essentially ignoring the R flag for our redirect rule, and it would end up generating a 404 error.

Here's a great set of <a href="http://www.ilovejackdaniels.com/cheat-sheets/mod_rewrite-cheat-sheet/">cheatsheets</a> if you're interested in reading more.
<h2>Other options</h2>
Of course there are other options for redirects, including <a href="http://en.wikipedia.org/wiki/Meta_refresh">meta refresh</a> or <a href="http://us.php.net/header">PHP header</a>, however I didn't want to clutter up the directory with pages whose only purpose was that of setting up a redirect.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>14</wp:post_id>
<wp:post_date>2008-04-14 15:47:40</wp:post_date>
<wp:post_date_gmt>2008-04-14 20:47:40</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>permanent-redirects-and-cakephp</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1208394608</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Remove www Subdomain</title>
<link>http://jasonleveille.com/2008/04/remove-www-subdomain/</link>
<pubDate>Tue, 15 Apr 2008 18:44:36 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=13</guid>
<description></description>
<content:encoded><![CDATA[It seems that more and more people are moving away from the inclusion of <abbr title="World Wide Web">www</abbr> in their <abbr title="Uniform Resource Locator">url</abbr>. <a href="http://www.sitepoint.com/">SitePoint</a> recently <a href="http://www.sitepoint.com/blogs/2008/02/19/www-or-no-www/">wrote about the subject</a>, and this past February  <a href="http://www.456bereastreet.com/">Roger Johansson</a> also <a href="http://www.456bereastreet.com/archive/200802/make_sure_your_website_works_with_or_without_www/">wrote an article on the topic</a>.   Roger's article was really more about making sure your site works with our without www (I couldn't agree more).  You wouldn't get any more from me than you could get from taking a look at the articles I've referenced, therefore I'll just skip to the good stuff.  In general I feel that the inclusion of www is just a waste of address bar space.  For this blog I have decided to throw it to the dogs.  If I remember correctly, "<a href="http://webword.com/moving/wwwremoval.html">Removing the Ws from URLs</a>", an article from 2002, was a big help for me on my path to www enlightenment.
<h2>Removing WWW through VirtualHost</h2>
<pre name="code" class="xml">&lt;VirtualHost ipaddress&gt;
ServerAdmin root@localhost
ServerAdmin webmaster@blueatlas.com
DocumentRoot /path/to/public_html/
ServerName jasonleveille.com
ErrorLog /path/to/logs/jasonleveille.com/error_log
TransferLog /path/to/logs/jasonleveille.com/access_log
&lt;/VirtualHost&gt;

&lt;VirtualHost ipaddress&gt;
ServerName jasonleveille.com
ServerAlias www.jasonleveille.com
ServerAlias ww.jasonleveille.com
Redirect permanent / http://jasonleveille.com/
&lt;/VirtualHost&gt;</pre>

<h2>Removing WWW through .htaccess</h2>

Perhaps you don't have access to your VirtualHost block.  Not a problem if your host/server/whatever allows you to override directives via .htaccess.  This <a href="http://daringfireball.net/2006/05/htaccess_redirection">article on using .htaccess</a> from <a href="http://daringfireball.net/">Daring Fireball</a> is a good reference regarding this topic.

<pre name="code" class="xml">RewriteEngine on
RewriteBase /
RewriteCond %{HTTP_HOST} ^www\.yourdomain\.com$
RewriteRule (.*) http://yourdomain.com/$1 [R=Permanent]</pre>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>13</wp:post_id>
<wp:post_date>2008-04-15 13:44:36</wp:post_date>
<wp:post_date_gmt>2008-04-15 18:44:36</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>remove-www-subdomain</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1209986127</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>7</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-05-05 06:16:37</wp:comment_date>
<wp:comment_date_gmt>2008-05-05 11:16:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[<a href="http://www.codinghorror.com/blog/archives/001109.html" rel="nofollow">More about www</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Avectra Member Management API</title>
<link>http://jasonleveille.com/2008/04/avectra-member-management-api/</link>
<pubDate>Fri, 18 Apr 2008 13:40:57 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=15</guid>
<description></description>
<content:encoded><![CDATA[Recently I worked on a project where all member data was being managed through a third party member management service, provided by a company named <a href="http://www.avectra.com/eweb/StartPage.aspx?site=Avectra07">Avectra</a>.  The product does more than manage member data from the looks of things, but all I cared about was interaction with the member management <abbr title="Application Programmer's Interface">API</abbr>.

I had to authenticate against an external data source, as well as query the data source for member information when needed.  Avectra does have a web service API which it has named xWeb.  Here is a quote from <a href="http://wiki.avectra.com/index.php?title=NetFORUM">their Wiki</a>:
<blockquote>xWeb is netFORUM's XML web services application. netFORUM is an enterprise level Association Management System (AMS) developed by Avectra that allows associations to manage their customers and related activities. netFORUM is used by association staff, members, and the public at large.</blockquote><!--more-->
<h2>Interacting with the <abbr title="Application Programmer's Interface">API</abbr></h2>
After a successful authentication with Avectra, the authenticated user is presented with a token that they pass along with API requests.  Pretty standard stuff.  The Wiki does an ok job of explaining authentication and login (two different things), therefore I'll jump right to the good stuff.  If you're stuck on authentication/weblogin please let me know.

For interacting with the <abbr title="Application Programmer's Interface">API</abbr> I created a class file to abstract, at least to a small degree, some of the details of consuming the service.  Here it is:

<pre name="code" class="php">
&lt;?php

/*
 * @author: Jason Leveille
 * Provides access to avectra web services
 */

class Avectra
{

   //Avectra organization api username and password (not member username/password) to access web services
   private $user = 'user';
   private $pass = 'password';

   //Avectra paths to xweb and eweb.  This is handy so that you can easily switch back and fourth between dev and production
   private $xweb = 'www.mencnet.org/xweb/';
   private $eweb = 'https://www.mencnet.org/netforummenctest/eweb/';

   /**
   * Grabs data associated with a member based on customer key / token
   * @param $cst_key Customer Key to search on
   */
   public function getMemberDataByKey($cst_key) {
      
      if(empty($cst_key))
      {
         return false;
      }
      
      $memberData = sprintf('https://%s:%s@%snetFORUMXML.asmx/GetIndividualInformation?IndividualKey=%s', $this->user, $this->pass, $this->xweb, $cst_key);
      
      //The simplest solution is to call simplexml_load_file directly, however this was causing issues on Solaris 10, php 5.2.  Didn't have time to investigate, so I went with load_string
      //return simplexml_load_file($memberData);
      
      $data = simplexml_load_string(file_get_contents($memberData));
      
      //make sure that the returned xml file actually contains data
      if(empty($data->IndividualObject[0]->eml_address))
      {
         return false;
      }

      return $data;
      
   }
   

   /**
   * Grabs data associated with a member based on member email
   * @param $email Member email to search on
   */
   public function getMemberDataByEmail($email) {
      if(empty($email))
      {
         return false;
      }

      $memberData = sprintf('https://%s:%s@%snetFORUMXML.asmx/GetQuery?szObjectName=%s&szColumnList=%s&szWhereClause=%s&szOrderBy=%s', 
         $this->user, 
         $this->pass, 
         $this->xweb,
         'Individual',
         'ind_first_name, ind_last_name, cst_org_name_dn, adr_city, adr_state, eml_address',
         sprintf("eml_address = '%s'", $email),
         "ind_last_name"
      );

      return simplexml_load_file($memberData);
   }

   /**
   * Grabs the url of the avectra eweb application
   */
   public function getEwebUrl() {
      return $this->eweb;
   }
}
?&gt;
</pre>

So, for example, to retrieve data about a specific member, and to store that data in session variables for later use, your code might look similar to the following:

<pre class="php" name="code">
function login_success($cst_key = null) {
   
   if(!$cst_key)
   {
      //set error message and redirect
   }
   
   //ensure clean referer data
   $original_referer = $this->clean->stripScripts($this->params['url']['ref']);
   
   //Avectra object
   //include avectra class file, for example, in CakePHP
   App::import('Vendor', 'Avectra');
   $avectra = new Avectra();
      
   //ensure a clean customer key
   $cst_key = $this->clean->stripScripts($cst_key);

   //if we successfully load the associated user data
   if($data = $avectra->getMemberDataByKey($cst_key))
   {         
      $data = $data->IndividualObject[0];
               
      $this->Session->write("Member.memberId", $this->clean->stripScripts($data->eml_address));
      $this->Session->write("Member.firstName", $this->clean->stripScripts($data->ind_first_name));
      $this->Session->write("Member.lastName", $this->clean->stripScripts($data->ind_last_name));
      $this->Session->write("Member.email", $this->clean->stripScripts($data->eml_address));
      $this->Session->write("Member.location", $this->clean->stripScripts($data->adr_city . ', ' . $data->adr_state));
      $this->Session->write("Member.loggedIn", true);

      $this->Session->write("Member.customerKey", $cst_key); 
               
      //indicate successful login and redirect to original referrer
      
   }
   else
   {
      //set error message and redirect
   }
}

</pre>

<h2>The SOAP Alternative</h2>

The <a href="http://wiki.avectra.com/index.php?title=XWeb:PHP">Avectra Wiki examples</a> are slanted heavily in the direction of <a href="http://en.wikipedia.org/wiki/SOAP"><abbr title="Simple Object Access Protocol">SOAP</abbr></a>, however in this instance I just thought it was overkill.  I figured the response was going to come back in <abbr title="eXtensible Markup Language">XML</abbr>, so I would just use <a href="http://us3.php.net/simplexml_load_file">simplexml_load_file</a> and pass in the <abbr title="Uniform Resource Identifier">URI</abbr>.  The application lives with <a href="http://www.sun.com/software/solaris/index.jsp">Solaris 10</a> and PHP 5.2.   For some reason simplexml_load_file was failing under certain boundary cases that I couldn't quite pin down.  This was an easy fix as I just used <a href="http://us3.php.net/manual/en/function.simplexml-load-string.php">simplexml_load_string</a> and <a href="http://us3.php.net/manual/en/function.file-get-contents.php">file_get_contents</a> to retrieve the xml response.  An extra step, but it seemed to solve whatever the issue was that I was having.  So, all I needed to do was make sure that I had the properly constructed <abbr title="Uniform Resource Identifier">URI</abbr>, and that I could authenticate.  Authentication is simply handled by sending in the username:password combination as part of the request.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>15</wp:post_id>
<wp:post_date>2008-04-18 08:40:57</wp:post_date>
<wp:post_date_gmt>2008-04-18 13:40:57</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>avectra-member-management-api</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1210246490</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>title</wp:meta_key>
<wp:meta_value>Avectra Web Services Integration</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>description</wp:meta_key>
<wp:meta_value>Integration with third party member management service from Avectra.</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>keywords</wp:meta_key>
<wp:meta_value>avectra, api, xml, web services</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>11</wp:comment_id>
<wp:comment_author><![CDATA[Darryl Hopkins]]></wp:comment_author>
<wp:comment_author_email>dhopkins@avectra.com</wp:comment_author_email>
<wp:comment_author_url>http://wiki.avectra.com/index.php?title=User:Dhopkins</wp:comment_author_url>
<wp:comment_author_IP>72.205.3.117</wp:comment_author_IP>
<wp:comment_date>2008-05-07 22:19:45</wp:comment_date>
<wp:comment_date_gmt>2008-05-08 03:19:45</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi, thanks for posting this informative case study.  I have linked to your page from the Avectra wiki.
Thanks, Darryl Hopkins (Avectra)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>12</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-05-08 06:35:31</wp:comment_date>
<wp:comment_date_gmt>2008-05-08 11:35:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[No problem Darryl!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>A Simple REST API Toolkit</title>
<link>http://jasonleveille.com/2008/04/a-simple-rest-api-toolkit/</link>
<pubDate>Mon, 21 Apr 2008 13:14:15 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=21</guid>
<description></description>
<content:encoded><![CDATA[Last week <a href="http://www.blueatlas.com">Dave</a> and I were trying to figure out the best way to synchronize member data from an asp application with a <a href="http://www.wordpress.org">WordPress</a> installation.  I don't remember how it came up in conversation, but in a flurry of chatter we decided that we should build a <a href="http://en.wikipedia.org/wiki/Representational_State_Transfer">RESTful</a> <abbr title="Application Programmers Interface">API</abbr> to allow the applications in question to communicate.  In the interest of re-usability we also decided that we should build a generic toolkit.  One that could easily be used to expose an <abbr title="Application Programmers Interface">API</abbr> for any supported database, through <abbr title="PHP Hypertext Preprocessor">PHP</abbr>.  So, using this toolkit you should quite easily get your <a href="http://www.lassosoft.com/">Lasso</a> application talking with your <a href="http://punbb.org/">PunBB</a> software, if that's what you need.

So was born <a href="http://github.com/leveille/rest-toolkit/">rest-toolkit</a>. We have released an alpha version of the project, so download it and give it a try.  I hope you don't mind a lack of formal documentation.  Depending on how things go documentation will follow.<!--more-->
<h3>The quick install guide</h3>
<ul>
	<li>Find a PHP project you have in the works that talks with a database</li>
	<li>Make sure you don't care about the data in the database, especially if you're going to be using DELETE</li>
	<li>Unzip the rest-toolkit into a directory (perhaps /api)</li>
	<li>Open config/config.php and make any changes that need to be made</li>
	<li>Modify the database connection information in database/mysqli.php.  If you want to use regular old mysql you'll have to make some additions to the mysql.php file (take a look at the iDatabase interface file for some clues)</li>
	<li>Do you have a users table in your database?  If so, visit http://your.url/restapidir/users/, or http://your.url/restapidir/users.xml, or http://your.url/restapidir/users.json, or http://your.url/restapidir/users/1.xml, or http://your.url/restapidir/users/1.json.</li>
	<li>Take a look at the class.Blocks.php example file for an example of an extended resource file.</li>
	<li>Of course, before using this in anything even remotely resembling production you would need to protect your API directory and require authentication to access the REST resources.  That part is left up to you.</li>
</ul>
<h3>Some Highlights</h3>
<ul>
	<li>When you make your REST request the query will be built dynamically based on the field names you send with the request.  So, 95% of the work is already done for you.</li>
	<li>Include an xml or json extension with your request to modify the response type.  Need something other than xml or json?  You can easily add other extensions and mime-types.</li>
	<li>Want a clean url, but your clean resource name doesn't nicely match a database table?  Don't worry,  you can extend the resource base class with a class for your clean resource name (for example, class.Users.php), and map the resource to any table in your database.  By default the resource name you include in your url will map to a table of the same name.</li>
	<li>Need to limit what is returned/updated/created in a query?  These items are easily configurable in your extended class.</li>
	<li>Need to limit the resources that your API can talk with?  In the resource base class you can define the resources the API should expect to receive requests for.</li>
</ul>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>21</wp:post_id>
<wp:post_date>2008-04-21 08:14:15</wp:post_date>
<wp:post_date_gmt>2008-04-21 13:14:15</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>a-simple-rest-api-toolkit</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1233542492</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>title</wp:meta_key>
<wp:meta_value>Constructing a simple REST API toolkit</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>description</wp:meta_key>
<wp:meta_value>Walking through the construction of a simple REST API toolkit.</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>keywords</wp:meta_key>
<wp:meta_value>web services, rest, api</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>JavaScript parseInt Usage</title>
<link>http://jasonleveille.com/2008/04/javascript-parseint-usage/</link>
<pubDate>Wed, 23 Apr 2008 00:41:37 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=23</guid>
<description></description>
<content:encoded><![CDATA[I have had a bit of a hair pulling experience over the last few hours, until finally I got some sense and looked at the <a href="http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Global_Functions:parseInt">Definition and Usage of parseInt</a>.  Here's the example:
<pre name="code" class="javascript">&lt;script type="text/javascript"&gt;
   var data = new Array('007', '008', '009', '010');
   for(var x in data)
   {
      console.log(data[x] + ' -> ' + parseInt(data[x]));
   }
&lt;/script&gt;</pre>
And the result:
<pre>
007 -> 7
008 -> 0
009 -> 0
010 -> 8</pre>
What I wanted was the result 7, 8, 9, and 10.  The result seen above comes from the fact that, because I have a leading 0 in my strings, parseInt is reverting to a base 8 (<a href="http://en.wikipedia.org/wiki/Octal">octal</a>) radix.  The solution of course is to specify a base 10 (decimal) radix.
<pre class="javascript" name="code">&lt;script type="text/javascript"&gt;
   var data = new Array('007', '008', '009', '010');
   for(var x in data)
   {
      console.log(data[x] + ' -> ' + parseInt(data[x], 10));
   }
&lt;/script&gt;</pre>
And the result:
<pre>
007 -> 7
008 -> 8
009 -> 9
010 -> 10</pre>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>23</wp:post_id>
<wp:post_date>2008-04-22 19:41:37</wp:post_date>
<wp:post_date_gmt>2008-04-23 00:41:37</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>javascript-parseint-usage</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1208911385</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>description</wp:meta_key>
<wp:meta_value>ParseInt description and usage.</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>title</wp:meta_key>
<wp:meta_value>JavaScript parseInt Usage</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>keywords</wp:meta_key>
<wp:meta_value>javascript, parseInt, radix</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>150</wp:comment_id>
<wp:comment_author><![CDATA[marco]]></wp:comment_author>
<wp:comment_author_email>kill_kenny@ciaoweb.it</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>89.186.85.242</wp:comment_author_IP>
<wp:comment_date>2009-01-21 05:21:13</wp:comment_date>
<wp:comment_date_gmt>2009-01-21 10:21:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great! Thanks a lot for this helpfull info!!!! :)

You saved me!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>200</wp:comment_id>
<wp:comment_author><![CDATA[Vikas]]></wp:comment_author>
<wp:comment_author_email>vikas.udaseen@newgen.co.in</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>125.21.242.2</wp:comment_author_IP>
<wp:comment_date>2009-03-09 00:54:10</wp:comment_date>
<wp:comment_date_gmt>2009-03-09 05:54:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks a lot dear, for the info. I had the same problem but I dint look for the method overload. You indirectly closed my 1 catastrophic bug ..:-)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>What's up with CakePHP?</title>
<link>http://jasonleveille.com/2008/04/whats-up-with-cakephp/</link>
<pubDate>Wed, 23 Apr 2008 01:13:42 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=24</guid>
<description></description>
<content:encoded><![CDATA[I've had my focus in a lot of other areas for a few weeks, and in that time is seems like quite a bit has happened on the <a href="http://cakephp.org/">CakePHP</a> front.  It seems that there has been a subtle shift in how the framework will evolve from here forward.  <a href="http://rd11.com/">gwoo</a> puts it much better than I can in his recent bakery article, "<a href="http://bakery.cakephp.org/articles/view/after-3-years-looking-back-and-moving-ahead">After 3 years, looking back and moving ahead</a>".  In the grand scheme of things there are much more interesting things between the lines of what gwoo has written, however the thing that got me most excited was located at the very end:

<blockquote>
Stay tuned for more new developments and expect the next 1.2 release in the coming weeks.
</blockquote>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>24</wp:post_id>
<wp:post_date>2008-04-22 20:13:42</wp:post_date>
<wp:post_date_gmt>2008-04-23 01:13:42</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>whats-up-with-cakephp</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1208913273</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>My Classes Back Online</title>
<link>http://jasonleveille.com/2008/04/my-classes-back-online/</link>
<pubDate>Thu, 24 Apr 2008 01:13:30 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=25</guid>
<description></description>
<content:encoded><![CDATA[It only took 6 months or so, but I have finally taken the time to get my old teaching site (<a href="http://my-classes.org">http://my-classes.org</a>) back online.  When I was teaching I knew that a lot of people were visiting the site, specifically for the assignments that I had posted online.  Believe me, teachers are always trying to find good lesson plans.  After the 5th email this week regarding when the site would be back I finally broke down and found the time.  

Thanks to my employer, <a href="http://www.blueatlas.com">Blue Atlas Interactive</a>, for providing the hosting, not only for this blog, but now also for <a href="http://my-classes.org">my-classes.org</a>.  Thanks to Dave for taking the time during work to get me the root shell password and my ftp information.  ]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>25</wp:post_id>
<wp:post_date>2008-04-23 20:13:30</wp:post_date>
<wp:post_date_gmt>2008-04-24 01:13:30</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>my-classes-back-online</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1209001108</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>16</wp:comment_id>
<wp:comment_author><![CDATA[sonia rodriguez]]></wp:comment_author>
<wp:comment_author_email>sonia@pixelrhythms.com</wp:comment_author_email>
<wp:comment_author_url>http://www.pixelrhythms.com</wp:comment_author_url>
<wp:comment_author_IP>67.188.193.116</wp:comment_author_IP>
<wp:comment_date>2008-05-13 22:12:59</wp:comment_date>
<wp:comment_date_gmt>2008-05-14 03:12:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi Jason, 
I'm a new web design teacher at a local charter high school and although I know about web design and development, teaching it to a classroom full of students is quite challenging. I fell upon your class blog doing a search on high school web design classes. It has been a lot of help as I begin to prepare for next year. I noticed you used a book in your course. Did you ever publish this book? If not do you recommend any? Any suggestions would be greatly appreciated. Thanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>17</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-05-14 07:27:36</wp:comment_date>
<wp:comment_date_gmt>2008-05-14 12:27:36</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi, Sonia.

Yes, doing Web Design is quite different than teaching Web Design.  I am glad that you have found my teaching website useful.  I can't say that I like(d) all the Web Design assignments I have online, but, as you know I'm sure, it isn't always possible to create the perfect assignment.

Anyway, I did have a book on hand while I was teaching, however we didn't use it very often.  I believe it was a <a href="http://www.lvp.com/dmx04.htm" rel="nofollow">Lawrenceville Press book</a>.  I also had big plans of writing my own book (with one of my College Professors), which I/we actually got 8 or 9 chapters into before I/we lost interest.  3 months ago we were contacted by a publisher, and we shared a few chapters, however we haven't heard anything back.  I may or may not post a chapter on this blog in the near future.

If you have further questions, etc, don't hesitate to ask.  I'll try to help in whatever way I can.  You might be interested in subscribing to the <a href="http://www.webstandards.org/action/edutf" rel="nofollow">WASP Education Task Force</a> mailing list.  They are doing some great things in regards to curriculum organization.  I follow the mailing list but don't actively take part.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>The Power of Virtualization</title>
<link>http://jasonleveille.com/2008/04/the-power-of-virtualization/</link>
<pubDate>Mon, 28 Apr 2008 14:42:12 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=26</guid>
<description></description>
<content:encoded><![CDATA[I've spent a considerable amount of time lately creating <a href="http://www.vmware.com/virtualization/">virtual machines</a> on my work and home computers.  In an effort to come up with a set of environments that make developing and testing applications easier I initially setup <a href="http://www.microsoft.com/windows/downloads/virtualpc/default.mspx">Microsoft Virtual <abbr title="Personal Computer">PC</abbr> 2007</a>.  In the few weeks that I've used it I have found that I need more than just Windows options in my virtual environments.  This weekend I decided to give <a href="http://www.vmware.com/products/server/">VMware Server</a> a test drive ... and just as quickly decided to uninstall <abbr title="Microsoft">MS</abbr>  Virtual <abbr title="Personal Computer">PC</abbr>.  VMware Server is a free download, and according to the vmware website:
<blockquote>VMware Server installs on any existing server hardware and partitions a physical server into multiple virtual machines by abstracting processor, memory, storage and networking resources, giving you greater hardware utilization and flexibility. Streamline software development and testing and simplify server provisioning as you utilize the ability to "build once, deploy many times."</blockquote>
<!--more-->At <a href="http://www.blueatlas.com">BlueAtlas</a> I work with clients who need to be on Windows and I work with more clients whose applications run under Linux, or, in one case, Solaris.  More often than not I find myself developing in Windows (Vista), and pushing to Linux.  This has worked fine for me, however I don't believe it is optimal.  Enter VMware Server.
<h2>VMware Server</h2>
The really cool thing about VMware is that it allows me to take a snapshot of my Virtual Machine at any point in time.  So, for example, I can take a snapshot, screw up my environment (which has never happened), and revert back to the snapshot.  The other really sweet thing about <a href="http://www.vmware.com/">vmware</a> in general is that they offer <a href="http://www.vmware.com/appliances/">Virtual Appliances</a>.  A virtual appliance is a "pre-built, pre-configured, ready-to-run enterprise applications packaged with an operating system inside a <a href="http://www.vmware.com/virtualization/">virtual machine</a>".  Find the application you want to run, download the appliance, and hit the ground running.  Right now I have <a href="http://www.ubuntu.com/">Ubuntu</a> running in a virtual machine, under a 30GB, 1024GB <abbr title="Random Access Memory">RAM</abbr> environment.  I also have WinXP Pro running in its own environment.  In either case I can add/remove memory to the virtual machine depending on the work I will be doing.  If I will be doing something that is memory intensive, I can just slide up the memory association prior to firing up the machine.
<h2>Not Everything is Going Smooth</h2>
I do need to say that not everything has gone smooth.  I did get my wireless working in Ubuntu, only to have it fail after I restarted the virtual machine.  In XP I can't even connect to the Internet wired.  How the hell do I get instant wired connection through Ubuntu and not XP?

I do have more work to do as I try to find the perfect setup, however I am committed to making this all work with VMware Server.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>26</wp:post_id>
<wp:post_date>2008-04-28 09:42:12</wp:post_date>
<wp:post_date_gmt>2008-04-28 14:42:12</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>the-power-of-virtualization</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1209394006</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Displaying The Correct Timezone Time</title>
<link>http://jasonleveille.com/2008/04/displaying-the-correct-timezone-time/</link>
<pubDate>Mon, 28 Apr 2008 20:37:15 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=27</guid>
<description></description>
<content:encoded><![CDATA[Yes, I know, displaying the time with JavaScript.  Something that's been written about since the dawn of time.  Following is a trivial bit of code, but one that I thought others might find useful.  We are working with a client whose application broadcasts meetings (and screen captures from those meetings) to client computers.  A very cool project that I'd like to write about some day.  With regard to time, there are 2 requirements:
<ol>
	<li>Time must be in <a href="http://www.timeanddate.com/library/abbreviations/timezones/na/est.html">Eastern Standard Time</a> (or <a href="http://www.timeanddate.com/library/abbreviations/timezones/na/edt.html">Eastern Daylight Time</a>)</li>
	<li>They shouldn't have to configure any settings to adjust for <a href="http://en.wikipedia.org/wiki/Daylight_saving_time">daylight savings time</a></li>
</ol>
<!--more-->
If you've ever dealt with timezones in JavaScript it becomes apparent pretty quickly that, unless you maintain some sort of configuration file to record the start and end time for <abbr title="Daylight Savings Time">DST</abbr>, it's going to be impossible to display the correct time.  This is due to the fact that <a href="http://en.wikipedia.org/wiki/Utc"><abbr title="Coordinated Universal Time">UTC</abbr></a> time doesn't account for <abbr title="Daylight Savings Time">DST</abbr>, and you can never be certain of what shape the system clock is going to be in on the client computer.

So, quite simply, we pull in the time from the server hosting the application (via <a href="http://www.jquery.com">jQuery</a>'s <a href="http://docs.jquery.com/Ajax/jQuery.getJSON#urldatacallback">getJSON</a>), pass the timestamp (<a href="http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Global_Objects:Date#Parameters">represented in milliseconds</a>) into the JavaScript Date constructor, and set up a <a href="http://developer.mozilla.org/en/docs/DOM:window.setInterval">setInterval</a>, set to 1000 milliseconds.

<p>The DOM elements that are populated with the time</p>
<pre name="code" class="html">&lt;body&gt;
&lt;div id="time"&gt;
&lt;span class="time"&gt;&lt;/span&gt;
(&lt;span class="zone"&gt;&lt;/span&gt;)
&lt;/div&gt;
&lt;/body&gt;</pre>

<p>The <a href="http://www.php.net">PHP</a> which sets up the <a href="http://www.json.org/"><abbr title="JavaScript Object Notation">json</abbr></a> string.  This could easily be adopted for other languages.</p>

<pre name="code" class="php">&lt;?php
   //jquery supports the text/javascript and application/json headers
   header('Content-Type: text/javascript');

   //Eastern Standard Time
   date_default_timezone_set('America/New_York');

   //Allowing for multiple items here provides the ability
   //to include times in other time zones
   //multiplying by 1000 as javascript Date constructor accepts the numerical represenation
   //of the data in milliseconds
   $time = array(
      0 =&gt; array('timestamp' =&gt; time() * 1000, 'zone' =&gt; date('T'))
   );

   echo sprintf('%s', json_encode($time));
?&gt;</pre>

<p>Finally, the JavaScript.</p>

<pre name="code" class="JavaScript">
var TIME = function(){

    var milliseconds = null;
    
    return {
    
        init: function(){
            //lazy load milliseconds
            if (!milliseconds) {
               
                $.getJSON("time.php", function(r){
                   
                    //ensure that we are getting the proper data
                    if(r[0].zone && r[0].timestamp) {
                       $("#time .zone").html(r[0].zone);
                       milliseconds = r[0].timestamp;
                       TIME.update(new Date(milliseconds));
                       window.setInterval("TIME.init()", 1000);
                    }
                    else {
                       return;
                    }
                    
                });
            }
            else {
                TIME.update(new Date(milliseconds));
            }
        },
        
        update: function(time){
            $("#time .time").html(time.toLocaleTimeString());
            milliseconds += 1000;
        }
    };
}
();</pre>

<p>As I've mentioned, this really is a trivial bit of code, however it does have its use ... especially if it is mandated by the client.  Pulling a timestamp in from the server is nothing new, however you may not have given thought to pulling in the timestamp once (through the <a href="http://en.wikipedia.org/wiki/Lazy_loading">lazy loading</a> of the milliseconds variable, which we take advantage of to ensure that we only invoke the getJSON call once) rather than with each iteration of setInterval (as can be seen above).  Try not to drool over my JavaScript time display programming prowess.  Enjoy.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>27</wp:post_id>
<wp:post_date>2008-04-28 15:37:15</wp:post_date>
<wp:post_date_gmt>2008-04-28 20:37:15</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>displaying-the-correct-timezone-time</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1210182775</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>description</wp:meta_key>
<wp:meta_value>Displaying Time Through JavaScript</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>title</wp:meta_key>
<wp:meta_value>Displaying Time Through JavaScript</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>keywords</wp:meta_key>
<wp:meta_value>javascript, time</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>10</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-05-07 06:46:04</wp:comment_date>
<wp:comment_date_gmt>2008-05-07 11:46:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[More about timezones:

<a href="http://derickrethans.nl/detecting_timezone_by_ip.php" rel="nofollow">http://derickrethans.nl/detecting_timezone_by_ip.php</a>]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>JavaScript and Depth First Search / Iterative Deepening</title>
<link>http://jasonleveille.com/2008/05/javascript-and-depth-first-search-iterative-deepening/</link>
<pubDate>Thu, 01 May 2008 15:06:43 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=28</guid>
<description></description>
<content:encoded><![CDATA[I have taken some time to refactor <a href="http://jasonleveille.com/cs520/assignment3/">my original implementation</a> of <a href="http://en.wikipedia.org/wiki/Depth-first_search">Depth First Search</a> and <a href="http://en.wikipedia.org/wiki/Iterative_deepening_depth-first_search">Iterative Deepening</a> in JavaScript.  Namely, I removed any dependencies on the <a href="http://extjs.com/">ExtJS</a> JavaScript library, and added dependencies to the <a href="http://jquery.com">jQuery</a> library.  The advantage here is that the combined size of the files is now &lt; 60k, whereas the original implementation was needlessly around 500k.
<h2>The Goodies</h2>
<ul>
	<li><a href="http://jasonleveille.com/play/dfsid/index.php">Depth First Search and Iterative Deepening Implementation</a></li>
	<li><a href="http://jasonleveille.com/play/dfsid/dfs-id-javascript-implementation.zip">dfs-id-javascript-implementation.zip</a></li>
</ul>
<!--more-->
<h2>Credits</h2>
I mentioned it before, and I also mention it throughout my sourcecode, however a lot of credit for this JavaScript implementation goes to <a href="http://www.kirupa.com/">Kirupa</a>, and his <span class="header">"<a href="http://www.kirupa.com/developer/actionscript/depth_breadth_search.htm">Depth First and Breadth First Search</a>"</span> article.  His ActionScript implementation definitely made me believe that this could be accomplished in JavaScript.  Not only that, but his explanation of <abbr title="Depth First Search">DFS</abbr> and <abbr title="Breadth First Search">BFS</abbr> were superb. Thanks.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>28</wp:post_id>
<wp:post_date>2008-05-01 10:06:43</wp:post_date>
<wp:post_date_gmt>2008-05-01 15:06:43</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>javascript-and-depth-first-search-iterative-deepening</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1209654403</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>keywords</wp:meta_key>
<wp:meta_value>Iterative Deepening, Depth First Search, JavaScript</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>description</wp:meta_key>
<wp:meta_value>JavaScript Implementation of Depth First Search and Iterative Deepening</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>title</wp:meta_key>
<wp:meta_value>JavaScript Implementation of Depth First Search and Iterative Deepening</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Optimizing Poor Code: Make it Hurt So Good</title>
<link>http://jasonleveille.com/2008/05/optimizing-poor-code-make-it-hurt-so-goo/</link>
<pubDate>Thu, 01 May 2008 17:52:54 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=29</guid>
<description></description>
<content:encoded><![CDATA[I recently finished my first <a href="http://www.cakephp.org">CakePHP</a> application.  Not only was the application the largest I have ever written, but I had never worked with <a href="http://www.cakephp.org">CakePHP</a> before.  So, needless to say, not only did I have to overcome a learning curve, but I had to deal with all that comes with writing a large application.  Today I was contacted by the project manager regarding a bug which had surfaced in the application.  In my quest to squash the bug I discovered a script which was causing a section of the administrator to act very pathgish.  In examining exactly what was going on, I realized that there were 200+ calls being made to the database.  Ok.  That's bad.  I'd like to clarify that I was the one who wrote the original offending code.  In about 2 minutes of work I was able to bring the query count down to 2, and reduce the page response time considerably. <!--more-->
<h2>Always Watch Your Bindings</h2>
On the one hand it hurts my ego to know that I could write something so bad.  On the other hand I can kind of forgive myself, as the timeline was tight, the application had so many moving parts, and the learning curve was present.  Either way, it felt really good to see such a performance improvement with such minimal effort.  Part of my problem is that early in the application I wasn't paying attention to <a href="http://bakery.cakephp.org/articles/view/bindable-behavior-control-your-model-bindings">Cake's binding of associations</a>.  Today was a good lesson in why I should always pay attention to bindings in CakePHP.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>29</wp:post_id>
<wp:post_date>2008-05-01 12:52:54</wp:post_date>
<wp:post_date_gmt>2008-05-01 17:52:54</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>optimizing-poor-code-make-it-hurt-so-goo</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1209664374</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>title</wp:meta_key>
<wp:meta_value>Model Associations in CakePHP</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>description</wp:meta_key>
<wp:meta_value>Paying attention to model associations in CakePHP.</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>DotNet isn't Always Bad</title>
<link>http://jasonleveille.com/2008/05/dotnet-isnt-always-bad/</link>
<pubDate>Fri, 02 May 2008 19:24:51 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=30</guid>
<description></description>
<content:encoded><![CDATA[I spend most of my time in <abbr title="PHP Hypertext Preprocessor">PHP</abbr> and JavaScript.  Just the way I like it.  6 months ago I refactored a .net application from a codebase which originated in India.  I've seen a lot of good code come from India, but this was some Ravioli code.  Ultimately the client ended up happy, but I found myself cursing .net 4 days out of my 5 day workweek.  Today I was asked to provide password reset functionality to a portion of the application.  Because we made the decision early on to use <a href="http://aspnet.4guysfromrolla.com/articles/120705-1.aspx">ASP.NET 2.0's membership service</a>, adding the feature was as easy as dragging and dropping a <a href="http://msdn.microsoft.com/en-us/library/ms178329.aspx">PasswordRecovery login control</a>.  In a business where so much of developing an application is maintenance, this was really nice.  There are a lot of things I don't like about .net, but I thought this one deserved some accolades.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>30</wp:post_id>
<wp:post_date>2008-05-02 14:24:51</wp:post_date>
<wp:post_date_gmt>2008-05-02 19:24:51</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>dotnet-isnt-always-bad</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1209756292</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Rest Toolkit - User Defined Actions</title>
<link>http://jasonleveille.com/2008/05/rest-toolkit-user-defined-actions/</link>
<pubDate>Mon, 05 May 2008 15:46:24 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=31</guid>
<description></description>
<content:encoded><![CDATA[This morning I got into work early (6:30am, which is early for me) and decided to add the ability to define special methods to <a href="http://github.com/leveille/rest-toolkit/">rest-toolkit</a> (<a href="http://jasonleveille.com/2008/04/a-simple-rest-api-toolkit/">original blog entry</a>).  "Special" in this case means adding the ability to call specific methods which allow special processing for a resource.<!--more-->

For example, making a rest request for news items might look something like this:
<pre>GET /news</pre>
This request should return all news items.  On the other hand, the following would return all recent news items.  Recent being defined in the recent method:
<pre>GET /news;recent</pre>
Those of you who are observant will notice that I have made use of the semi colon to separate the resource and the special method. Yeah, I have my <a href="http://www.pragprog.com/titles/rails2/agile-web-development-with-rails">Agile Web Development with Rails</a> book open to page 415 right now.  I stole your semi colon ;-).  Rest toolkit also provides the ability to make requests which might also look like the following:
<pre>GET /news;recent.json
GET /news;recent.xml
PUT /news/1;lock</pre>
I invite you to take a closer look at the toolkit, and to provide me with feedback.  I have used the application in production for an asp application, and have plans to use it in production for a <a href="http://en.wikipedia.org/wiki/Lasso_programming_language">Lasso application</a> that needs to communication with <a href="http://punbb.informer.com/">punbb</a>.  I can't guarantee that it is free of bugs (I should really write some tests for this thing), or that you won't run into any hitches.  If you do please be sure to let me know.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>31</wp:post_id>
<wp:post_date>2008-05-05 10:46:24</wp:post_date>
<wp:post_date_gmt>2008-05-05 15:46:24</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>rest-toolkit-user-defined-actions</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1233542428</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>keywords</wp:meta_key>
<wp:meta_value>rest, api, php, open source, rest toolkit</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>description</wp:meta_key>
<wp:meta_value>The toolkit provides the ability to easily expose a restful api.</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>title</wp:meta_key>
<wp:meta_value>Rest project for restful resource requests.</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>8</wp:comment_id>
<wp:comment_author><![CDATA[Doug Thompson]]></wp:comment_author>
<wp:comment_author_email>thompsond@hdsb.ca</wp:comment_author_email>
<wp:comment_author_url>http://www.actonhighschool.ca</wp:comment_author_url>
<wp:comment_author_IP>199.235.123.237</wp:comment_author_IP>
<wp:comment_date>2008-05-05 12:06:00</wp:comment_date>
<wp:comment_date_gmt>2008-05-05 17:06:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey Jason,

Congrats on the move from teaching.  I'm still at it up in Ontario here and we're going through a lot of php.sql stuff right now.  I'm trying to ditch the VB.6.0 to no avail.

I see you are using something called Cakephp?  What is that?  Could I use it for my students?

Thanks
Doug]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>9</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-05-05 12:28:58</wp:comment_date>
<wp:comment_date_gmt>2008-05-05 17:28:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey Doug,

Thanks.  Yeah, I'd say it's time to move on from VB 6.0.  I was lucky enough to be at a school that let me move on to .net w/ VS 2005 as soon as it was possible.

Everything you could possibly want to begin learning about CakePHP can be found at, or through, the <a href="http://cakephp.org/" rel="nofollow">cakephp.org</a> website.  In short, it is a PHP framework which takes care of a lot of the more mundane (and some of the not so mundane) tasks associated with creating any web application.  This in turn allows you to create the application more rapidly.  

I would say yes, it would be something you could use to teach PHP/Database with, though perhaps after teaching a quarter of the year on topics in PHP and a quarter of the year on topics in Database.  I would recommend that you only use it for a class of students who have already had a basic web design course, and who have had at least 1 year of programming.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Installing Aptana on Ubuntu 8.04</title>
<link>http://jasonleveille.com/2008/05/installing-aptana-on-ubuntu-804/</link>
<pubDate>Mon, 05 May 2008 18:47:13 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=32</guid>
<description></description>
<content:encoded><![CDATA[Quick install guide for <a href="http://www.aptana.com/">Aptana</a> on <a href="http://www.ubuntu.com/">Ubuntu</a> 8.04.  Modeled after the <span class="mw-headline"><a href="http://www.aptana.com/docs/index.php/Installing_Aptana_on_Linux#Installing_Aptana_Studio_on_Debian">Installing Aptana Studio on Debian</a> guide found at the Aptana page for <a href="http://www.aptana.com/docs/index.php/Installing_Aptana_on_Linux">Installing Aptana on Linux</a>.  The issue with the guide provided by Aptana (at least for Ubuntu) is that Ubuntu comes with FF 3 Beta 5 (as of the time of this writing) by default.  Aptana doesn't play nicely with FF 3 Beta 5, and after what appears to be a successful install, spits back an "embedded browser not available" error.  <strong>Note</strong>: you don't have to worry about uninstalling FF 3!</span><!--more-->
<ol>
	<li><strong>Install Java</strong> (sudo apt-get install sun-java6-jre sun-java6-plugin sun-java6-fonts)</li>
	<li><strong>Install Firefox 2</strong> (sudo apt-get install firefox-2)</li>
	<li><strong>Download and unzip aptana</strong> to /usr/local/aptana</li>
	<li><strong>Save the following script</strong> as runAptana.sh to /usr/local/aptana
#!/bin/bash
export MOZILLA_FIVE_HOME=/usr/lib/firefox
/usr/local/aptana/AptanaStudio</li>
	<li><strong>Make runAptana.sh executable</strong> (sudo chmod a+x runAptana.sh)</li>
	<li><strong>Create a desktop launcher</strong> for Aptana and point it at runAptana.sh
<ul>
	<li>Right click on your desktop</li>
	<li>Click on Create Launcher</li>
	<li>Name: Aptana</li>
	<li>Command: browse for runAptana.sh</li>
</ul>
</li>
	<li><strong>Open firefox-2 Profile Manager</strong> (sudo firefox-2 -ProfileManager)</li>
	<li><strong>Create ff Profile "aptana"</strong> dedicated for Aptana debugging.</li>
	<li><strong>Start ff with the aptana Profile</strong>: (sudo firefox-2 -P aptana)</li>
	<li><strong>Download from here</strong> <a class="external free" title="http://update.aptana.com/update/firebug.xpi" rel="nofollow" href="http://update.aptana.com/update/firebug.xpi">http://update.aptana.com/update/firebug.xpi</a> and install the firebug extension, modified for Aptana debugging. Close Aptana Profile of firefox.</li>
	<li>Start Aptana.
<ul>
	<li>Go to Run -&gt; Debug...</li>
	<li>click on the Web Browser within the left pane</li>
	<li>Press the 'New' button.</li>
	<li>Within the right pane: Name the new configuration "Firefox"</li>
	<li>Fill within:
<ul>
	<li>Browser executable: /usr/bin/firefox-2</li>
	<li>Arguments: -P aptana -no-remote</li>
</ul>
</li>
</ul>
</li>
</ol>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>32</wp:post_id>
<wp:post_date>2008-05-05 13:47:13</wp:post_date>
<wp:post_date_gmt>2008-05-05 18:47:13</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>installing-aptana-on-ubuntu-804</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1231720573</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>14</wp:comment_id>
<wp:comment_author><![CDATA[Matthew Hartman]]></wp:comment_author>
<wp:comment_author_email>matty@mattsfolio.com</wp:comment_author_email>
<wp:comment_author_url>http://www.mattsfolio.com</wp:comment_author_url>
<wp:comment_author_IP>202.7.176.130</wp:comment_author_IP>
<wp:comment_date>2008-05-12 20:03:26</wp:comment_date>
<wp:comment_date_gmt>2008-05-13 01:03:26</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great post, I was searching for a while why Aptana was playing up with Ubuntu 8.04.

It's the Firefox 3 Beta 5 issue.

Thanks for sharing.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>15</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-05-13 08:04:00</wp:comment_date>
<wp:comment_date_gmt>2008-05-13 13:04:00</wp:comment_date_gmt>
<wp:comment_content><![CDATA[No problem Matthew.  I hope you had a much easier time with this than I initially had.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>18</wp:comment_id>
<wp:comment_author><![CDATA[Ricardo de Oliveira Saldanha]]></wp:comment_author>
<wp:comment_author_email>rosaldanha@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>189.7.204.121</wp:comment_author_IP>
<wp:comment_date>2008-05-14 07:47:39</wp:comment_date>
<wp:comment_date_gmt>2008-05-14 12:47:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great post !! Direct, simple, objective .
Congratulations!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>25</wp:comment_id>
<wp:comment_author><![CDATA[JoÃ£o Batista]]></wp:comment_author>
<wp:comment_author_email>faustino.br@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>201.88.71.210</wp:comment_author_IP>
<wp:comment_date>2008-06-03 00:20:37</wp:comment_date>
<wp:comment_date_gmt>2008-06-03 05:20:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>21</wp:comment_id>
<wp:comment_author><![CDATA[Alan Andrade]]></wp:comment_author>
<wp:comment_author_email>gallito7@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://ExcelentPOST</wp:comment_author_url>
<wp:comment_author_IP>189.141.75.25</wp:comment_author_IP>
<wp:comment_date>2008-05-21 01:48:04</wp:comment_date>
<wp:comment_date_gmt>2008-05-21 06:48:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey! THANK You very much for this post. It was really helpful for me. Congrats.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>22</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-05-21 07:46:25</wp:comment_date>
<wp:comment_date_gmt>2008-05-21 12:46:25</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I find it interesting that the last two comments have ended with congrats.  Have I won something?

Anyway, no problem Alan.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>24</wp:comment_id>
<wp:comment_author><![CDATA[Alex IgnÃ¡cio da Silva]]></wp:comment_author>
<wp:comment_author_email>alex@ignacioalex.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>189.100.115.25</wp:comment_author_IP>
<wp:comment_date>2008-05-25 19:08:06</wp:comment_date>
<wp:comment_date_gmt>2008-05-26 00:08:06</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Worked like a charm, thank you very much!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>29</wp:comment_id>
<wp:comment_author><![CDATA[Ed Dos Santos]]></wp:comment_author>
<wp:comment_author_email>eds@pensys.co.bw</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>83.143.26.170</wp:comment_author_IP>
<wp:comment_date>2008-06-11 10:05:21</wp:comment_date>
<wp:comment_date_gmt>2008-06-11 15:05:21</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Does anyone know if Aptana works okay with Firefox 3, as Ubuntu has updated ff from 3b5 to 3.0]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>30</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-06-11 10:59:49</wp:comment_date>
<wp:comment_date_gmt>2008-06-11 15:59:49</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I just took a look and it appears that Aptana now plays nicely with FF3.0 as the debugger.  I could be wrong.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>31</wp:comment_id>
<wp:comment_author><![CDATA[Ed Dos Santos]]></wp:comment_author>
<wp:comment_author_email>eds@pensys.co.bw</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>83.143.26.170</wp:comment_author_IP>
<wp:comment_date>2008-06-11 11:09:52</wp:comment_date>
<wp:comment_date_gmt>2008-06-11 16:09:52</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks. That is what I have found, but i am new to Aptana and Ubuntu hardy herron, so just wanted to check.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>48</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-07-21 06:56:26</wp:comment_date>
<wp:comment_date_gmt>2008-07-21 11:56:26</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Sorry I had to edit your comment Rob, but it was a bit long.  It looks like you are running the 64 bit version of Hardy.  I am running the 32 bit version.  I couldn't tell you exactly why you are having issues with the installation of the java plugin, however you might have better luck searching for solutions at the Ubuntu forums.

Best of luck.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>47</wp:comment_id>
<wp:comment_author><![CDATA[r0b]]></wp:comment_author>
<wp:comment_author_email>r0brh0des@yahoo.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>76.171.180.18</wp:comment_author_IP>
<wp:comment_date>2008-07-20 22:45:12</wp:comment_date>
<wp:comment_date_gmt>2008-07-21 03:45:12</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Have FF3 and Hardy 64 and cant get sun-java6-plugin....

"sun-java6-jre is already the newest version.
Package sun-java6-plugin is not available, but is referred to by another package.
This may mean that the package is missing, has been obsoleted, or
is only available from another source"

........have all repositories enabled....get this error on launch:

!STACK 1
java.lang.UnsatisfiedLinkError: /usr/local/aptana/configuration/org.eclipse.osgi/bundles/98/1/.cp/libswt-pi-gtk-3236.so: /usr/local/aptana/configuration/org.eclipse.osgi/bundles/98/1/.cp/libswt-pi-gtk-3236.so: wrong ELF class: ELFCLASS32 (Possible cause: architecture word width mismatch)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>61</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>64.222.183.211</wp:comment_author_IP>
<wp:comment_date>2008-08-14 14:26:26</wp:comment_date>
<wp:comment_date_gmt>2008-08-14 19:26:26</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the additional tips applehead.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>62</wp:comment_id>
<wp:comment_author><![CDATA[wladston]]></wp:comment_author>
<wp:comment_author_email>wladston@wladston.net</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>201.80.40.189</wp:comment_author_IP>
<wp:comment_date>2008-08-17 19:25:50</wp:comment_date>
<wp:comment_date_gmt>2008-08-18 00:25:50</wp:comment_date_gmt>
<wp:comment_content><![CDATA[thanks a lot.

I don't understand WHY they don't just release a DEB package .... they want to MAKE US SUFFER!!! :D]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>55</wp:comment_id>
<wp:comment_author><![CDATA[Kristoffer Berg]]></wp:comment_author>
<wp:comment_author_email>krisberg@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.muxmedialab.no</wp:comment_author_url>
<wp:comment_author_IP>84.48.231.98</wp:comment_author_IP>
<wp:comment_date>2008-08-06 20:44:09</wp:comment_date>
<wp:comment_date_gmt>2008-08-07 01:44:09</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ah man. Thanks! This solved my issues with the "Browser Inside"!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>56</wp:comment_id>
<wp:comment_author><![CDATA[playalpha]]></wp:comment_author>
<wp:comment_author_email>blackburnclinton@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>72.200.71.253</wp:comment_author_IP>
<wp:comment_date>2008-08-08 14:18:22</wp:comment_date>
<wp:comment_date_gmt>2008-08-08 19:18:22</wp:comment_date_gmt>
<wp:comment_content><![CDATA[For 64 bit, you need to download the 32 bit jvm and tell aptana to use that when it launches.

Add this to the script after the export line

/usr/local/aptana/AptanaStudio -vm /usr/lib/jvm/ia32-java-6-sun-1.6.0.06/jre/bin/java

Of course this depends on where those executables live...
-playalpha]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>57</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-08-08 14:21:59</wp:comment_date>
<wp:comment_date_gmt>2008-08-08 19:21:59</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the tip!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>94</wp:comment_id>
<wp:comment_author><![CDATA[vaibhav]]></wp:comment_author>
<wp:comment_author_email>vaibhav.cse@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>203.197.231.136</wp:comment_author_IP>
<wp:comment_date>2008-09-19 13:30:05</wp:comment_date>
<wp:comment_date_gmt>2008-09-19 18:30:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hi,

It worked when I changed the shell script where I had used iceape instead of firefox :)

Thanks!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>74</wp:comment_id>
<wp:comment_author><![CDATA[Cristobal Viedma]]></wp:comment_author>
<wp:comment_author_email>cviedmai@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>213.100.26.219</wp:comment_author_IP>
<wp:comment_date>2008-08-31 14:27:46</wp:comment_date>
<wp:comment_date_gmt>2008-08-31 19:27:46</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thank you so much, great tutorial!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>60</wp:comment_id>
<wp:comment_author><![CDATA[applehead]]></wp:comment_author>
<wp:comment_author_email>mnshankar@yahoo.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>24.136.37.35</wp:comment_author_IP>
<wp:comment_date>2008-08-14 03:51:45</wp:comment_date>
<wp:comment_date_gmt>2008-08-14 08:51:45</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thank you for this guide.. Very helpful and works perfectly on my Hardy install. 
Important: 

1. Firefox 2 is REQUIRED by aptana.. So, if you have FF3, you need to do an apt-get install firefox2 (otherwise you will get tons of SWT error messages after launching aptana). 

2. Remember to run:  

sudo chown -R [user]:[user] runAptana.sh 

after creating the runAptana.sh script (if runAptana is created as root, you may get 'permission' related errors when you attempt to run aptana under your login).]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>72</wp:comment_id>
<wp:comment_author><![CDATA[Mike Glaz]]></wp:comment_author>
<wp:comment_author_email>mikeglaz@yahoo.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>99.175.217.18</wp:comment_author_IP>
<wp:comment_date>2008-08-26 22:15:01</wp:comment_date>
<wp:comment_date_gmt>2008-08-27 03:15:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Ok, I got RadRails and Aptana running but when it starts it shows me a message saying that "We were unable to detect a ruby installation."  But I have Ruby installed.  I can run irb and it works...

mike]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>93</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-09-19 13:04:01</wp:comment_date>
<wp:comment_date_gmt>2008-09-19 18:04:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Just to clarify, are you on a 32 or 64 bit machine?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>92</wp:comment_id>
<wp:comment_author><![CDATA[vaibhav]]></wp:comment_author>
<wp:comment_author_email>vaibhav.cse@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>203.197.231.136</wp:comment_author_IP>
<wp:comment_date>2008-09-19 12:58:15</wp:comment_date>
<wp:comment_date_gmt>2008-09-19 17:58:15</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey,

thanks for the great post. However, after following all the steps I still get the same message on aptana startpage:
embedded browser not available. 

I've tried removing all firefox packages and installing them again. A java -version on terminal gives me:
java version "1.6.0_06"
Java(TM) SE Runtime Environment (build 1.6.0_06-b02)
Java HotSpot(TM) Client VM (build 10.0-b22, mixed mode, sharing)

Any advise?
Thanks in advance!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>67</wp:comment_id>
<wp:comment_author><![CDATA[jayoshi]]></wp:comment_author>
<wp:comment_author_email>jayoshi13@googlemail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>86.167.15.125</wp:comment_author_IP>
<wp:comment_date>2008-08-23 12:56:17</wp:comment_date>
<wp:comment_date_gmt>2008-08-23 17:56:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Quality! thank you for guide.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>102</wp:comment_id>
<wp:comment_author><![CDATA[Lukas]]></wp:comment_author>
<wp:comment_author_email>l.v.b@gmx.ch</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>203.145.175.2</wp:comment_author_IP>
<wp:comment_date>2008-10-06 04:38:22</wp:comment_date>
<wp:comment_date_gmt>2008-10-06 09:38:22</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Oh man... this post is worth nothing.

1. it didnt work with aptana.
2. you wrecked with these commands my nice ff 3!

When i want to start my ff 3 the "another ff process is already running."

I uninstalled ff 2 again, deleted the created profile etc.

You ought help me.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>84</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-09-12 08:27:55</wp:comment_date>
<wp:comment_date_gmt>2008-09-12 13:27:55</wp:comment_date_gmt>
<wp:comment_content><![CDATA[notanxious, thanks for sharing your resolution.  It's very much appreciated!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>82</wp:comment_id>
<wp:comment_author><![CDATA[notanxious]]></wp:comment_author>
<wp:comment_author_email>tgibson1@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>98.218.60.75</wp:comment_author_IP>
<wp:comment_date>2008-09-11 20:24:53</wp:comment_date>
<wp:comment_date_gmt>2008-09-12 01:24:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[R0b, 

I too am running the 64 bit Hardy and experiencing the same issue as you are during lauch of APTAN. Has anyone identified a fix for this yet?

Have FF3 and Hardy 64 and cant get sun-java6-plugin….

“sun-java6-jre is already the newest version.
Package sun-java6-plugin is not available, but is referred to by another package.
This may mean that the package is missing, has been obsoleted, or
is only available from another source”

……..have all repositories enabled….get this error on launch:

!STACK 1
java.lang.UnsatisfiedLinkError: /usr/local/aptana/configuration/org.eclipse.osgi/bundles/98/1/.cp/libswt-pi-gtk-3236.so: /usr/local/aptana/configuration/org.eclipse.osgi/bundles/98/1/.cp/libswt-pi-gtk-3236.so: wrong ELF class: ELFCLASS32 (Possible cause: architecture word width mismatch)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>83</wp:comment_id>
<wp:comment_author><![CDATA[notanxious]]></wp:comment_author>
<wp:comment_author_email>tgibson1@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>98.218.60.75</wp:comment_author_IP>
<wp:comment_date>2008-09-11 20:29:58</wp:comment_date>
<wp:comment_date_gmt>2008-09-12 01:29:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[r0b, 

I found a resolution to this issue... Seems as if you will have to result to installing a 32 bit version of Java... here is the link.. it worked for me just fine. Ubuntu has a great community.

http://www.aptana.com/docs/index.php/Installing_Aptana_on_Linux#Running_Aptana_Studio_on_64-bit_Linux]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>101</wp:comment_id>
<wp:comment_author><![CDATA[machel]]></wp:comment_author>
<wp:comment_author_email>machel@yahoo.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>41.215.110.254</wp:comment_author_IP>
<wp:comment_date>2008-10-01 09:40:57</wp:comment_date>
<wp:comment_date_gmt>2008-10-01 14:40:57</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks alot man. great work. really helped. :)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>122</wp:comment_id>
<wp:comment_author><![CDATA[Sanjeev Kumar Dangi]]></wp:comment_author>
<wp:comment_author_email>skdangi@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>203.197.231.136</wp:comment_author_IP>
<wp:comment_date>2008-11-19 07:04:47</wp:comment_date>
<wp:comment_date_gmt>2008-11-19 12:04:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[when i  run the following command
  sudo firefox-2 -ProfileManager
My browser opens the website profilemanager.com in a new tab instead of opening Profile Manager. What should i do ? Could somebody help?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>123</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>68.167.144.98</wp:comment_author_IP>
<wp:comment_date>2008-11-19 08:41:29</wp:comment_date>
<wp:comment_date_gmt>2008-11-19 13:41:29</wp:comment_date_gmt>
<wp:comment_content><![CDATA[That definitely sounds strange.  I'm not certain what would be causing your issue.  I will say that at the time this post was written, Ubuntu shipped with FF3 Beta 5.  Of course FF3 is now stable and out of Beta.  As a matter of fact I would go so far as to say that these steps should not be used as Aptana now works without issue with FF3.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>124</wp:comment_id>
<wp:comment_author><![CDATA[Sanjeev Kumar Dangi]]></wp:comment_author>
<wp:comment_author_email>skdangi@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>203.197.231.136</wp:comment_author_IP>
<wp:comment_date>2008-11-21 11:38:52</wp:comment_date>
<wp:comment_date_gmt>2008-11-21 16:38:52</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I removed all the other versions except firefox 2. And to my relief my Profile Manager opened. I am happy now and thanks for the reply.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>125</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>68.167.144.98</wp:comment_author_IP>
<wp:comment_date>2008-11-21 11:41:47</wp:comment_date>
<wp:comment_date_gmt>2008-11-21 16:41:47</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great.  I'm glad things are now working for you.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>128</wp:comment_id>
<wp:comment_author><![CDATA[PJ]]></wp:comment_author>
<wp:comment_author_email>pj@stickerpoint.fr</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>81.36.187.186</wp:comment_author_IP>
<wp:comment_date>2008-11-25 06:04:30</wp:comment_date>
<wp:comment_date_gmt>2008-11-25 11:04:30</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Well done. Saved hours of searching. Thank you.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>139</wp:comment_id>
<wp:comment_author><![CDATA[Dan]]></wp:comment_author>
<wp:comment_author_email>prodigy2u3@yahoo.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>216.67.70.223</wp:comment_author_IP>
<wp:comment_date>2009-01-10 16:19:54</wp:comment_date>
<wp:comment_date_gmt>2009-01-10 21:19:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey, I was having an issue with Aptana throwing an SWT workbench error.  I had to edit your runAptana.sh script via these directions to fix it.  It basically required me to install xulrunner and then point to it.

http://www.aptana.com/docs/index.php/Installing_Aptana_on_Linux]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>140</wp:comment_id>
<wp:comment_author><![CDATA[Zoran Kikic]]></wp:comment_author>
<wp:comment_author_email>mail@zoran.name</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>80.129.88.39</wp:comment_author_IP>
<wp:comment_date>2009-01-10 21:53:53</wp:comment_date>
<wp:comment_date_gmt>2009-01-11 02:53:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Jason, thanks for sharing!

You don't have to install Firefox 2.

1. sudo aptitude install xulrunner

2. replace "export MOZILLA_FIVE_HOME=/usr/lib/firefox"
with
"export MOZILLA_FIVE_HOME=/usr/lib/xulrunner"

3. deinstall firebug

4. start aptana and click on the bug.

5. have fun!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>203</wp:comment_id>
<wp:comment_author><![CDATA[Arif]]></wp:comment_author>
<wp:comment_author_email>arif@xaprio.com</wp:comment_author_email>
<wp:comment_author_url>http://www.vseeno.org</wp:comment_author_url>
<wp:comment_author_IP>59.177.100.226</wp:comment_author_IP>
<wp:comment_date>2009-03-13 10:06:21</wp:comment_date>
<wp:comment_date_gmt>2009-03-13 15:06:21</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is really a great post.

I was looking for such a solution which clearly defines the problem and a straight solution as well.

Thanx to Jason who bring this to us and thanks to Zoran Kikic as well bcoz of which I did not installed ff2.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>JavaScript Lazy Loading</title>
<link>http://jasonleveille.com/2008/05/javascript-lazy-loading/</link>
<pubDate>Wed, 07 May 2008 19:49:54 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=36</guid>
<description></description>
<content:encoded><![CDATA[I just finished a great <a href="http://www.digital-web.com/">Digital Web Magazine</a> article about improving page load times with <a href="http://www.digital-web.com/articles/improve_page_performance_with_lazy_loading/">lazy loading techniques</a>.  The article (by <a href="http://www.digital-web.com/about/contributors/jakob_heuser">Jakob Heuser</a>) was very well written and described <a href="http://www.digital-web.com/extras/lazy_loading/yui_3types.html">proximity, timeout, and event</a> based lazy loading.  If you continue to read you will see how I was able to reduce page load by 300+kb by implementing lazy loading.
<h2>What is Lazy Loading</h2>
Lazy loading, <a href="http://www.martinfowler.com/eaaCatalog/lazyLoad.html">described by Martin Fowler</a> in <a href="http://www.martinfowler.com/books.html#eaa">"Patterns of Enterprise Application Architecture"</a>, is the process by which an object isn't loaded with data until it is needed.  Of course "needed" is subjective to the needs of your application (for example needed in proximity or based on an event).  In the context of this article, Jakob Heuser was really talking about lazy loading JavaScript files when they are needed, as opposed to loading them on page load.  The loading of the files happens via <a href="http://en.wikipedia.org/wiki/XMLHttpRequest"><abbr title="xmlHttpRequest">XHR</abbr></a> (therefore the request is subject to the browser<a href="http://en.wikipedia.org/wiki/Same_origin_policy"> same origin policy</a>).  He provides examples of <a href="http://www.gaiaonline.com/">Gaia Online</a> and <a href="http://www.zimbra.com/">Zimbra</a> who both reduced their page load by 200k+ after implementing lazy loading techniques.<!--more-->
<h2>Lazy Loading and Me</h2>
I have had a few instances over the last month or so where projects I have worked on required some form of lazy loading (<a href="http://www.martinfowler.com/eaaCatalog/lazyLoad.html">Fowler describes 4 flavors</a>).
<h3>Lazy Initialization</h3>
<blockquote>uses a special marker value (usually null) to indicate a field isn't loaded. Every access to the field checks the field for the marker value and if unloaded, loads it.</blockquote>
In my first example (<a href="http://jasonleveille.com/2008/04/displaying-the-correct-timezone-time/">original blog post</a>), I had the need to display <a href="http://www.timeanddate.com/library/abbreviations/timezones/na/est.html"><abbr title="Eastern Standard Time">EST</abbr></a>/<a href="http://www.timeanddate.com/library/abbreviations/timezones/na/edt.html"><abbr title="Eastern Daylight Time">EDT</abbr></a> time via JavaScript, regardless of the location of the client.  The solution of course is to pull in a timestamp from the server (whose time is in <a href="http://www.timeanddate.com/library/abbreviations/timezones/na/est.html"><abbr title="Eastern Standard Time">EST</abbr></a>/<a href="http://www.timeanddate.com/library/abbreviations/timezones/na/edt.html"><abbr title="Eastern Daylight Time">EDT</abbr></a>), and feed that to the JavaScript Date constructor. From there, all that is needed is a <a href="http://developer.mozilla.org/en/docs/DOM:window.setInterval">setInterval</a>, called every 1 second, and an increment of the timestamp variable by 1 second.

<pre name="code" class="JavaScript">
var TIME = function(){

    var milliseconds = null;
    
    return {
    
        construct: function(){
            //lazy load milliseconds
            if (!milliseconds) {
               
                $.getJSON("time.php", function(r){
                   
                    //ensure that we are getting the proper data
                    if(r[0].zone && r[0].timestamp) {
                       $("#time .zone").html(r[0].zone);
                       milliseconds = r[0].timestamp;
                       TIME.update(new Date(milliseconds));
                       window.setInterval("TIME.construct()", 1000);
                    }
                    else {
                       return;
                    }
                    
                });
            }
            else {
                TIME.update(new Date(milliseconds));
            }
        },
        
        update: function(time){
            $("#time .time").html(time.toLocaleTimeString());
            milliseconds += 1000;
        }
    };
}
();</pre>

In the case of the code above, milliseconds starts at null.  In the construct method a check is performed to see if milliseconds is null or not.  If it is, an <a href="http://en.wikipedia.org/wiki/XMLHttpRequest"><abbr title="xmlHttpRequest">XHR</abbr></a> request is made to time.php to pull in a timestamp (measured in milliseconds).  The first call to construct updates the time display, assigns a value to milliseconds, and sets up the <a href="http://developer.mozilla.org/en/docs/DOM:window.setInterval">setInterval</a> for TIME.construct(), at a frequency of 1000 milliseconds (1 second).  With the second call to <code>TIME.construct()</code>, because the milliseconds variable is already loaded, another <abbr title="xmlHttpRequest">XHR</abbr> request is not necessary.  Instead, all that is needed is a call to <code>TIME.update()</code>, and the construction of a new Date object.  Piece of cake.  So, in this instance, lazy initialization enhanced the application because it provided a means for checking whether or not an <abbr title="xmlHttpRequest">XHR</abbr> request should be made to obtain a timestamp, or if a timestamp already existed.
<h2>ghost</h2>
<blockquote>A <strong>ghost</strong> is the real object without any data. The first time you call a method the ghost loads the full data into its fields.</blockquote>
This second example is more along the lines of those provided in the Digital Web article, however it is even more simplified. In this case, what I actually have is a combination of ghost and lazy initialization (leaning more in the direction of lazy initialization). The application in which I implemented this bit of code required most of the UI to be constructed through JavaScript. Part of the application requires the implementation of <a href="http://get.live.com/messenger/overview">Windows Live Messanger</a> for tech support purposes. This portion of the application is not visible on page load, and is only available on request. Initially I was loading the JavaScript/CSS/Image files on page load, and the application was suffering a significant performance hit as a result. I don't have exact numbers, but Windows Live Messanger has in excess of 300+k of JavaScript/CSS/Image files, and I was loading them (via requests for the resources through an iframe) on page load. As you can imagine, the rest of the application was suffering. It was pathgish and unresponsive for seconds at a time.
<blockquote>Through the implementation of lazy loading (tied to a click event), I was able to do away with this initial 300+k load, and garner significant page responsiveness.</blockquote>
On to the goodies:

<pre name="code" class="JavaScript">
var msnPayLoad = null;

...

function setupLiveMessangerChat() {
   
   if(config.playerMode.isLive)
   {      
      $('a#activate-chat').toggle(
         function () {
            
            //lazy load msn javascript
            //this payload is only needed if the user actually clicks on the live support link
            if(!msnPayLoad)
            {
               msnPayLoad = activateMsnJavascript;
               msnPayLoad();
            }
            
            $('#support').show();
            $('#activate-chat').html('Close Live Support');
         },
         function () {
            $('#support').hide();
            $('#activate-chat').html('Open Live Support');
         }
      );
   }
   else
   {
      $('#support').hide();
   }
}

...

function activateMsnJavascript() {
   //Grab the necessary scripts for live chat
   $.getScript("http://settings.messenger.live.com/controls/1.0/PresenceButton.js", function(){
      $.getScript("http://messenger.services.live.com/users/etc", function(){
         $("#support div.support").load("core/section-includes/live-messanger-chat.inc.htm?stamp=" + getStamp());
      })
   });   
}
</pre>

In the case of the above example, I have a null payload variable, which is loaded when the activate chat link is clicked the first time. During this time a call is also made to <code>activateMsnJavascript()</code>, and 300kb+ of files join the party. Here are some images for your enjoyment.

<a href="http://jasonleveille.com/wp-content/uploads/2008/05/lazy-load-1.jpg"><img class="aligncenter size-full wp-image-37" title="lazy-load-1" src="http://jasonleveille.com/wp-content/uploads/2008/05/lazy-load-1.jpg" alt="" width="282" height="112" /></a>

<a href="http://jasonleveille.com/wp-content/uploads/2008/05/lazy-load-2.png"><img class="aligncenter size-full wp-image-38" title="lazy-load-2" src="http://jasonleveille.com/wp-content/uploads/2008/05/lazy-load-2.png" alt="" width="286" height="443" /></a>
<h2>I'm so loaded man</h2>
So, I hope if you've gotten anything from this article it is that employing lazy loading techniques doesn't have to be hard. What it might bring to your application table is well worth the time it will take to investigate this very interesting topic.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>36</wp:post_id>
<wp:post_date>2008-05-07 14:49:54</wp:post_date>
<wp:post_date_gmt>2008-05-07 19:49:54</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>javascript-lazy-loading</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1210266672</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>keywords</wp:meta_key>
<wp:meta_value>javascript, lazy loading</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>description</wp:meta_key>
<wp:meta_value>JavaScript lazy loading techniques.</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>title</wp:meta_key>
<wp:meta_value>JavaScript Lazy Loading</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>http_build_query arg_seperator</title>
<link>http://jasonleveille.com/2008/05/http_build_query_arg_seperator/</link>
<pubDate>Wed, 14 May 2008 15:19:08 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=39</guid>
<description></description>
<content:encoded><![CDATA[I have used <a href="http://us.php.net/http_build_query">http_build_query</a> numerous times in the past and I've never had to pay attention to the third parameter before: <a href="http://us.php.net/manual/en/ini.core.php#ini.arg-separator.output">arg_separator</a>.  I am making use of a <a href="http://github.com/shuber/curl/tree/master">great Curl wrapper</a> to abstract some of the more mundane setup tasks associated with a <a href="http://us2.php.net/curl">Curl</a> request.  Initially I had constructed the setup of <code>CURLOPT_POSTFIELDS</code> as follows:

<pre class="php" name="code">$url = 'http://rest-toolkit/api/users/5';
$response = $curl-&gt;post($url, 
    $vars = array(
        'username' =&gt; 'baz', 
        'password' =&gt; 'bar'
    )
);

...

curl_setopt($handle, 
    CURLOPT_POSTFIELDS, 
    http_build_query($vars)
);</pre>

Upon receiving the request, my script was showing <code>$_POST</code> variables as follows:

<pre class="php" name="code">
Array
(
    [username] =&gt; baz
    [amp;password] =&gt; bar
)</pre>

Thanks to a <a href="http://us.php.net/manual/en/function.http-build-query.php#74781">comment on the http_build_query page</a> regarding the use of the third parameter, I quickly realized that my php.ini setting for <code>arg_separator.output</code> was in fact set to &amp;amp;.  The quick fix:

<pre class="php" name="code">
curl_setopt($handle, 
    CURLOPT_POSTFIELDS, 
    http_build_query($vars, '', '&amp;')
);</pre>

And the result:

<pre class="php" name="code">
Array
(
    [username] =&gt; baz
    [password] =&gt; bar
)</pre>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>39</wp:post_id>
<wp:post_date>2008-05-14 10:19:08</wp:post_date>
<wp:post_date_gmt>2008-05-14 15:19:08</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>http_build_query_arg_seperator</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1210778704</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>My OPML File is Bigger than Yours</title>
<link>http://jasonleveille.com/2008/05/my-opml-file-is-bigger-than-yours/</link>
<pubDate>Mon, 19 May 2008 15:02:33 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=40</guid>
<description></description>
<content:encoded><![CDATA[I've been trying for at least a month to make my <a href="http://www.netvibes.com/">Netvibes</a> <abbr title="Outline Processor Markup Language">OPML</abbr> file publicly available, and finally this morning I was successful.  So, if you are at all interested in the feeds that I am interested in, you can visit my <a href="http://www.netvibes.com/">Netvibes</a> public page.

<a href="http://www.netvibes.com/leveille">http://www.netvibes.com/leveille</a>

One of the first things I do in the morning and last things I do at night is run through my feed list to see if there is anything interesting.  If your feedlist is publicly available in one form or another, I would love to see what interests you.  Feel free to share.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>40</wp:post_id>
<wp:post_date>2008-05-19 10:02:33</wp:post_date>
<wp:post_date_gmt>2008-05-19 15:02:33</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>my-opml-file-is-bigger-than-yours</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1211209355</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>This Week in Doctrine</title>
<link>http://jasonleveille.com/2008/05/this-week-in-doctrine/</link>
<pubDate>Tue, 27 May 2008 02:37:31 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=41</guid>
<description></description>
<content:encoded><![CDATA[Quite often I find myself overwhelmed by the <a href="http://jasonleveille.com/2008/05/my-opml-file-is-bigger-than-yours/">amount of news</a> I try to consume on a daily basis.  Often the result, unfortunately, is that my brain shuts down to some extent and I find it hard to prioritize the things I really want to investigate.  For example, ever since the January 2008 edition of PHP | Architect, in which there was an article about <a href="http://www.phpdoctrine.org/">The Doctrine Framework</a>, I have been trying to find the time to dig in.  On the way into work today I made the decision that, on a weekly basis, I would begin investigating things that interest me.  This week of course is devoted to Doctrine.
<h2>Introduction</h2>
What is <a href="http://www.phpdoctrine.org/">Doctrine</a>?  According to the website:
<blockquote>Doctrine is a <abbr title="PHP Hypertext Preprocessor">PHP</abbr> <abbr title="Object Relational Mapper">ORM</abbr> (object relational mapper) for <abbr title="PHP Hypertext Preprocessor">PHP</abbr> 5.2.3+ that sits on top of a powerful <abbr title="PHP Hypertext Preprocessor">PHP</abbr> <abbr title="Database Abstraction Layer">DBAL</abbr> (database abstraction layer). One of its key features is the ability to optionally write database queries in an <abbr title="Object Oriented">OO</abbr> (object oriented) <abbr title="Structured Query Language">SQL</abbr>-dialect called DQL inspired by Hibernates HQL. This provides developers with a powerful alternative to <abbr title="Structured Query Language">SQL</abbr> that maintains a maximum of flexibility without requiring needless code duplication.</blockquote>
Ok, sounds good to me.  Let's get started.<!--more-->
<h2>Monday Night</h2>
Slowly I'm moving my home dev environment over to Linux.  So, I've spent a good chunk of time tonight getting AMP/Subversion/etc setup.  Once I had my dev environment setup for Doctrine (which was nothing more than setting up a <a href="http://httpd.apache.org/docs/1.3/vhosts/">VirtualHost</a> entry for my project directory under <a href="http://en.wikipedia.org/wiki/LAMP_(software_bundle)">LAMP</a>), I used the <a href="http://www.phpdoctrine.org/documentation/manual/0_11?one-page#getting-started:installation:pear">PEAR option</a> (one of 4 options) for installing the application.  Here is where I ran into my first issue:

Invalid or missing remote package file
Package "http://pear.phpdoctrine.org/Doctrine-0.10.2" is not valid
install failed

I didn't dwell on this for too long though.  My next step was to try <a href="http://www.phpdoctrine.org/documentation/manual/0_11?one-page#getting-started:installation:svn">installation via Subversion</a>.  Piece of Cake.  I modified the svn checkout slightly to checkout branch .11 instead of .10, and I also specified that I wanted to checkout the branch to my working application directory.  So, to be clear my checkout looked like:

<code>svn co http://svn.phpdoctrine.org/branches/0.11 .</code>

I really didn't get into Doctrine tonight, however I am setup and ready to go for tomorrow night.
<h2>Tuesday Night</h2>
My next step for tonight will be the section labeled "<a href="http://www.phpdoctrine.org/documentation/manual/0_11?one-page#getting-started:starting-new-project">working with existing tables</a>".  To prepare for this section I created a database called doctrine, and I imported the sql for the "files" table they provide in the section.  The first thing the article tells me to do is create a file to convert my table into a record class, however it doesn't tell me where I should put this class.  I decided to create a script called build_rc.php, and I placed it in my app root.  I also needed to create a myrecords directory to remain consistant with the tutorial.  Running my script exposed permission issues on the myrecords directory, however changing permissions to 777 on that directory took care of the issue.  After running the script, a BaseFile was generated, as was a BaseFile extended class called File.  The tutorial mentions that a third class should be generated which extends Doctrine_Table, however this class nowhere to be found.  I went through the steps a few times before I finally just created the class myself.

Next, I completed the section <a href="http://www.phpdoctrine.org/documentation/manual/0_11?one-page#getting-started:creating-tables">creating tables</a>.   The section worked exactly as advertised and allowed me to export the record classes into my database.  Nice little feature.  Essentially, Doctrine provides a means by which you can have the application create your tables on the fly.  Doctrine makes is very easy to define relationships between models, and to specify relationship constraints/cascades.   For example:

<pre class="php" name="code">
// file User.php
class User extends Doctrine_Record
{
   public function setTableDefinition()
   {
      $this-&gt;hasColumn('name', 'string', 20);
   }

   public function setUp()
   {
      $this-&gt;hasMany('Phonenumber', array('local' =&gt; 'id',
      'foreign' =&gt; 'user_id'));
   }
}

// file Phonenumber.php
class Phonenumber extends Doctrine_Record
{
   public function setTableDefinition()
   {
      $this-&gt;hasColumn('phonenumber', 'string', 20);
      $this-&gt;hasColumn('user_id', 'integer');
   }
 
   public function setUp()
   {
      $this-&gt;hasOne('User', array('local' =&gt; 'user_id',
      'foreign' =&gt; 'id', 'onDelete' =&gt; 'CASCADE'));
   }
}
</pre>

Loading the models above and executing the <code>createTablesFromModels</code> method will of course create the tables.

<pre class="php" name="code">
Doctrine::createTablesFromModels('models');
</pre>

It is also possible to generate the sql to create the tables, for use in a text file, etc.  For example:
<pre class="php" name="code">

require_once('lib/Doctrine.php');
spl_autoload_register(array('Doctrine', 'autoload'));//in order to export we need a database connection
Doctrine_Manager::connection('mysql://user:pw@localhost/doctrine');
$queries = Doctrine::generateSqlFromModels('models');
echo $queries;
</pre>

Will generate and dispaly the sql as such:

<pre>
CREATE TABLE phonenumber (id BIGINT AUTO_INCREMENT, 
   phonenumber VARCHAR(20), 
   user_id BIGINT,  
   INDEX user_id_idx (user_id), 
   PRIMARY KEY(id)) ENGINE = INNODB;

CREATE TABLE user (id BIGINT AUTO_INCREMENT, 
   name VARCHAR(20), 
   PRIMARY KEY(id)) ENGINE = INNODB;

ALTER TABLE phonenumber ADD FOREIGN KEY (user_id) 
   REFERENCES user(id) ON DELETE CASCADE;
</pre>

This is pretty cool stuff.  Notice by default the sql selects INNODB as the engine.  I need to refresh my memory regarding the differences between INNODB and MYISAM.  I seem to recall a PHPArchitect Podcast on this very topic.  I'll have to take a look back in time.

<h2>Wednesday Night</h2>
Ok, so I've decided that by completing every little section and writing about it I'm really just wasting time that I could be programming.  So, instead, I'm going to take a close look at the table of contents and see what interests me.  From there I'll give it a try and write about the results here ...

And I didn't do a single thing tonight.  Someone is trying to rip off my wife and I through my PayPal account, and it's wasting my Doctrine time.

<h2>In Conclusion</h2>
I ran out of time.  I had friends come into town for the holiday and my week in Doctrine didn't turn out as I had hoped.  I'm disappointed because I really wanted to dig into some of Doctrine's <a href="http://www.phpdoctrine.org/documentation/manual/0_11?one-page#transactions:introduction">more interesting features</a>.  Anyway, this is really a piece of crap blog post.  It does nothing at all to convey how impressed I am with what Doctrine has to offer.  So, what does Doctrine have to offer?  A super <abbr title="Database Abstraction Layer">DBAL</abbr> which supports a powerful <abbr title="Object Relational Mapper">ORM</abbr>.  But I'm not telling you anything you couldn't have read by reading the introduction paragraph on the <a href="http://www.phpdoctrine.org/">first page of the site</a>.  In the future, if the right project comes along I will definitely be giving this piece of software a second look.  If I do one day decide to write an application in Doctrine, I'll be sure to write a bit about it here.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>41</wp:post_id>
<wp:post_date>2008-05-26 21:37:31</wp:post_date>
<wp:post_date_gmt>2008-05-27 02:37:31</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>this-week-in-doctrine</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1211855959</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>title</wp:meta_key>
<wp:meta_value>Doctrine PHP ORM</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>description</wp:meta_key>
<wp:meta_value>Doctrine PHP ORM</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>keywords</wp:meta_key>
<wp:meta_value>Doctrine, PHP, ORM, Object Relational Mapping</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Corey and his Partner</title>
<link>http://jasonleveille.com/2008/06/corey-and-his-partner/</link>
<pubDate>Wed, 11 Jun 2008 02:16:00 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/2008/06/corey-and/</guid>
<description></description>
<content:encoded><![CDATA[<div style="float: right; margin-left: 10px; margin-bottom: 10px;"><a title="photo sharing" href="http://www.flickr.com/photos/leveilles/2568548295/"><img style="border: solid 2px #000000;" src="http://farm4.static.flickr.com/3083/2568548295_7ae4ce31b5_m.jpg" alt="" /></a>

<span style="font-size: 0.9em; margin-top: 0px;">
<a href="http://www.flickr.com/photos/leveilles/2568548295/">IMG_0156</a></span>

Originally uploaded by <a href="http://www.flickr.com/people/leveilles/">Family Leveille</a>

</div>
My brother Corey is a k-9 officer with the Seattle Police Department in Seattle, Washington, USA.  He's been working with his dog for less than 6 months, and he says that they are getting along great.  It stinks that he is all the way on the other side of the US, but things are going great for him so I am happy.  We're both traveling to Maine (born and raised in West Enfield, Maine) in a few weeks to hang out with family ... and to have a few beers.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>45</wp:post_id>
<wp:post_date>2008-06-10 21:16:00</wp:post_date>
<wp:post_date_gmt>2008-06-11 02:16:00</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>corey-and-his-partner</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1213199682</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_wp_old_path</wp:meta_key>
<wp:meta_value>corey-and</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Visualizing the Commit History of Eclipse</title>
<link>http://jasonleveille.com/2008/06/visualizing-the-commit-history-of-eclipse/</link>
<pubDate>Tue, 17 Jun 2008 13:02:29 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=46</guid>
<description></description>
<content:encoded><![CDATA[How cool is this?  A tool to visualize the commit history of a software project.  The project in this case is the <a href="http://www.eclipse.org/">Eclipse IDE</a>.

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="400" height="225" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="src" value="http://www.vimeo.com/moogaloop.swf?clip_id=1130828&amp;server=www.vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1" /><embed type="application/x-shockwave-flash" width="400" height="225" src="http://www.vimeo.com/moogaloop.swf?clip_id=1130828&amp;server=www.vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=&amp;fullscreen=1" allowfullscreen="true" allowscriptaccess="always"></embed></object>
<a href="http://www.vimeo.com/1130828?pg=embed&amp;sec=1130828">code_swarm - Eclipse (short ver.)</a> from <a href="http://www.vimeo.com/michaelogawa?pg=embed&amp;sec=1130828">Michael Ogawa</a> on <a href="http://vimeo.com?pg=embed&amp;sec=1130828">Vimeo</a>.

 ]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>46</wp:post_id>
<wp:post_date>2008-06-17 08:02:29</wp:post_date>
<wp:post_date_gmt>2008-06-17 13:02:29</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>visualizing-the-commit-history-of-eclipse</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1213707750</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>jQuery is an ultimate time saver</title>
<link>http://jasonleveille.com/2008/06/jquery-time-saver/</link>
<pubDate>Fri, 27 Jun 2008 17:30:37 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=47</guid>
<description></description>
<content:encoded><![CDATA[<p><a href="http://www.jquery.com">jQuery</a> took what would have been a 4 - 6 hour <del datetime="2008-06-27T17:34:38+00:00">job</del> ordeal and turned it into 10 minutes of pure enjoyment.  Read on.</p>
<p>One of our clients at work has a site which is maintained with <a href="http://www.adobe.com/products/dreamweaver/">Dreamweaver</a> (<abbr title="Dreamweaver">DW</abbr>) <a href="http://www.smartwebby.com/web_site_design/dreamweaver_template.asp">templates</a> and <a href="http://www.adobe.com/products/contribute/">Contribute</a>. If there is anything I have learned about this combination, especially <abbr title="Dreamweaver">DW</abbr> templates, it's that updating templates/libraries and pushing those updates to pages can become increasingly painful as a site grows. This particular client insisted on the template/Contribute route, and at the time we couldn't make a solid argument about why they should not pursue this solution to content management (we now have that argument). We are on a maintenance contract with this client and once per week we have requests to update content. Because I did the initial setup, and because I have the most experience with <abbr title="Dreamweaver">DW</abbr>, this job falls on my plate. Here's the rough flow of data management / updates. </p>
<ul>
   <li>We get a request to update the xxx section based on the yyy template.</li>
   <li>We checkout the xxx section pages, and the yyy template. Some sections have 100+ pages. In total this site has ~600 pages.
      <ul>
         <li>With each page checkout, <abbr title="Dreamweaver">DW</abbr> performs a check to see if the page is already checked out.</li>
         <li><abbr title="Dreamweaver">DW</abbr> checks the page out.</li>
         <li><abbr title="Dreamweaver">DW</abbr> updates a lock file indicating that the pages is currently checked out.</li>
      </ul>
   </li>
   <li>Templates/Libraries are updated and changes are pushed out to files.</li>
   <li>Files get checked back in (and locks are removed, etc)</li>
</ul>
<p>This process is time consuming, slow at best, and very frustrating.  Now I would normally be working on other tasks while files are being checked in/out, however that's not the point.  This whole workflow makes we want to vomit.</p>
<p>Today we had a request to add a footer to each page in the site, where previously there had been no footer. That's an update for every template file, and every page in the site. You might be thinking, why didn't you initially add markup for an empty footer, or at least add an include that pointed to an empty file? We didn't, but that is a good idea. Instead, I took what would have amounted to 4 - 6 hours worth of mindless, brain numbing work (believe it or not, it would have taken 4 - 6 hours), and instead implemented a javascript/php include solution. This took about 10 minutes. Here is the markup.</p>
<pre class="javascript" name="code">
$.get(&quot;/assets/php/includes/footer.inc.php&quot;, function(data){
   $(&quot;#wrap&quot;).after(data);
});
</pre>

<p>As you can see, I created a footer include file, used <a href="http://jquery.com/">jQuery</a>'s <a href="http://docs.jquery.com/Ajax/jQuery.get#urldatacallbacktype">get</a> method to retrieve the contents, and inserted those contents after the main wrapper div.  I chose to pull the contents of the footer from an include file in order to make future updates of that content more manageable.  I wouldn't want a future developer pecking around in the JavaScript just to update the footer.  That would be just plain wrong.</p>

<h2>Conclusion</h2>

<p>In the world of web development implementation typically isn't the issue.  Figuring out the proper solution usually takes more time.  What I've done here isn't rocket science, but it did save me hours of time, while not sacrificing future application maintenance.  I can live with that.</p>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>47</wp:post_id>
<wp:post_date>2008-06-27 12:30:37</wp:post_date>
<wp:post_date_gmt>2008-06-27 17:30:37</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>jquery-time-saver</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1214596463</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>title</wp:meta_key>
<wp:meta_value>jQuery saves me hours of time</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>keywords</wp:meta_key>
<wp:meta_value>jquery, javascript</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Your Style-Guide is your Client's API</title>
<link>http://jasonleveille.com/2008/07/your-style-guide-is-your-clients-api/</link>
<pubDate>Tue, 01 Jul 2008 20:39:58 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=44</guid>
<description></description>
<content:encoded><![CDATA[<p>In my opinion, an <abbr title="application programmer's interface">API</abbr> should be many things.  Perhaps the most important thing it should be is easy to use.  If it isn't easy to use (because documentation is poor, naming in inconsistent, or because it's just not well thought out or organized) than it will likely only lead to frustration.  Not only will it be difficult to develop on a poorly thought-out API, but it will be incredibly difficult to maintain and extend an application built on this poor <abbr title="application programmer's interface">API</abbr>.  I've been thinking a lot about style guides recently, and the troubles  clients often have when they can't effectively use the site styles we (developers/designers) have put together for their project. With that in mind I wanted to talk about how <strong>your style-guide is your client's <abbr title="application programmer's interface">API</abbr></strong>.  You are the programmer/developer/frontendguy/whatever.  You have put together an incredible application that allows the client to create and maintain pages (complete with enough Ajax to sink a ship).  Now you hand the application over to the client, and they need to begin the process of populating content.</p>
<!--more-->
<h2>The Client Needs Your Guidance</h2>
<p>In most cases the client needs your guidance.  If you want a consistent look for headers, lists, paragraphs, etc, than at a minimum you need to train the client in the use of your styles.  If you want to reduce the amount of support requests you get, you should probably even include a style-guide.
</p>
<blockquote>As a sidenote, we are strongly considering including a developer docs directory in each site we build that includes a styleguide, as well as other relevant documentation.  Putting client documentation under version control, in a protected directory, accessible via a URL is in our near future I think/hope.</blockquote>
<p>Unfortunately it seems that this part of a project is often overlooked. </p>
<h2>Stay Responsible</h2>
<p>Developers tend to focus heavily on functionality and usability.  These are important topics that need attention.  I would argue that if you are giving a client a tool, and the tool is beautiful, and the tool is easy to use, you still have work to do.  Clients want to be able to manage content, and most of the time that content is managed through a <a href="http://en.wikipedia.org/wiki/WYSIWYG">WYSIWYG</a> editor (for instance in <a href="http://tinymce.moxiecode.com/">TinyMCE</a> or <a href="http://www.fckeditor.net/">fckEditor</a>). The client needs to know how to properly use the tool, and it's your job to deliver a responsible <abbr title="application programmer's interface">interface</abbr>.  When I say &quot;use the tool&quot; I'm really referring to the implementation of your styles, and not the ability to, for example, make text bold. Here's an example of what I consider irresponsible<abbr title="application programmer's interface">:</abbr></p>
<pre class="html" name="code">	&lt;div id=&quot;content&quot;&gt;
		&lt;div class=&quot;contentMainHeader&quot;&gt;My Header&lt;/div&gt;
		&lt;div class=&quot;contentBody&quot;&gt;Content Here&lt;/div&gt;
	&lt;/div&gt;</pre>
<p>This type of implementation is irresponsible in a lot of ways.  As far as the client goes, this markup introduces unnecessary complexity. It has been my experience that little things like this cause clients to bail on your intended style. This is the point where you usually start finding font tags and other craziness in content added by the client (might I recommend <a href="http://htmlpurifier.org/">htmlPurifier</a> if you really want things clean).  Here is an example of what I would consider responsible:</p>
<pre class="html" name="code">
	&lt;div id=&quot;content&quot;&gt;
		&lt;h2&gt;My Header&lt;/h2&gt;
		&lt;p&gt;Content Here&lt;/p&gt;
	&lt;/div&gt;
</pre>
<p>Forgetting about the fact that our content now has more semantic meaning, your client should have an easier time populating content. Most clients understand the concept of a header and have an easier time with its application. As for the paragraph, both <a href="http://tinymce.moxiecode.com/">TinyMCE</a> and <a href="http://www.fckeditor.net/">fckEditor</a> are going to create a paragraph by default (unless line breaks are not converted to paragraphs). In my experience this simple responsible markup can save a lot of time in support requests. In my experience the simple decision to use <abbr title="Hypertext Markup Language">html</abbr> tags as they were intended to be used can have a big payoff.</p>
<h2>In Conclusion</h2>
<p>Use markup responsibly and you will reap the benefits in many places. Your clients will be happier. Search engines will be happier. Your developers will be happier because they don't need to wade through messy <abbr title="Hypertext Markup Language">html</abbr>. Remember, html tags are your friends and they have a purpose. Before you decide to create a class for everything under the sun, think about that tag you should be using, and scrap the unnecessary classes.</p>
]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>44</wp:post_id>
<wp:post_date>2008-07-01 15:39:58</wp:post_date>
<wp:post_date_gmt>2008-07-01 20:39:58</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>your-style-guide-is-your-clients-api</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1214944820</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>title</wp:meta_key>
<wp:meta_value>Clean html markup is your clients API</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>description</wp:meta_key>
<wp:meta_value>Writing clean markup equates to a clean styleguide, and this is your clients style API.</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>keywords</wp:meta_key>
<wp:meta_value>markup, html, xhtml, css, styleguide, api</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>8 Long Years with Atrial Fibrillation</title>
<link>http://jasonleveille.com/2008/07/goodbye-atrial-fibrillation/</link>
<pubDate>Wed, 02 Jul 2008 12:26:38 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=48</guid>
<description></description>
<content:encoded><![CDATA[Tomorrow I'm having heart surgery!!  It's really more of a procedure than a surgery, but it does involve doctors going into my heart and making some burns around my <a href="http://en.wikipedia.org/wiki/Pulmonary_vein">Pulmonary veins</a>.  For 8 years now I have lived with <a href="http://en.wikipedia.org/wiki/Atrial_fibrillation">Atrial Fibrillation</a>, and tomorrow this procedure will hopefully be the start of a life without <abbr title="Atrial Fibrillation">AF</abbr>.  For me anyways, when I'm having an episode I get tired, winded, light headed, and weak.  I have found over the years that certain things tend to precipitate an episode, include: drinking beer (damn), staying up late (damn), unhealthy eating habits, drinking coffee before bed (damn), and allowing myself to get dehydrated.  Also, laying on my left side at night tends to cause problems.  When an episode does start it can last anywhere from 1 - 24 hours.  Just this morning I came off the tail end of a near 24 hour episode.  I only recently found out that exercise can cause my heart to go back into normal sinus rhythm.  So, a light jog/brisk walk this morning did the trick.

So, goodbye <abbr title="Atrial Fibrillation">AF</abbr>.  You have been a pain in my ass and you will not be missed.

<strong>Update</strong>: The surgery went well.  From what I've been told I was very hard to control on the operating table and had to be restrained.  At one point I sat up during the procedure and knocked my  head against one of the overhead devices.  There were 281 different burns made around my Pulmonary veins, and evidently I am a rarity, as I have 5 veins instead of the typical 4 (go me)!  I think the total time I was on the table was around 5 hours.  After my recovery period I was pretty sick due to the dose of anesthesia needed to keep me under.  Currenty I'm taking 5 different drugs, 2 of which are blood thinners.  I hate medication.  Lisa was awesome of course and is taking great care of me.  Her mom came into town to watch Cameron.  We're so lucky to have her.  Anyway, my healing phase is 3 months, after which I hope to be drug free and free of <abbr title="Atrial Fibrillation">AF</abbr>.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>48</wp:post_id>
<wp:post_date>2008-07-02 07:26:38</wp:post_date>
<wp:post_date_gmt>2008-07-02 12:26:38</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>goodbye-atrial-fibrillation</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1215278098</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>64</wp:comment_id>
<wp:comment_author><![CDATA[Mike Ames]]></wp:comment_author>
<wp:comment_author_email>Mike@amesweb.net</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>71.163.113.32</wp:comment_author_IP>
<wp:comment_date>2008-08-21 21:12:40</wp:comment_date>
<wp:comment_date_gmt>2008-08-22 02:12:40</wp:comment_date_gmt>
<wp:comment_content><![CDATA[WOW Buddy!

I had no idea. I check your blog hear and there but must have missed this one. I am dam glad your good to go and better now. I think its interesting you were able to sit up during surgery. Not much can stop you, not even heart surgery. Now I see how you are able to stay up all hours of the night learning new code when I get frustrated after a few hours. 

P.S. Bob Fitzgerald took over our site as webmaster. I found a way to get out from under it without pissing people off. He says to say hi. He asked me how I knew so much and I said I taught myself, but got started trying to follow people like you. I said I tried to learn from and follow code gurus. I mentioned your name and he said he knew you.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>69</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>64.222.173.4</wp:comment_author_IP>
<wp:comment_date>2008-08-24 19:43:05</wp:comment_date>
<wp:comment_date_gmt>2008-08-25 00:43:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the note Mike.  Yeah, things have been going well since the surgery.  I'm pretty much back to normal, and hopefully will be completely free of AF (not quite yet) by October.

Tell Bob I said hi.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>How do you market your jobs?</title>
<link>http://jasonleveille.com/2008/07/how-do-you-market-your-jobs/</link>
<pubDate>Tue, 08 Jul 2008 16:36:27 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=49</guid>
<description></description>
<content:encoded><![CDATA[On the way into work today I saw someone wearing a <a href="http://www.costumehub.com/Adults-Men-NoveltyFunny-Adult_Yellow_Chicken_-costumes/UI96-9096">Yellow chicken suit</a> in front of a <a href="http://www.redlobster.com/">Red Lobster</a> restaurant.  In and of itself that isn't much for news, however I almost went off the road when I saw the sign they were holding:
<blockquote>Top Frederick (as in Frederick, Maryland, USA) company looking for Senior Programmer ...</blockquote>
I really, really wish I carried a camera in my car.  How Senior is the person they are looking for I wonder?  Senior in High School?  I have a sense of humor, and this company was probably trying to appear casual and cool, but this just seems strange to me.

<a href="http://www.costumehub.com/Adults-Men-NoveltyFunny-Adult_Yellow_Chicken_-costumes/UI96-9096"><img class="size-full wp-image-50" title="Yellow Chicken Suit" src="http://jasonleveille.com/wp-content/uploads/2008/07/03-0903_3.jpg" alt="" width="275" height="380" /></a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>49</wp:post_id>
<wp:post_date>2008-07-08 11:36:27</wp:post_date>
<wp:post_date_gmt>2008-07-08 16:36:27</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>how-do-you-market-your-jobs</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1215534989</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>MySQL Replace Rocks</title>
<link>http://jasonleveille.com/2008/07/mysql-replace-rocks/</link>
<pubDate>Thu, 10 Jul 2008 20:12:49 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=51</guid>
<description></description>
<content:encoded><![CDATA[We have a client who is having issues with <a href="http://en.wikipedia.org/wiki/Character_encoding">character encoding</a>.  They recently had a massive content migration and along with the migration came numerous character issues.  They moved from a character set of <a href="http://en.wikipedia.org/wiki/Iso-8859-1">iso-8859-1</a> to <a href="http://en.wikipedia.org/wiki/Utf8">UTF-8</a>, and with multiple content editors copying/pasting from many different resources (pdf's, Word, Web Pages, etc) they now have some cleanup to do.  We were recently asked if we could provide a report on all the pages where certain characters resided.  No problem.  We ran some <abbr title="Structured Query Language">SQL</abbr> queries (most content resides in the database thankfully) that looked similar to the following:
<pre>SELECT p.id, p.title FROM `pages` p WHERE
p.content REGEXP '(¢|â|Ã)';</pre>
In the case of the above query, we're just taking advantage of <a href="http://dev.mysql.com/doc/refman/5.0/en/regexp.html">MySQL's native REGEXP operator</a> to check for the existence of any of the three characters (simplified for illustration) in a content block.  After running our <abbr title="Structured Query Language">SQL</abbr> statement we quickly realized that the work necessary to clean this up would likely amount to at least a few weeks for our client.  With an additional few hours of work (after backing things up and testing, testing, testing) we were able to provide a solution that will take a matter of minutes to implement (if the client chooses to hire us to do so).  Here is an abbreviated version of what we came up with:
<pre>UPDATE `pages` p SET p.content = replace(p.content,'Ã¢â‚¬Â','');
UPDATE `pages` p SET p.content = replace(p.content,'Ã¢â‚¬Å\“','');
UPDATE `pages` p SET p.content = replace(p.content,'¢â‚','');
...etc</pre>
<h3>Conclusion</h3>
There isn't anything earth shattering here.  These are simple queries, but they illustrate the inherent abilities of the technology employed with our client's application.  These inherent abilities, if known, have the potential to save dozens of hours.  In the case of the above example, I truly believe we will likely save our client at least 30 man hours.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>51</wp:post_id>
<wp:post_date>2008-07-10 15:12:49</wp:post_date>
<wp:post_date_gmt>2008-07-10 20:12:49</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>mysql-replace-rocks</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1219774237</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>title</wp:meta_key>
<wp:meta_value>MySQL replace functions</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>keywords</wp:meta_key>
<wp:meta_value>mysql, replace</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>description</wp:meta_key>
<wp:meta_value>Using the mysql replace function has the potential to save lots of man hours.</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>42</wp:comment_id>
<wp:comment_author><![CDATA[pokoka]]></wp:comment_author>
<wp:comment_author_email>pokoka@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.makethingstalk.co.nz</wp:comment_author_url>
<wp:comment_author_IP>125.236.230.53</wp:comment_author_IP>
<wp:comment_date>2008-07-16 17:42:31</wp:comment_date>
<wp:comment_date_gmt>2008-07-16 22:42:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hmmm ... I never tried MySQLs REGEXP. Looks good. Normally I'd take the "just rip it out change and throw back" approach. Your's is a lot better ;P]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>46</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>76.100.197.164</wp:comment_author_IP>
<wp:comment_date>2008-07-16 20:08:24</wp:comment_date>
<wp:comment_date_gmt>2008-07-17 01:08:24</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Up to this point I had never had a need for replace, and its use here was definitely a time saver.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>208</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>192.168.1.1</wp:comment_author_IP>
<wp:comment_date>2009-04-13 14:16:10</wp:comment_date>
<wp:comment_date_gmt>2009-04-13 19:16:10</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Sometimes when I go back and read old blog posts I have to laugh at myself.  I should have just taken the time to pay more attention to utf-8 encoding and I wouldn't have had to use any kind of find/replace method to solve the problem I had above.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>When do you program?</title>
<link>http://jasonleveille.com/2008/07/when-do-you-program/</link>
<pubDate>Sat, 12 Jul 2008 19:19:42 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=52</guid>
<description></description>
<content:encoded><![CDATA[More and more as of late I have been finding that I do most of my programming at work (as I should), and most of my reading at home.  At any given time I am reading 3 or 4 books, and trying to keep up with numerous blogs.  I have such a backlog of things I want to read that programming at home is often not an option.  Not to mention the fact that my family is growing (a 2 yr. old and another on the way).  So, I don't hunch over at my keyboard into the wee hours of the morning like I used to.  So, when do you program?
<h3>Currently Reading</h3>
Just in case you are curious, I am currently reading:
<ul>
	<li><a href="http://www.cc2e.com/">Code Complete 2nd Edition</a> (Loving every minute of it)</li>
	<li><a href="http://jspro.org/">Pro JavaScript Techniques</a> (Great book)</li>
	<li>Stephen King - Firestarter (Just finished Bag of Bones 2 nights ago)</li>
</ul>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>52</wp:post_id>
<wp:post_date>2008-07-12 14:19:42</wp:post_date>
<wp:post_date_gmt>2008-07-12 19:19:42</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>when-do-you-program</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1215890383</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>40</wp:comment_id>
<wp:comment_author><![CDATA[pokoka]]></wp:comment_author>
<wp:comment_author_email>pokoka@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.makethingstalk.co.nz</wp:comment_author_url>
<wp:comment_author_IP>125.236.230.53</wp:comment_author_IP>
<wp:comment_date>2008-07-16 17:14:18</wp:comment_date>
<wp:comment_date_gmt>2008-07-16 22:14:18</wp:comment_date_gmt>
<wp:comment_content><![CDATA[As with Marc, an excess of motivation is the only time I code. That usually only occurs between the hours of 9pm and 3am for some strange reason.  If I wasn't self-employed that would be problematic ;)]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>38</wp:comment_id>
<wp:comment_author><![CDATA[Marc Grabanski]]></wp:comment_author>
<wp:comment_author_email>m@marcgrabanski.com</wp:comment_author_email>
<wp:comment_author_url>http://marcgrabanski.com</wp:comment_author_url>
<wp:comment_author_IP>76.17.223.30</wp:comment_author_IP>
<wp:comment_date>2008-07-13 03:26:41</wp:comment_date>
<wp:comment_date_gmt>2008-07-13 08:26:41</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I program when I have excess of motivation.  Lately I have been programming until the wee hours of the morning as well as full time during the week. When I don't have motivation, then its time to go do something fun away from my computer!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>45</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>76.100.197.164</wp:comment_author_IP>
<wp:comment_date>2008-07-16 19:56:16</wp:comment_date>
<wp:comment_date_gmt>2008-07-17 00:56:16</wp:comment_date_gmt>
<wp:comment_content><![CDATA[In my late twenties, before the birth of my daughter, I regularly stayed up hammering away at the keyboard into the early morning (and I was teaching High School Programming at the time).  I'm lucky if I can make it to 10:00pm now.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>95</wp:comment_id>
<wp:comment_author><![CDATA[Russ Jones]]></wp:comment_author>
<wp:comment_author_email>spam@codeofficer.com</wp:comment_author_email>
<wp:comment_author_url>http://www.codeofficer.com/</wp:comment_author_url>
<wp:comment_author_IP>74.65.140.93</wp:comment_author_IP>
<wp:comment_date>2008-09-22 15:50:27</wp:comment_date>
<wp:comment_date_gmt>2008-09-22 20:50:27</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I'm in that self employed, working from home with a wife and two kids rut. I typically start about 5pm and code till about 5am ... with breaks in between for putting the kids to bed and watching a movie with the wife. I must say though, I think I do my BEST coding at the coffee-shop about mid afternoon. Thats when i really get to explore new ideas.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>96</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>76.100.197.164</wp:comment_author_IP>
<wp:comment_date>2008-09-22 18:46:27</wp:comment_date>
<wp:comment_date_gmt>2008-09-22 23:46:27</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for taking the time to leave a comment Russ.  5am sounds like you're finishing just in time to say good morning to the little ones.  I feel like I work a lot, and about once a week I'm up until 1am doing work, but 5am is too late/early for me!  Hopefully you balance all that work with some non-work stuff.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Design Is a Wicked Problem</title>
<link>http://jasonleveille.com/2008/07/design-is-a-wicked-problem/</link>
<pubDate>Sun, 13 Jul 2008 19:29:14 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=53</guid>
<description></description>
<content:encoded><![CDATA[<blockquote>Horst Rittel and Melvin Webber defined a "wicked" problem as one that could be clearly defined only by solving it, or by solving part of it (1973).  The paradox implies, essentially, that you have to "solve" the problem once in order to clearly define it and then solve it again to create a solution that works.  This process has been motherhood and apple pie in software development for decades (Peters and Tripp 1976) ... a dramatic example of such a wicked problem was the design of the original Tacoma Narrows bridge ... This is a good example of a wicked problem because, until the bridge collapsed, its engineers didn't know that aerodynamics needed to be considered to such an extent.  Only by building the bridge (solving the problem) could they learn about the additional consideration in the problem that allowed them to build another bridge that still stands.
<strong>Code Complete Second Edition</strong> - Steve McConnell (Chapter 5.1 Design Challenges)</blockquote>
Perhaps because I am a Mainer I keyed in on this content.  It's wicked good!  At any rate, I like the example that McConnell uses to illustrate a wicked problem.  Imagine though that the bridge had not collapsed, and instead only violently swayed in the wind.  Would the engineers have taken down the bridge and started over, or would they have <del>monkey patched</del> <ins>tried to extend</ins> a flawed design?  Would the bridge have been easy to "fix", or would the fixes only have introduced more potential for disaster.  It's interesting to think of software in this regard.  It's impossible to design software today that addresses every issue of tomorrow.  If the software is written in a cohesive, organized, thoughtful way though, it should be easier to <del>monkey patch</del> <ins>extend</ins>.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>53</wp:post_id>
<wp:post_date>2008-07-13 14:29:14</wp:post_date>
<wp:post_date_gmt>2008-07-13 19:29:14</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>design-is-a-wicked-problem</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1215982337</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>51</wp:comment_id>
<wp:comment_author><![CDATA[Mike Ames]]></wp:comment_author>
<wp:comment_author_email>Mike@amesweb.net</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>71.246.229.117</wp:comment_author_IP>
<wp:comment_date>2008-07-22 16:34:32</wp:comment_date>
<wp:comment_date_gmt>2008-07-22 21:34:32</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Awesome analogie Jason. I know the Tachoma Narrows Bridge very well since I teach about it in class, but I never related it to software, nor was I aware of the Wicked problem. I am not sure Microsoft has learned everything they could from past experience.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>52</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>76.100.197.164</wp:comment_author_IP>
<wp:comment_date>2008-07-22 19:25:42</wp:comment_date>
<wp:comment_date_gmt>2008-07-23 00:25:42</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for stopping by Mike, and I'm glad you appreciated the analogy.  Code complete (from where the analogy is derived) is full of useful analogies such as this one.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Adoption of Coding Standards</title>
<link>http://jasonleveille.com/2008/07/adoption-of-coding-standards/</link>
<pubDate>Tue, 15 Jul 2008 13:54:52 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=54</guid>
<description></description>
<content:encoded><![CDATA[I completely embrace the idea of coding standards, and for a long time I've used my own.  This morning I have decided that from now on I will be following the coding standards set fourth by the Zend Framework.

<a href="http://framework.zend.com/manual/en/coding-standard.html">http://framework.zend.com/manual/en/coding-standard.html</a>

This is a decision I don't make lightly, and one that I have been toying with for a long time.  Do you have a particular set of standards you follow?]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>54</wp:post_id>
<wp:post_date>2008-07-15 08:54:52</wp:post_date>
<wp:post_date_gmt>2008-07-15 13:54:52</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>adoption-of-coding-standards</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1216130120</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>41</wp:comment_id>
<wp:comment_author><![CDATA[pokoka]]></wp:comment_author>
<wp:comment_author_email>pokoka@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.makethingstalk.co.nz</wp:comment_author_url>
<wp:comment_author_IP>125.236.230.53</wp:comment_author_IP>
<wp:comment_date>2008-07-16 17:38:11</wp:comment_date>
<wp:comment_date_gmt>2008-07-16 22:38:11</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I came to the same conclusion two weeks ago.  I've toyed with the idea (coding standards for PHP) for years. 

With Symbian C++ I follow the standards to the 'letter' (well, you have too really) but with the freedom PHP provides its so easy to develop ones own coding style. 

I use PHP-CLi for my (personal) shell scripting which never did help convince me to adhere to coding standards. It's so easy to start with a few lines of procedural code and end up with some really handy class to reuse elsewhere. Ends up being a bit of a mish mash of course with variables in camel back, humpty dumpty, VB notation (oh the joy!).

Anyhow, Zend and PHP go 'hand in hand' so the way i see it one can't go wrong using their coding standards.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>44</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>76.100.197.164</wp:comment_author_IP>
<wp:comment_date>2008-07-16 19:53:17</wp:comment_date>
<wp:comment_date_gmt>2008-07-17 00:53:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[My feeling is that knowing how you are going to code (spacing/indentation/naming conventions/etc), though it may seem trivial, is really very important.  It is one less thing to think about as you are coding.  Unfortunately I haven't been as consistent in the past as I should have been, however the decision to adopt Zend's standards has put my mind at ease a little bit.

Regardless of what I am talking about in development I almost always end up asking myself the same question: how can I manage complexity in my code, and ultimately make it more maintainable.  The answer to this is sometimes as simple as adopting coding standards.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>49</wp:comment_id>
<wp:comment_author><![CDATA[Travis Swicegood]]></wp:comment_author>
<wp:comment_author_email>tswicegood@php.net</wp:comment_author_email>
<wp:comment_author_url>http://www.travisswicegood.com/</wp:comment_author_url>
<wp:comment_author_IP>24.143.57.92</wp:comment_author_IP>
<wp:comment_date>2008-07-21 13:31:33</wp:comment_date>
<wp:comment_date_gmt>2008-07-21 18:31:33</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I'd recommend taking a look at the PEAR CS.  Particularly the PEAR2 CS for code with namespaces.  The PEAR standard has been around for a long time and was the base for the ZF standard as far as I can tell.

Disclaimer: I'm a member of the PEAR Group, so take what I say with a grain of salt...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>50</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-07-21 14:32:43</wp:comment_date>
<wp:comment_date_gmt>2008-07-21 19:32:43</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for stopping by Travis.  Long time follower of your work.  For anyone interested, the standards Travis is talking about are located at:

<a href="http://pear.php.net/manual/en/standards.php" rel="nofollow">http://pear.php.net/manual/en/standards.php</a>

I'm going to find some time tonight and take a closer look.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Importance of Managing Complexity</title>
<link>http://jasonleveille.com/2008/07/importance-of-managing-complexity/</link>
<pubDate>Thu, 17 Jul 2008 02:04:23 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=56</guid>
<description></description>
<content:encoded><![CDATA[Another great quote from Code Complete:

<blockquote>Managing complexity is the most important technical topic in software development.  In my view, it's so important that Software's Primary Technical Imperative has to be <em>managing complexity</em> ... Once you understand that all other technical goals in software are secondary to managing complexity, many design considerations become straightforward.<br>Code Complete Second Edition - Steve McConnell (Chapter 5.2 Key Design Concepts)</blockquote>

It all comes back to maintainability of your codebase.  This is something that I am constantly trying to get better at.  Typically the majority of time spent in a web application is post initial production deployment.  I would advocate that extra time up front to make those smart decisions will only mean quicker response times when bug fix and feature requests are coming in.  The quicker response times are a direct result of managing complexity up front.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>56</wp:post_id>
<wp:post_date>2008-07-16 21:04:23</wp:post_date>
<wp:post_date_gmt>2008-07-17 02:04:23</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>importance-of-managing-complexity</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1216260264</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>A List Apart: Survey</title>
<link>http://jasonleveille.com/2008/07/a-list-apart-survey/</link>
<pubDate>Wed, 30 Jul 2008 14:49:47 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=58</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://alistapart.com/articles/survey2008"><img class="aligncenter size-full wp-image-59" title="i-took-the-2008-survey" src="http://jasonleveille.com/wp-content/uploads/2008/07/i-took-the-2008-survey.gif" alt="" width="180" height="46" /></a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>58</wp:post_id>
<wp:post_date>2008-07-30 09:49:47</wp:post_date>
<wp:post_date_gmt>2008-07-30 14:49:47</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>a-list-apart-survey</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1217429387</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>My Classes Assignments</title>
<link>http://jasonleveille.com/2008/08/my-classes-assignments/</link>
<pubDate>Tue, 26 Aug 2008 17:13:44 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=60</guid>
<description></description>
<content:encoded><![CDATA[A few weeks ago I made the decision to stop maintaining my-classes.org, and in that short time I have had numerous requests for access to the assignments that used to be hosted there.  The assignments can now be found at: <a href="http://jasonleveille.com/teacher/assignments/">http://jasonleveille.com/teacher/assignments/</a>.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>60</wp:post_id>
<wp:post_date>2008-08-26 12:13:44</wp:post_date>
<wp:post_date_gmt>2008-08-26 17:13:44</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>my-classes-assignments</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1219770853</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Update for August</title>
<link>http://jasonleveille.com/2008/08/update-for-august/</link>
<pubDate>Wed, 27 Aug 2008 18:46:24 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=61</guid>
<description></description>
<content:encoded><![CDATA[This past month has been an extremely busy one (coupled with an exceptionally unbusy 12 day vacation!).  In case you are wondering what I've been up to, here is the abbreviated version:
<ul>
	<li>12 days of vacation in Maine.  9 of which were involved swimming/boating/fishing during the day and campfires at night.</li>
	<li>I moved this blog over to <a href="http://www.slicehost.com/">slicehost</a> and spent a good deal of time setting up the <abbr title="Operating System">OS</abbr> (Ubuntu 8.04) and webserver (Apache 2).  I am absolutely loving the complete control I now have.  So long shared hosting.</li>
	<li>I spent a good deal of time at the beginning of August overhauling <a href="http://code.google.com/p/simple-mc/source/list">SimpleMC</a>.  It's crazy how much I still have <a href="http://code.google.com/p/simple-mc/issues/list">to do</a> ... and it sucks that I've broken the editor in <abbr title="firefox">FF</abbr> and <abbr title="Internet Explorer">IE</abbr> and I can't seem to find the time to fix it.  The 70ish people who have downloaded the app are probably pretty disappointed.</li>
	<li>This month saw a number of <a href="http://www.trustedsource.org/blog/142/New-SQL-Injection-Attack-Infecting-Machines">ASP/SQL applications attacked</a> for which we were hired to remediate the security holes.  Can you say lesser database user priviledged accounts and data filters.</li>
	<li>Grad class tonight (Software Enginnering) and tomorrow (Artificial Intelligence).  I'm not looking forward to either.  Perhaps I'll be pleasantly surprised and at least one of the classes will go beyond theory.</li>
	<li>We broke up with our daycare provider and moved our daughter to a new daycare.  This has been pretty stressful, but things are going well.</li>
</ul>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>61</wp:post_id>
<wp:post_date>2008-08-27 13:46:24</wp:post_date>
<wp:post_date_gmt>2008-08-27 18:46:24</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>update-for-august</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1219862784</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Interview at Teach Me The Web</title>
<link>http://jasonleveille.com/2008/09/interview-at-teach-me-the-web/</link>
<pubDate>Fri, 12 Sep 2008 13:38:20 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=62</guid>
<description></description>
<content:encoded><![CDATA[Recently I <a href="http://teachmetheweb.org/index.php/tmtw/interview/interview_with_jason_leveille/">took part in an interview</a> at <a href="http://teachmetheweb.org/">Teach Me The Web</a>.  The owner of this site, <a href="http://jeffbrowndesigns.com/">Jeff Brown</a>, is a Web teacher at <a href="http://www.montgomeryschoolsmd.org/schools/damascushs/">Damascus High School</a> in Damascus, Maryland.  Included in Jeff's curriculum are <a href="http://teachmetheweb.org/index.php/tmtw/blog-article/2008_guest_speaker_line_up/">weekly speakers</a>, as well as frequent interviews with professionals.  I would say that Jeff likely has one of the best web design/development programs in the country.  The exposure he is providing his students to the web industry is a perfect illustration of his commitment to teaching web design / development as it should be taught.  <abbr title="High School">HS</abbr> classrooms are not black boxes.  Anyway, keep it up Jeff!

<a href="http://teachmetheweb.org/index.php/tmtw/interview/interview_with_jason_leveille/">The Interview</a>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>62</wp:post_id>
<wp:post_date>2008-09-12 08:38:20</wp:post_date>
<wp:post_date_gmt>2008-09-12 13:38:20</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>interview-at-teach-me-the-web</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1221226764</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>86</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-09-15 14:01:11</wp:comment_date>
<wp:comment_date_gmt>2008-09-15 19:01:11</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Looking forward to it!!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>85</wp:comment_id>
<wp:comment_author><![CDATA[Jeff]]></wp:comment_author>
<wp:comment_author_email>jeffrey.todd.brown@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://teachmetheweb.org</wp:comment_author_url>
<wp:comment_author_IP>205.222.248.96</wp:comment_author_IP>
<wp:comment_date>2008-09-15 13:54:06</wp:comment_date>
<wp:comment_date_gmt>2008-09-15 18:54:06</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks!  It was fun having you participate and we are looking forward to having you in.

It should be said that much of what my program is is due to your push-start over the past 2-3 years, so thank you.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>How to use the Font Tag</title>
<link>http://jasonleveille.com/2008/09/how-to-use-the-font-tag/</link>
<pubDate>Wed, 17 Sep 2008 15:46:21 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=63</guid>
<description></description>
<content:encoded><![CDATA[It's disheartening, but I got an email this morning from a former co-worker (teacher).  He is a Web design/development teacher, and I feel like he has his act together.  Here is his email:
<blockquote>So my professor taught us how to use the font tag last night.  No joke.  I had a hard time not saying anything.

I am not sure if this makes it better, but she said that we had to use "" with our attribute values, though, because then it complies with web standards.

Do I say something?</blockquote>

And here is my response:

<blockquote>This is a really hard situation to be in.  I definitely don't think you should say something in front of the class.

Tread carefully, but I might talk to her alone and explain that you have been doing web design for a very long time.  Explain why you use CSS over font tags (why you as a web designer separate content from presentation.  Not "you" as in the general public).  You'll get a feeling if she is receptive or not to what you are saying.

Is this a prerequisite for another class?  Do you have to take this class?  If she isn't receptive to what you are saying I would try to get out of the class.

Jason</blockquote>

It's one thing to try to force the teaching of CSS for complete and total page layout on a college professor.  I could stomach an argument for the use of tables for certain presentational effects.  However, teaching the use of the font tag in 2008 is irresponsible.  That might be a little strong considering I don't know the background of this teacher.  Perhaps my friend should try harder to point this professor in the right direction.  Your thoughts?

]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>63</wp:post_id>
<wp:post_date>2008-09-17 10:46:21</wp:post_date>
<wp:post_date_gmt>2008-09-17 15:46:21</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>how-to-use-the-font-tag</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1221751034</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>90</wp:comment_id>
<wp:comment_author><![CDATA[Tobias]]></wp:comment_author>
<wp:comment_author_email>tobiasg@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>216.158.163.242</wp:comment_author_IP>
<wp:comment_date>2008-09-18 10:14:03</wp:comment_date>
<wp:comment_date_gmt>2008-09-18 15:14:03</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Where is he taking this class?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>91</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-09-18 10:17:37</wp:comment_date>
<wp:comment_date_gmt>2008-09-18 15:17:37</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey, Tobias.  I don't feel comfortable saying.  I actually didn't even ask him before I posted this article, so I don't want to say too much.  That reminds me, I need to send him an email.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>88</wp:comment_id>
<wp:comment_author><![CDATA[Steve Clay]]></wp:comment_author>
<wp:comment_author_email>steve@mrclay.org</wp:comment_author_email>
<wp:comment_author_url>http://mrclay.org/</wp:comment_author_url>
<wp:comment_author_IP>72.196.104.172</wp:comment_author_IP>
<wp:comment_date>2008-09-17 15:16:16</wp:comment_date>
<wp:comment_date_gmt>2008-09-17 20:16:16</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Web design is certainly one of those fields where change is constant and you have to read to keep up; it makes you wonder what this person has been reading for the last, say, 10 years.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>89</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>199.165.205.170</wp:comment_author_IP>
<wp:comment_date>2008-09-17 15:24:35</wp:comment_date>
<wp:comment_date_gmt>2008-09-17 20:24:35</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You are right.  Change is definitely constant, and if a student had the expectation that they were going to learn all about -webkit-border-radius in a college web design/dev class, chances are pretty good they would be let down.  But the font tag ... when almost every single book on the subject matter these days talks about separating content from presentation, and at the college level you are teaching font tags, it might be time to brush up on your skillset.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>131</wp:comment_id>
<wp:comment_author><![CDATA[Deanna]]></wp:comment_author>
<wp:comment_author_email>romero.deanna@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>98.204.196.78</wp:comment_author_IP>
<wp:comment_date>2008-12-24 22:06:31</wp:comment_date>
<wp:comment_date_gmt>2008-12-25 03:06:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey Mr. Leveille!  I was looking for your old my-classes.org site, and found this new site of yours.  

I know this particular entry is old, but it struck a chord with me.  I think I may have told you a couple of years ago that I snagged a job as a student web designer at CP (I don't want to name the exact department).  I've been with them for 3 years now, and I recently switched jobs within the dept; some would say a colleague of mine stole me from my previous position because of my web design skills.  Anyway, with my first job, I was working for a boss who clearly has no knowledge of web design, or graphic design, which is really dumbfounding since he is the manager of our group, and we are in charge of the website and print publications for our dept.  For the 3 years I worked for him, I was conflicted about bringing this up to anyone.  I didn't want to be the cause of him losing his job, but he clearly doesn't know what he's doing.  To paint a picture:  one day he calls me into his office as he is working in Powerpoint, and asks how to send a black box behind some white text.  Things are even worse when it comes to anything web related.  He seems to latch on to buzz words he hears, but clearly has no concept of, and wants to implement them.  

I guess now that I have left the job (and not complained to any superiors about my former boss' lack of knowledge), I wonder if I should have ever said something, and how so?  Honestly, I've been told he was put in the position of manager so he could overlook the group, but our Senior Designers were to be the ones to do hands-on tasks.  As the manager, my former boss would just be in charge of delegating tasks and making sure things are running as they should.  

Now, I am happy to say that I am working with a competent manager, who realizes and admits he does not have the knowledge I do about web design, but trusts me to get the job done.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>132</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>76.100.197.164</wp:comment_author_IP>
<wp:comment_date>2008-12-25 13:44:02</wp:comment_date>
<wp:comment_date_gmt>2008-12-25 18:44:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey, Deanna.  Nice to hear from you!  I'm happy to here that you have continued applying your web skills.  Send me an email.  I'd like to talk more about the kinds of things you are doing.  

While it is uncommon that the manager of a group of designers/developers wouldn't know anything about the trade, it isn't uncommon for someone in a management position in this field to be out of touch with the world which they are trying to manage.  The world of the web is a fast paced world, and many people (for whatever reason) can't keep up.  That's fine when, like your second manager, you recognize the fact that you haven't been able to keep up.  A good manager will recognize his/her assets and defer to those assets.  The truly talented people who work on the web never stop trying to stay on top of things.  They never stop trying to learn.  Personally, I feel it is my duty to learn as much as I can, about as many things as I can (and fortunately I have a great job for this).  That way, when it comes time to make a decision regarding a specific project, I can be in a position to make an educated decision about what I think is best for the project.

Anyhow, my point is that you likely did the right thing by not saying anything.  Chances are pretty good that nothing would have happened, and you might have ended up in a very uncomfortable work environment.  
Also, if you are a person who cares and works hard to be knowledgeable, than you can alleviate the burden of having a brain dead manager.  I'm sure that was the case at your job!

Looking forward to hearing from you.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>131</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>CakePHP Auth Model Update User on Model Edit</title>
<link>http://jasonleveille.com/2008/09/cakephp-auth-model-update/</link>
<pubDate>Tue, 23 Sep 2008 01:39:25 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=64</guid>
<description></description>
<content:encoded><![CDATA[Ok, so I'm in the mood to write a little bit.  I finished my grad school homework a little early, so I'd like to talk about <a href="http://cakephp.org/">CakePHP</a>.  Specifically, updating your user model session data when the user model is edited.  Here is the scenario:
<ul>
	<li>Your are using CakePHP's wonderful <a href="http://book.cakephp.org/view/172/Authentication">Auth Component</a>.</li>
	<li>After a successful login, you have auth model data available to you via $this-&gt;Auth-&gt;user('key');</li>
	<li>It just so happens that this model data is stored in a session, in a format something like the following:</li>
</ul>
<pre>Array
(
    [Auth] =&gt; Array
    (
        [Model] =&gt; Array
        (
            [id] =&gt; 1
            [first_name] =&gt; Jason
            [last_name] =&gt; Leveille
        )
    )
)</pre>

<ul>
<li>You use this data</li>
<li>When you update your user model, you want this data updated as well
</ul>

If you're anything like I am, you make use of this data to display information to your authenticated user.  For example, in your controller you might set a firstName variable for use in a welcome message.

<pre class="php" name="code">
$firstName = $this->Auth->user('first_name');
$this->set(compact('firstName'));
</pre>

It's very likely that you have provided an edit action in your auth userModel controller.  It's also likely that you have provided the user with the ability to modify their first name.  In our welcome message, we are pulling our first name data from a session.  If we want this data to be accurate, than the change to our user first name in the action will also need will not be reflected in this auth session.  The solution of course is to merge $this->data['$this-Auth->userModel] with our Auth.Model session.

<pre class="php" name="code">
//update the auth userModel data
$authUpdated = Set::merge(
    $this->Session->read(
        sprintf('Auth.%s', $this->Auth->userModel)
    ), 
    $this->data[$this->Auth->userModel]
);
$this->Session->write(
    sprintf('Auth.%s', $this->Auth->userModel), 
    $authUpdated
);
</pre>

Again, this code would be part of your user model edit action, and would be included after a successful save operation.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>64</wp:post_id>
<wp:post_date>2008-09-22 20:39:25</wp:post_date>
<wp:post_date_gmt>2008-09-23 01:39:25</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>cakephp-auth-model-update</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1222134334</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>126</wp:comment_id>
<wp:comment_author><![CDATA[etipaced]]></wp:comment_author>
<wp:comment_author_email>kevindecapite@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://etipaced.blogspot.com/</wp:comment_author_url>
<wp:comment_author_IP>24.176.223.188</wp:comment_author_IP>
<wp:comment_date>2008-11-21 14:02:31</wp:comment_date>
<wp:comment_date_gmt>2008-11-21 19:02:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks Jason, this is exactly what I was trying to do. I didn't know about Set::merge() but it's a very helpful function. Just to help the Google bot, here's what I typed into Google to find this article:

"cakephp update auth user session"]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>127</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>68.167.144.98</wp:comment_author_IP>
<wp:comment_date>2008-11-21 14:24:58</wp:comment_date>
<wp:comment_date_gmt>2008-11-21 19:24:58</wp:comment_date_gmt>
<wp:comment_content><![CDATA[No problem etipaced.  I'm glad you found this useful.  There is also this thread which others may or may not find useful:

http://n2.nabble.com/$this-%3EAuth-%3Euser-not-refreshing-after-edit-td526651.html]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Blog Overhaul Using Django</title>
<link>http://jasonleveille.com/2008/09/blog-overhaul-using-django/</link>
<pubDate>Wed, 24 Sep 2008 00:32:46 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=65</guid>
<description></description>
<content:encoded><![CDATA[My plan for a long time now has been to move away from <a href="http://wordpress.org/">Wordpress</a> as my blog engine.  Wordpress has been great for me, and it does a lot of things right (for one, it just works and you can be up and running with a blog very rapidly), but it can be a pig.  Anyway, I figure that by putting it in writing I'll start to find the time to get this process started.  So, my only decision is what will be my engine.  Here is a list of choices that I have considered over the past few months, as well as reasons why I am not going in their direction:
<h3><a href="http://expressionengine.com/">Expression Engine (EE)</a></h3>
I have never built an EE site.  Twice now I have installed 1.6, only to be turned off by the administrative experience.  It seems clunky to me and not very fluid.  With that said, I have heard great things about this software.  I also like what I've heard about the framework that powers EE (<a href="http://codeignitor.com/">CodeIgnitor</a>), and I'm especially exited about the looks of 2.0 (where the hell are you).  I'm choosing not to go with EE because in the coming months I will get my fix through work.  I believe there are at least 2 projects coming up where we will be using EE.
<h3><a href="http://cakephp.org/">CakePHP</a></h3>
I have considered building my blog from the ground up with CakePHP.  I am working on 3 projects now that are powered by CakePHP.  Cake has made me a better developer by keeping me organized (thanks <a href="http://en.wikipedia.org/wiki/Model-view-controller">MVC</a>), making me follow conventions (but allowing me to break those conventions where necessary), and providing a host of valuable classes for a variety of tasks.  A lot of which take the mundane out of developing.  Let's face it, developing can be mundane and repetitive.  I am choosing not to go with Cake because I am getting my Cake Fix at work.
<h3><a href="http://codeignitor.com/">CodeIgnitor</a> and <a href="http://www.doctrine-project.org/">Doctrine</a></h3>
I have considered building my blog from the ground up with <a href="http://codeigniter.com/wiki/Using_Doctrine_with_Code_Igniter/">CodeIgnitor and Doctrine</a>.  I have virtually no experience with Doctrine, and even less with CI, but I've heard great things about both.  Doctrine seems like it rocks the house, and <a href="http://ellislab.com/">EllisLabs</a> (the guys responsible for CI) seem like they really have their act together.  I am choosing not to go this route because if I am building an app from the ground up, chances are very high that I will be choosing CakePHP.  Until the day comes where someone shows me overwhelming evidence as to why I should be using a framework other than Cake (and yes, I've seen <a href="http://www.sitepoint.com/blogs/2008/08/29/rasmus-lerdorf-php-frameworks-think-again/">Rasmus' presentation on frameworks</a>), than I'll continue baking.
<h2>And the Winner Is <a href="http://www.djangoproject.com/">Django</a></h2>
Just in case you didn't get it from my title, I'll be choosing to go the route of <a href="http://www.djangoproject.com/">Django</a> for my rebuild.  In the few hours I've taken to read Django documentation and play around I have been thoroughly impressed.  The <a href="http://docs.djangoproject.com/en/dev/topics/templates/">template system</a> is awesome, and the <a href="http://docs.djangoproject.com/en/dev/intro/tutorial02/#intro-tutorial02">automatic admin generation</a> has me all hot and bothered (though I'll really get hot and bothered after I give the tires a really good kick).  I've wanted to dive into <a href="http://en.wikipedia.org/wiki/Pyton">python</a> for a few years now, and I've been curious about Django for over a year, so I figure it is a good choice for me.

Anyway, there you have it.  With grad school and everything else I have going on (we have a super secret, earth shattering, take over the world project in the making at work), I just hope I won't be looking back at this post in 6 months thinking, "what a set of donkey balls I was for writing that.  I haven't done shit in 6 months".  If you think you can persuade me to try something other than Django, give it a try.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>65</wp:post_id>
<wp:post_date>2008-09-23 19:32:46</wp:post_date>
<wp:post_date_gmt>2008-09-24 00:32:46</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>blog-overhaul-using-django</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1233755769</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>110</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>76.100.197.164</wp:comment_author_IP>
<wp:comment_date>2008-10-26 19:59:28</wp:comment_date>
<wp:comment_date_gmt>2008-10-27 00:59:28</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for stopping by Joel.  Glad you liked the post.  I've tinkered around with Django for about an hour over the past month.  I'm disappointed that I haven't found more time.  Hopefully this next month will be different.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>108</wp:comment_id>
<wp:comment_author><![CDATA[Joel Longie]]></wp:comment_author>
<wp:comment_author_email>mutantboss@mutantbox.com</wp:comment_author_email>
<wp:comment_author_url>http://joellongie.com</wp:comment_author_url>
<wp:comment_author_IP>98.165.60.196</wp:comment_author_IP>
<wp:comment_date>2008-10-26 19:15:29</wp:comment_date>
<wp:comment_date_gmt>2008-10-27 00:15:29</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Great Post and Site, Im bookmarking it.  I recently went though the same thing, but going from Wordpress to Drupal.  I have been wondering about Django, might check it out for the future.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>103</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>68.167.144.98</wp:comment_author_IP>
<wp:comment_date>2008-10-16 10:20:54</wp:comment_date>
<wp:comment_date_gmt>2008-10-16 15:20:54</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yeah, I haven't even thought about this since I wrote this article.  Looks like I gave myself a 6 month time window though before I can start calling myself names ... that would be March 23, 2009.  1 month after our new baby (2nd child) arrives!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Breaking my New Years Resolution</title>
<link>http://jasonleveille.com/2008/10/breaking-my-new-years-resolution/</link>
<pubDate>Mon, 27 Oct 2008 00:46:45 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=66</guid>
<description></description>
<content:encoded><![CDATA[December 31, 2007 I decided that I would not eat dessert at all in 2008.  292 days later (last Saturday, October 18th) I found myself holding onto a delicious looking, peanut buttery, chocolaty chunky, bowl of ice cream.  My daughter didn't want to hold it, and she didn't want to eat it.  She's 2.  I guess she has the right to say she wants ice cream and to then change her mind and make me hold it while she frolics about.  Anyhow, I found myself consumed with the need to eat the ice cream, so I ate it.  I also ate some ice cream and apple crisp when I got home.  Oh yeah, I also had a cookie.
<h2>Why?</h2>
This past summer I had <a href="http://jasonleveille.com/2008/07/goodbye-atrial-fibrillation/">heart surgery</a>.  I've had (past tense I hope) heart problems for about 8 years.  Sugary foods tended to cause problems for me, so I figured I would cut desserts out of my diet.  I've never been a dessert guy anyway, so this really wasn't a big deal for me.  I also decided to give up beer in 2008, as alcohol used to cause me problems.  That resolution lasted less than 2 weeks.
<h2>Disappointed?</h2>
Hell no ... though my daughter was when she finally decided that she wanted her ice cream back!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>66</wp:post_id>
<wp:post_date>2008-10-26 19:46:45</wp:post_date>
<wp:post_date_gmt>2008-10-27 00:46:45</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>breaking-my-new-years-resolution</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1225068406</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>112</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>68.167.144.98</wp:comment_author_IP>
<wp:comment_date>2008-11-03 14:02:02</wp:comment_date>
<wp:comment_date_gmt>2008-11-03 19:02:02</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Yes, it was the most difficult 2 weeks of my life!!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>111</wp:comment_id>
<wp:comment_author><![CDATA[Mike Ames]]></wp:comment_author>
<wp:comment_author_email>mike@amesweb.net</wp:comment_author_email>
<wp:comment_author_url>http://techedclass.com</wp:comment_author_url>
<wp:comment_author_IP>71.191.150.43</wp:comment_author_IP>
<wp:comment_date>2008-11-03 13:52:04</wp:comment_date>
<wp:comment_date_gmt>2008-11-03 18:52:04</wp:comment_date_gmt>
<wp:comment_content><![CDATA[You scared me when you wrote you gave up beer. I tried that for lent one year and Ill never do it again. I am glad to see it only lasted 2 weeks. whew...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Peter Schiff is the Man</title>
<link>http://jasonleveille.com/2008/11/peter-schiff-is-the-man/</link>
<pubDate>Fri, 14 Nov 2008 15:35:29 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=67</guid>
<description></description>
<content:encoded><![CDATA[Watching this clip makes me understand just a little bit better how we got into such a financial mess in this country.  It seems that while Peter Schiff was being real, every other financial advisor (at least the ones in these clips) were being dangerously negligent.  If I was as bad at my job as these asses (except for Peter Schiff!) I'd be out of work.  Ben Stein, you need to stick to <a href="http://www.youtube.com/watch?v=RcH-3d-BZn4">clear eyes commercials</a>.

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="425" height="344" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="src" value="http://www.youtube.com/v/2I0QN-FYkpw&amp;hl=en&amp;fs=1" /><embed type="application/x-shockwave-flash" width="425" height="344" src="http://www.youtube.com/v/2I0QN-FYkpw&amp;hl=en&amp;fs=1" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>67</wp:post_id>
<wp:post_date>2008-11-14 10:35:29</wp:post_date>
<wp:post_date_gmt>2008-11-14 15:35:29</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>peter-schiff-is-the-man</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1226676929</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>121</wp:comment_id>
<wp:comment_author><![CDATA[Steve Clay]]></wp:comment_author>
<wp:comment_author_email>steve@mrclay.org</wp:comment_author_email>
<wp:comment_author_url>http://mrclay.org/</wp:comment_author_url>
<wp:comment_author_IP>65.1.19.134</wp:comment_author_IP>
<wp:comment_date>2008-11-16 00:56:40</wp:comment_date>
<wp:comment_date_gmt>2008-11-16 05:56:40</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Wow, amazing. Also the <a href="http://www.youtube.com/watch?v=LfascZSTU4o" rel="nofollow">complete first clip vs. Laffer</a>.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>CakePHP Logging</title>
<link>http://jasonleveille.com/2008/12/cakephp-logging/</link>
<pubDate>Tue, 02 Dec 2008 18:12:13 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=70</guid>
<description></description>
<content:encoded><![CDATA[<a href="http://book.cakephp.org/view/158/Introduction">CakePHP logging</a> provides an easy way to write to either a debug or error log, however did you know that you can also very easily write to other log files?  I recently had two projects that needed customized logging.  One needed to log administrator behavior, and another needed to log communication between multiple servers.  This was as easy as adding the following wherever I needed to log an event:

<pre class="php" name="code">
$this->log('Log Message Here', 'LOG_FILE_NAME');
</pre>

In the example provided, I am setting my log message and log file.  Here is an example call to log and its associated entry:

<pre class="php" name="code">
$this->log(sprintf('Valid heartbeat request: %s', 
    json_encode($_POST)), 'REQUEST_VALID');
</pre>

<pre>
2008-11-12 12:22:10 REQUEST_VALID: Valid heartbeat request: {post_data}
</pre>

If the log file does not exist it is created and the log entry is appended to the new file.  If it does exist new log entries are appended to the existing log file.  Let's take a closer look at the source code.  

<!--more-->

<h3>Looking At the Code</h3>

Looking at cake/libs/object.php we see the definition of <a href="http://api.cakephp.org/object_8php-source.html#l00147">log</a>:

<pre class="php" name="code">
/**
 * API for logging events.
 *
 * @param string $msg Log message
 * @param integer $type Error type constant. Defined in app/config/core.php.
 * @return boolean Success of log write
 * @access public
 */
	function log($msg, $type = LOG_ERROR) {
		if (!class_exists('CakeLog')) {
			uses('cake_log');
		}
		if (is_null($this->_log)) {
			$this->_log = new CakeLog();
		}
		if (!is_string($msg)) {
			$msg = print_r($msg, true);
		}
		return $this->_log->write($type, $msg);
	}
</pre>

This bit of code is creating a <a href="http://api.cakephp.org/class_cake_log.html">CakeLog</a> object and invoking the <a href="http://api.cakephp.org/cake__log_8php-source.html#l00068">write method</a> of this object.  Looking at the write method of cake/libs/cake_log.php, we see the following:

<pre class="php" name="code">
/**
 * Writes given message to a log file in the logs directory.
 *
 * @param string $type Type of log, becomes part of the log's filename
 * @param string $msg  Message to log
 * @return boolean Success
 * @access public
 * @static
 */
	function write($type, $msg) {
		if (!defined('LOG_ERROR')) {
			define('LOG_ERROR', 2);
		}
		if (!defined('LOG_ERR')) {
			define('LOG_ERR', LOG_ERROR);
		}
		$levels = array(
			LOG_WARNING => 'warning',
			LOG_NOTICE => 'notice',
			LOG_INFO => 'info',
			LOG_DEBUG => 'debug',
			LOG_ERR => 'error',
			LOG_ERROR => 'error'
		);

		if (is_int($type) && isset($levels[$type])) {
			$type = $levels[$type];
		}

		if ($type == 'error' || $type == 'warning') {
			$filename = LOGS . 'error.log';
		} elseif (in_array($type, $levels)) {
			$filename = LOGS . 'debug.log';
		} else {
			$filename = LOGS . $type . '.log';
		}
		$output = date('Y-m-d H:i:s') . ' ' . ucfirst($type) . ': ' . $msg . "\n";
		$log = new File($filename, true);
		if ($log->writable()) {
			return $log->append($output);
		}
	}
</pre>

The bit of code above is setting the log level of our call to log.  Since our level likely does not exist (REQUEST_VALID), the else portion of the if statement is invoked, setting our filename to REQUEST_VALID.log.  After the filename is set, our output message is created, as well as a new <a href="http://api.cakephp.org/class_file.html">File</a> object.  If we take a closer look at the <a href="http://api.cakephp.org/file_8php-source.html#l00088">constructor for File</a>, we see that by passing true we are asking File to create our new file if it does not exist.  And finally, the log message is appended to the log file.

<h3>Conclusion</h3>

I genuinely enjoy working with <a href="http://www.cakephp.org/">CakePHP</a>.  Every new project I start that is CakePHP driven (which isn't always the case) allows me to improve the Cake part of my developers toolbox.  Every time a learn a new CakePHP feature, no matter how small, I feel like I can become a more productive developer.  In the example above, thanks to the forethought of the core developers, and the addition of a simple <a href="http://api.cakephp.org/cake__log_8php-source.html#l00092">else clause</a> to the if statement in the write method, custom logging in CakePHP is very easy.  Try it out.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>70</wp:post_id>
<wp:post_date>2008-12-02 13:12:13</wp:post_date>
<wp:post_date_gmt>2008-12-02 18:12:13</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>cakephp-logging</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1228243147</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Web Application Security</title>
<link>http://jasonleveille.com/2008/12/web-application-security/</link>
<pubDate>Fri, 05 Dec 2008 05:47:41 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=82</guid>
<description></description>
<content:encoded><![CDATA[In preparation for my <a href="http://www.slideshare.net/jleveille/web-application-security-presentation-820243">web application security talk</a> at <a href="http://www.montgomeryschoolsmd.org/schools/damascushs/">Damascus High School</a>, I have made my presentation available through <a href="http://www.slideshare.net/">slideshare</a>.  I will be speaking to <a href="http://teachmetheweb.org/">Jeff Brown's Advanced Web Design</a> students.  <del>I plan on eventually also providing code examples (where the real meat of the presentation lives).  For now, this will have to do!</del>
<ul>
	<li><a href="/talks/damascus-dec-08">Presentation Material</a></li>
</ul>
<div id="__ss_820243" style="width: 425px; text-align: left;"><a style="font:14px Helvetica,Arial,Sans-serif;display:block;margin:12px 0 3px 0;text-decoration:underline;" title="Web Application Security" href="http://www.slideshare.net/jleveille/web-application-security-presentation-820243?type=powerpoint">Web Application Security</a><object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="425" height="355" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always" /><param name="src" value="http://static.slideshare.net/swf/ssplayer2.swf?doc=web-application-security-1228455850567381-9&amp;stripped_title=web-application-security-presentation-820243" /><embed type="application/x-shockwave-flash" width="425" height="355" src="http://static.slideshare.net/swf/ssplayer2.swf?doc=web-application-security-1228455850567381-9&amp;stripped_title=web-application-security-presentation-820243" allowscriptaccess="always" allowfullscreen="true"></embed></object>
<div style="font-size: 11px; font-family: tahoma,arial; height: 26px; padding-top: 2px;">View SlideShare <a style="text-decoration:underline;" title="View Web Application Security on SlideShare" href="http://www.slideshare.net/jleveille/web-application-security-presentation-820243?type=powerpoint">presentation</a> or <a style="text-decoration:underline;" href="http://www.slideshare.net/upload?type=powerpoint">Upload</a> your own. (tags: <a style="text-decoration:underline;" href="http://slideshare.net/tag/security">security</a> <a style="text-decoration:underline;" href="http://slideshare.net/tag/web">web</a>)</div>
</div>

<h3>Update: Post Presentation</h3>

Just got back from the presentation and things went great.  I had forgotten how fast a 45 minute period goes by, and consequently portions of the presentation had to be cut out.  I also, for various reasons, couldn't show my code examples.  The kids seemed engaged and interested, and I think they understood the main point I was trying to get across: take care of your data online, and if you're developing an online application, take care of the information of others.  Jeff Brown recorded the presentation and will be making it available at <a href="http://teachmetheweb.org">his site</a> very soon.  <del>When that happens</del> I will provide <a href="http://teachmetheweb.org/index.php/tmtw/blog-article/guest_speaker_reactions_jason_leveille/">a link here</a>.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>82</wp:post_id>
<wp:post_date>2008-12-05 00:47:41</wp:post_date>
<wp:post_date_gmt>2008-12-05 05:47:41</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>web-application-security</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1231954801</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Make Yourself a Lasagna</title>
<link>http://jasonleveille.com/2008/12/make-yourself-a-lasagna/</link>
<pubDate>Thu, 18 Dec 2008 01:34:51 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=94</guid>
<description></description>
<content:encoded><![CDATA[I'm not writing anything else here, so I figured I'd post my lasagna recipe.  Careful, it's so good it will make you shiver.<!--more-->
<h3>The ingredients:</h3>
<ul>
	<li>1 Medium Onion</li>
	<li>As much garlic as your spouse can handle</li>
	<li>Olive or Canol Oil</li>
	<li>1 can tomato sauce</li>
	<li>2 cans flavored diced tomatoes (whatever you think you'll like.  This recipe used to be best with Olive Oil, Balsamic Vinegar, and Basil diced tomatoes, but I can't find them anymore)</li>
	<li> Spices (Basil, Oregano, Parsley).  Don't be afraid of the spices.  Don't overdo the basil.</li>
	<li>Balsamic Vinegar</li>
	<li>15 oz small curd cottage cheese</li>
	<li>1 medium egg</li>
	<li>1 can whole leaf spinach (or a bag of fresh spinach.  It doesn't have to be cooked)</li>
	<li> 1/2 cup grated Parmesan (good kind of grated Parmesan, not that fine grain shit you put on your Ragu sauce).</li>
	<li>1lb ground turkey</li>
	<li>1 package of lasagna noodles (I prefer the kind you don't have to cook first)</li>
	<li> 2 cups mozarella</li>
	<li>An oven and some oven mits</li>
	<li>A lasagna pan</li>
	<li>Some beer</li>
</ul>
<h3>The steps:</h3>
<ul>
	<li>Cut up an onion and as much garlic as you like</li>
	<li>Cook up the onion and garlic in some Olive or Canola oil until the Onions begin to caramelize (yum)</li>
	<li>Add a can of tomato sauce (plain), and two cans of diced tomatoes</li>
	<li>Add some balsamic vinegar to the mix (as much as you think you'll like (a few tablespoons)</li>
	<li>Add some spices to the mix</li>
	<li>Let it simmer</li>
	<li>Pre-Heat oven to 350.</li>
	<li>In a separate pan, cook up 1 lb of ground turkey, and drain</li>
	<li>Add turkey to the mix.  Taste it and add whatever you think it needs.</li>
	<li>In a bowl, mix up 1 can of spinach, 15 oz of small curd cottage cheese, 1 egg, and 1/4 cup of the grated Parmesan</li>
	<li>In a lasagna pan, add 1/2 of the tomato sauce mixture.</li>
	<li>Add a layer of lasagna noodles (I usually put 5 in a layer)</li>
	<li>Add a layer of the cottage cheese mixture</li>
	<li>Add 1 cup of Mozzarella</li>
	<li>Repeat layers, ending with 1 cup of Mozzarella</li>
	<li>Add 1/4 cup of grated Parmesan to the top</li>
	<li>Cover with tin foil and cook for 30 minutes</li>
	<li>Remove tin foil and cook for 15 minutes</li>
	<li>Remove from oven and let the thing cool down a little bit.  Try not to get excited while you are waiting.  Have a beer or something.</li>
	<li>EAT</li>
</ul>
And that was all from memory.  I swear in the name of good lasagna.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>94</wp:post_id>
<wp:post_date>2008-12-17 20:34:51</wp:post_date>
<wp:post_date_gmt>2008-12-18 01:34:51</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>make-yourself-a-lasagna</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1229564092</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>130</wp:comment_id>
<wp:comment_author><![CDATA[Zac]]></wp:comment_author>
<wp:comment_author_email>Mail@zgordon.org</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>32.165.240.184</wp:comment_author_IP>
<wp:comment_date>2008-12-17 21:42:22</wp:comment_date>
<wp:comment_date_gmt>2008-12-18 02:42:22</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Garfield would be proud.  Proud.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Book Review: CakePHP Application Development</title>
<link>http://jasonleveille.com/2008/12/book-review-cakephp-application-development/</link>
<pubDate>Tue, 30 Dec 2008 14:36:46 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=102</guid>
<description></description>
<content:encoded><![CDATA[I was recently contacted by <a href="http://www.packtpub.com/">PACKT Publishing</a> and asked to provide a review for <a href="http://www.packtpub.com/cakephp-application-development/book">CakePHP Application Development</a>.  Following is the review.<!--more-->
<div id="hreview-This-Book-Fell-Short-For-Me" class="hreview">
<h2 class="summary">This Book Fell Short For Me</h2>
<abbr class="dtreviewed" title="2008-12-30T09:22-05:00">Dec 30, 2008</abbr> by <span class="reviewer vcard"><span class="fn">Jason R. Leveille</span></span>
<div class="item"><a class="fn url" href="http://www.packtpub.com/cakephp-application-development/book">CakePHP Application Development</a></div>
<abbr class="rating" title="2">★★☆☆☆</abbr><span class="version" style="display: none;">0.3</span>
<div class="description item vcard">If it is of any consequence, I have been working with CakePHP for over a year now, and over that year I have worked on 5 CakePHP projects (of various sizes).  Though there were parts of the book I liked, for both technical and non-technical reasons I wasn't a fan of this book.
<h3>The Parts I Liked</h3>
The example driven approach taken by the authors provides newcomers to CakePHP with step-by-step instructions for working with Cake.  Providing source code examples is often the best way to learn/teach a particular subject.  Ahsanul and Anupom provided plenty of source code to look at.  They also provided detailed feedback regarding what exactly is going on in their examples.  Though I thought the feedback was verbose and redundant at times, I think newcomers to Cake would like the detailed explanation this book provides.
<h3>The Parts I Struggled With</h3>
Some of the major reasons why this book wasn't for me have nothing to do with technical content.  The writing style of the authors, as well as errors in grammar and code examples, made this a very difficult read for me (and I read the book from cover to cover).  I also took issue with inconsistent code formatting (indentation and spacing of code).  As I am reading a book and my reading flow is interrupted, I become frustrated with the text and distracted by the interruptions.  In the case of this book, the interruptions served to divert my attention from the subject matter.

As far as technical content, this book does not have nearly as much to offer (nor will it be as up-to-date) as what you would find by visiting <a href="http://book.cakephp.org">book.cakephp.org</a> (and <a href="http://api.cakephp.org">api.cakephp.org</a>), even if you're just looking for an introduction.  Your best source of information for CakePHP will always be these two websites.  That doesn't mean that a CakePHP book couldn't have value ... on the contrary, I don't care how good online documentation is (and Cakes is among the best for an open source project), there is no substitute for a good book.  With the alternatives available though, a Cake book would have to shine.  This book didn't shine for me.  One glaring example exists in the QuickWall demo application built towards the end of the book.  The authors make use of the CakePHP minLength model validation rule.  Frequently throughout the demo, in source code and in explanations, they refer to this rule as minLenght.  This is, of course, a mistake, and it happens in multiple places.  How could this mistake make it all the way to final publication?  When I checked the online errata for this book, I found no mention of the error (I submitted an errata entry that may or may not be there when you read this).  The minLength example represents a small piece of one part of the book, but it provides a window into what I saw as a clear lack of detailed polish throughout the book.

Other issues I had with this book include: 1) I understand that many books are going to talk about JavaScript and try to meet their quota for Web 2.0 buzzwords, however I believe that space would have been better filled with information about CakePHP behaviors (containable), plugins, internationalization/localization, configuration (Configure class), debugging, etc, etc; 2) If you are going to use the e (echo) shortcut, take the next step and also use the h shortcut to escape output where appropriate; 3) Often books give a false impression that using a framework such as this will bring you from concept to completion in no time at all.  Although a full stack framework such as this will take care of many mundane development tasks, there will always be a substantial amount of work left to do, for example, after running cake and baking your models/views/controllers.  Data needs to be filtered and escaped, granular access control and administrative backends need to be constructed, sql calls need to be vetted for efficiency, proper deployment processes need to be put in place, etc, etc.
<h3>Conclusion</h3>
No framework can be the Chia Pet of the development world - you can't sprinkle on a little water and expect to have a plant with little effort in a short amount of time.  I think that any indication otherwise is misleading.  You'll still have to work hard with Cake (application development takes time), but at least you'll be working in the right direction.  I thought the message of how easy development is with Cake was too strong in this book.  Poor applications can be built with or without Cake in PHP.  It is up to authors to provide at least a partial glimpse into best practices when developing with the topic they are writing about.  I just didn't think that happened here.  With polish, attention to detail, and the inclusion of a wider range of CakePHP features, I think this book would have been a nice addition to your collection.  Unfortuantely, for me it fell short.</div>
</div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>102</wp:post_id>
<wp:post_date>2008-12-30 09:36:46</wp:post_date>
<wp:post_date_gmt>2008-12-30 14:36:46</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>book-review-cakephp-application-development</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1234548359</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>135</wp:comment_id>
<wp:comment_author><![CDATA[Zac]]></wp:comment_author>
<wp:comment_author_email>mail@zgordon.org</wp:comment_author_email>
<wp:comment_author_url>http://zgordon.org</wp:comment_author_url>
<wp:comment_author_IP>71.163.146.53</wp:comment_author_IP>
<wp:comment_date>2008-12-30 13:18:30</wp:comment_date>
<wp:comment_date_gmt>2008-12-30 18:18:30</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for the review, Jason.

I'm curious if you have read the beginning Cake book from Apress and what you thought of that...]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>136</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>68.167.144.98</wp:comment_author_IP>
<wp:comment_date>2008-12-30 13:23:05</wp:comment_date>
<wp:comment_date_gmt>2008-12-30 18:23:05</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I haven't Zac, but maybe one day I will.  In general, all the Apress books I've read (1 which I'm current reading) have been great books: Beginning Python, Pro JavaScript Techniques, Pro JavaScript Design Patterns, Pro PHP Security, and Pro C# 2005.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>138</wp:comment_id>
<wp:comment_author><![CDATA[Review: CakePHP Application Development - cakebaker]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://cakebaker.42dh.com/2008/08/14/review-cakephp-application-development/</wp:comment_author_url>
<wp:comment_author_IP>208.113.133.4</wp:comment_author_IP>
<wp:comment_date>2008-12-31 04:25:39</wp:comment_date>
<wp:comment_date_gmt>2008-12-31 09:25:39</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] Jason Leveille [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>142</wp:comment_id>
<wp:comment_author><![CDATA[Book Review: CakePHP Application Development | PseudoCoder.com]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.pseudocoder.com/archives/2009/01/15/book-review-cakephp-application-development/</wp:comment_author_url>
<wp:comment_author_IP>208.113.223.186</wp:comment_author_IP>
<wp:comment_date>2009-01-15 23:41:50</wp:comment_date>
<wp:comment_date_gmt>2009-01-16 04:41:50</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] how guy #497 of the Houston 500 felt. There isn&#8217;t much new to cover, as it has all been said before. I will say the grammar didn&#8217;t bother me, like it did most of the other reviewers, probably [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>VI Tips of the Day #1</title>
<link>http://jasonleveille.com/2008/12/vi-tips-of-the-day-1/</link>
<pubDate>Tue, 30 Dec 2008 14:44:36 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=112</guid>
<description></description>
<content:encoded><![CDATA[<h3>Inserting Text</h3>
After opening a <a href="http://en.wikipedia.org/wiki/Vi">VI</a> session, often you'll want to start editing or adding text.
<ul>
	<li><strong>a</strong> - Append after cursor</li>
	<li><strong>A</strong> - Append after end of current line</li>
	<li><strong>i</strong> - Insert before cursor</li>
	<li><strong>I</strong> - Insert before beginning of current line</li>
	<li><strong>o</strong> - Open new line below current line and insert</li>
	<li><strong>O</strong> - Open new line above current line and insert</li>
	<li><strong>:r <em>file</em></strong> - Read file specified by <em>file</em>,and insert contents after current line</li>
	<li><strong>:nr <em>file</em></strong> - Read file specified by <em>file</em>, and insert contents after line <em>n</em></li>
</ul>
Placed here for easy reference.  Borrowed from Hewlett-Packard Company, 1987 Quick Reference for vi foldout (which has been my constant companion as of late).]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>112</wp:post_id>
<wp:post_date>2008-12-30 09:44:36</wp:post_date>
<wp:post_date_gmt>2008-12-30 14:44:36</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>vi-tips-of-the-day-1</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1231722475</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>VI Tips of the Day #2</title>
<link>http://jasonleveille.com/2008/12/vi-tips-of-the-day-2/</link>
<pubDate>Wed, 31 Dec 2008 14:44:07 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=117</guid>
<description></description>
<content:encoded><![CDATA[<h3>Moving Your Cursor</h3>
After opening a <a href="http://en.wikipedia.org/wiki/Vi">VI</a> session, often you'll want to move your cursor around:
<ul>
	<li><strong>k</strong> - Up</li>
	<li><strong>j</strong> - Down</li>
	<li><strong>h</strong> - Left</li>
	<li><strong>l </strong>or<strong> Space</strong> - Right</li>
	<li><strong>w</strong> or<strong> W</strong> - Start of next word; W ignores punctuation</li>
	<li><strong>b </strong>or<strong> B</strong> - Start of previous word; B ignores punctuation</li>
	<li><strong>e </strong>or<strong> E</strong> - End of next word; E ignores punctuation</li>
	<li><strong>$<em></em></strong> - Last character in current line</li>
	<li><strong>+ </strong>or<strong> Return -</strong> First character in next line</li>
	<li><strong>1G</strong> - First line in file</li>
	<li><strong>G</strong> - Last line in file</li>
	<li><strong>G$</strong> - Last character in file</li>
	<li><strong>(</strong> - Beginning of sentence</li>
	<li><strong>)</strong> - Beginning of next sentence</li>
	<li><strong>{</strong> - Beginning of paragraph</li>
	<li><strong>}</strong> - Beginning of next paragraph</li>
</ul>
Placed here for easy reference.  Borrowed from Hewlett-Packard Company, 1987 Quick Reference for vi foldout (which has been my constant companion as of late).]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>117</wp:post_id>
<wp:post_date>2008-12-31 09:44:07</wp:post_date>
<wp:post_date_gmt>2008-12-31 14:44:07</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>vi-tips-of-the-day-2</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1231722451</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>VI Tips of the Day #3</title>
<link>http://jasonleveille.com/2009/01/vi-tips-of-the-day-3/</link>
<pubDate>Mon, 12 Jan 2009 01:07:03 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=128</guid>
<description></description>
<content:encoded><![CDATA[<h3>Deleting Text</h3>
After opening a <a href="http://en.wikipedia.org/wiki/Vi">VI</a> session, often you'll want to delete "things" from your file:
<ul>
	<li><strong>CTRL+h </strong>or<strong> Backspace</strong> - Delete previous character</li>
	<li><strong>CTRL+w</strong> - Delete previous word</li>
	<li><strong>CTRL+x</strong> - Delete to start of inserted text</li>
	<li><strong>nx</strong> - Delete n characters beginning with current; omitting n deletes current character</li>
	<li><strong>nX</strong> - Delete previous n characters; omitting n deletes previous characters</li>
	<li><strong>ndw</strong> - Delete next n words beginning with current; omitting n deletes current word</li>
	<li><strong>ndb - </strong>Delete previous n words; omitting n deletes previous word</li>
	<li><strong>ndd</strong> - Delete n lines beginning with current; omitting n deletes current line</li>
	<li><strong>:n, md</strong> - Delete lines n through m</li>
	<li><strong>D</strong> or <strong>d$</strong> - Delete from cursor to end of current line</li>
	<li><strong>d</strong><em>cursor_cmd</em> - Delete text to <em>cursor_cmd</em> (e.g. <strong>dG</strong> deletes from current line to end of file)</li>
</ul>
Placed here for easy reference.  Borrowed from Hewlett-Packard Company, 1987 Quick Reference for vi foldout (which has been my constant companion as of late).]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>128</wp:post_id>
<wp:post_date>2009-01-11 20:07:03</wp:post_date>
<wp:post_date_gmt>2009-01-12 01:07:03</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>vi-tips-of-the-day-3</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1231722424</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Personal Dislikes: Failing to See the Big Picture</title>
<link>http://jasonleveille.com/2009/01/failing-to-see-the-big-picture/</link>
<pubDate>Mon, 12 Jan 2009 01:44:09 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=134</guid>
<description></description>
<content:encoded><![CDATA[There really isn't a whole lot that bothers me.  I like to think that I'm a laid back kind of person who takes things in stride, although I do have a few personal dislikes.  Perhaps the biggest is an almost paralyzing dislike of food courts.  Yeah, I know.  Weird.  A few years ago, after making the agonizing decision to eat in a food court (thanks to prodding from my wife), I got food poisining.  During that same "outting" I saw a grown man lick pizza sauce off of a table (in obvious need of a good scrubbing).  So, for me food courts are out of the question.  Oh, I also dislike it when I see someone drinking 2 gallons of coffee from a half-keg coffee mug ... but I'll leave that one alone.<!--more-->

Another dislike of mine comes in the form of people who fail to see the big picture.  For me this is typically associated with work related topics.  A good example can be found in a blog article by <a href="http://dustindiaz.com">Dustin Diaz</a>.  Dustin writes up a good article on the topic of <a href="http://www.dustindiaz.com/scoping-anonymous-functions/">scoping anonymous functions</a> in javascript.  <a href="http://www.dustindiaz.com/scoping-anonymous-functions/#comment-87381">Later on in the comments</a>, some jackass points out that he mixed up “the silly old that = this convention” phrasing.  Oh yeah, that jackass was me.  How did I fail to see the big picture?  Well, Dustin takes the time to write up this nice article, and I point out the fact that he got two words mixed up.  That isn't seeing the big picture.
<h3>What's My Point</h3>
My point, which I may not be making very well, is that people who make things for a living, whether it be buildings or websites, take a lot of pride in their work.  If the work is in progress, chances are pretty good that the person knows about the unpolished details.  If the real importance of the work is in the message, and not the fact that two words got mixed up, than don't mention the mixed up words.  If the work is final, focus on what is good about the work.  If something can be done about an unpolished detail, than it might not be a bad idea to mention it.  Otherwise, focus on the positives.  If you work with someone who has worked very hard on a project, don't let your first bit of feedback be about the 1 pixel by which you think the main image is off.  See the big picture.  Otherwise you'll just discourage the person doing the work.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>134</wp:post_id>
<wp:post_date>2009-01-11 20:44:09</wp:post_date>
<wp:post_date_gmt>2009-01-12 01:44:09</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>failing-to-see-the-big-picture</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1231736340</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>145</wp:comment_id>
<wp:comment_author><![CDATA[Dustin Diaz]]></wp:comment_author>
<wp:comment_author_email>dustin@dustindiaz.com</wp:comment_author_email>
<wp:comment_author_url>http://www.dustindiaz.com</wp:comment_author_url>
<wp:comment_author_IP>216.239.45.4</wp:comment_author_IP>
<wp:comment_date>2009-01-16 20:10:36</wp:comment_date>
<wp:comment_date_gmt>2009-01-17 01:10:36</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Hey man, no hard feelings :) we all do dumb things — maybe me more than anyone. your comments are always welcome!

cheers,
Dustin]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>146</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>76.100.197.164</wp:comment_author_IP>
<wp:comment_date>2009-01-17 14:27:14</wp:comment_date>
<wp:comment_date_gmt>2009-01-17 19:27:14</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for stopping by Dustin!  You are absolutely correct about every one of us doing dumb things!  Just the other day my wife asked me to pick up some milk on the way home.  I came home with $75 in groceries and no milk!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>148</wp:comment_id>
<wp:comment_author><![CDATA[Dustin Diaz]]></wp:comment_author>
<wp:comment_author_email>dustin@dustindiaz.com</wp:comment_author_email>
<wp:comment_author_url>http://www.dustindiaz.com</wp:comment_author_url>
<wp:comment_author_IP>24.5.175.139</wp:comment_author_IP>
<wp:comment_date>2009-01-20 14:51:01</wp:comment_date>
<wp:comment_date_gmt>2009-01-20 19:51:01</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Haha. at least there are groceries to be had (metaphorically speaking).]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Great Computer Security Quotes</title>
<link>http://jasonleveille.com/2009/01/great-computer-security-quotes/</link>
<pubDate>Thu, 15 Jan 2009 16:35:09 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=149</guid>
<description></description>
<content:encoded><![CDATA[Occasionally something comes up via <a href="http://www.twitter.com">Twitter</a> that is really interesting.  Today, <a href="http://twitter.com/nateabele">Nate Abele</a> (of <a href="http://www.cakephp.org">CakePHP</a> fame) <a href="http://twitter.com/nateabele/status/1121243805">shared a link</a> to "<a href="http://www.ranum.com/security/computer_security/editorials/dumb/index.html">The Six Dumbest Ideas in Computer Security</a>", written by <a href="http://www.ranum.com/">Marcus J. Ranum</a> (a world-renowned expert on security system design and implementation) in 2005.  This article is so full of useful and interesting insight, that I couldn't help but to quote some of my favorite passages:
<blockquote>One extremely useful piece of management kung-fu to remember, if you find yourself up against an "early adopter" is to rely on your peers. Several years ago I had a client who was preparing to spend a ton of money on a technology without testing it operationally. I suggested offhandedly to the senior IT manager in charge that he should send one of his team to a relevant conference (in this case, LISA) where it was likely that someone with hands-on experience with the technology would be in attendance. I proposed that the manager have his employee put a message on the "meet and greet" bulletin board that read:  "Do you have hands-on experience with xyz from pdq.com? If so, I'm authorized to take you to dinner at Ruth's Chris if you promise to give me the low-down on the product off the record. Contact, etc..." The IT manager later told me that a $200 dinner expense saved them over $400,000 worth of hellish technological trauma.</blockquote>
And another:
<blockquote>"Let's go production with it now and we can secure it later" - no, you won't. A better question to ask yourself is "If we don't have time to do it correctly now, will we have time to do it over once it's broken?" Sometimes, building a system that is in constant need of repair means you will spend years investing in turd polish because you were unwilling to spend days getting the job done right in the first place.</blockquote>

And another:



<blockquote>Why is "Enumerating Badness" a dumb idea? It's a dumb idea because sometime around 1992 the amount of Badness in the Internet began to vastly outweigh the amount of Goodness. For every harmless, legitimate, application, there are dozens or hundreds of pieces of malware, worm tests, exploits, or viral code. Examine a typical antivirus package and you'll see it knows about 75,000+ viruses that might infect your machine. Compare that to the legitimate 30 or so apps that I've installed on my machine, and you can see it's rather dumb to try to track 75,000 pieces of Badness when even a simpleton could track 30 pieces of Goodness. In fact, if I were to simply track the 30 pieces of Goodness on my machine, and allow nothing else to run, I would have simultaneously solved the following problems:
<ul>
	<li>Spyware</li>
	<li>Viruses</li>
	<li>Remote Control Trojans</li>
	<li>Exploits that involve executing pre-installed code that you don't use regularly</li>
</ul></blockquote>

And finally:

<blockquote>Let me put it to you in different terms: <em><strong>if "Penetrate and Patch" was effective, we would have run out of security bugs in Internet Explorer by now</strong></em>. What has it been? 2 or 3 a month for 10 years?</blockquote>

There are 10 others that I could have quoted here.  Although it looks like Marcus hasn't written anything on his blog in over a year, I'm still adding <a href="http://www.ranum.com/rss20.xml">his feed</a> to my reader.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>149</wp:post_id>
<wp:post_date>2009-01-15 11:35:09</wp:post_date>
<wp:post_date_gmt>2009-01-15 16:35:09</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>great-computer-security-quotes</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1232037312</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>143</wp:comment_id>
<wp:comment_author><![CDATA[Steve Clay]]></wp:comment_author>
<wp:comment_author_email>steve@mrclay.org</wp:comment_author_email>
<wp:comment_author_url>http://mrclay.org/</wp:comment_author_url>
<wp:comment_author_IP>128.227.82.56</wp:comment_author_IP>
<wp:comment_date>2009-01-16 09:54:22</wp:comment_date>
<wp:comment_date_gmt>2009-01-16 14:54:22</wp:comment_date_gmt>
<wp:comment_content><![CDATA[As badly as IE was managed, I'm pretty impressed by the IE5 developers. A lot of revolutionary stuff went into that: XHR, VML, HTA (Adobe AIR a decade ago!), bidi text, XSLT. It seems most of the badness (BHO, ActiveX) went into other releases.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>144</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>68.167.144.98</wp:comment_author_IP>
<wp:comment_date>2009-01-16 10:29:51</wp:comment_date>
<wp:comment_date_gmt>2009-01-16 15:29:51</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for stopping by Steve.  I can't speak to the management of IE as I don't know, but I do agree that revolutionary stuff has come out of IE in general.  To clarify, I think <a href="http://en.wikipedia.org/wiki/Browser_Helper_Object" rel="nofollow">BHO</a> was added in IE4, and <a href="http://www.richterscale.org/pcgr/pc960820.htm" rel="nofollow">ActiveX</a> was added in IE3.

Just in case others are following along:


	http://en.wikipedia.org/wiki/XMLHttpRequest
	http://en.wikipedia.org/wiki/VML
	http://en.wikipedia.org/wiki/HTML_Application
]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>143</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>PunBB Authentication JQuery Plugin</title>
<link>http://jasonleveille.com/2009/01/punbb-authentication-jquery-plugin/</link>
<pubDate>Wed, 21 Jan 2009 17:51:56 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=167</guid>
<description></description>
<content:encoded><![CDATA[I have finally created my first <a href="http://jquery.com/">jQuery</a> <a href="http://plugins.jquery.com/">plugin</a>.  The <a href="http://github.com/leveille/punbbauth/tree/master">punbbauth</a> plugin should provide an easy way to sync authentication between your application and <a href="http://punbb.informer.com/">PunBB</a>.
<!--more-->
This plugin provides an easy way to hook into <a href="http://punbb.informer.com/">PunBB</a> authentication login/logout.  Hooks should be applied to your own applications login form and logout link.  Another option is available to hook into an "access" link, however this will likely not see much use under most normal circumstances.

This plugin does not attempt to solve the issue of syncing your application with punbb.  Rather, it attempts to solve the issue of single sign on when a user logs into your application.

<h3>Gotchas</h3>
As the plugin uses <a href="http://en.wikipedia.org/wiki/XMLHttpRequest">XHR</a> to communicate with PunBB, it's usage is of course limited to the XHR <a href="http://en.wikipedia.org/wiki/Same_origin_policy">same origin policy</a>.

<h3>Download</h3>
Source code, as well as downloads, can be found for this plugin on github: <a href="http://github.com/leveille/punbbauth/tree/master">http://github.com/leveille/punbbauth/tree/master</a>

<h3>Examples</h3>
<h3>BIND TO LOGIN FORM</h3>
<h4>ex. 1</h4>

<pre class="JavaScript" name="code">
<code>
//assumes a username fieldname of username
//assumes a password fieldname of password

$('.punbb').punbbauth(); 
</code>
</pre>

<h4>ex. 2</h4>

<pre class="JavaScript" name="code">
<code>
//app_uname_field: &lt;input name="uname_fieldname" /&gt;
//app_pword_field: &lt;input name="pword_fieldname" /&gt;
//assumes form class structure: &lt;form class="punbb login"&gt;
$('.punbb').punbbauth({
    app_uname_field : 'uname_fieldname',    
    app_pword_field : 'pword_fieldname'                                                    
});
</code>
</pre>

<h3>BIND TO LOGOUT LINK</h3>

<h4>ex. 1</h4>

<pre class="JavaScript" name="code">
<code>
//assumes link class structure: &lt;a class="punbb logout"&gt;...&lt;/a&gt;
$('.punbb').punbbauth();     
</code>  
</pre>
             
<h3>BIND TO ACCESS LINK</h3>
NOTE: This will likely not see very much use, as it requires access to a plain text password.  See notes below

<h4>ex. 1</h4>

<pre class="JavaScript" name="code">
<code>
//assumes link class structure: &lt;a class="punbb access"&gt;...&lt;/a&gt;
$('.punbb').punbbauth({
    punbb_username : 'username',
    punbb_password : 'password'
});
</code>
</pre>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>167</wp:post_id>
<wp:post_date>2009-01-21 12:51:56</wp:post_date>
<wp:post_date_gmt>2009-01-21 17:51:56</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>punbb-authentication-jquery-plugin</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1235649753</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>152</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>68.167.144.98</wp:comment_author_IP>
<wp:comment_date>2009-01-21 12:58:55</wp:comment_date>
<wp:comment_date_gmt>2009-01-21 17:58:55</wp:comment_date_gmt>
<wp:comment_content><![CDATA[This is my very first jQuery plugin.  Take a look at the source code.  If you think it's trash, or that I could have done something better (or if you're wondering why I wasted my time with this), let me know.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Book Review: Lighttpd</title>
<link>http://jasonleveille.com/2009/01/book-review-lighttpd/</link>
<pubDate>Fri, 23 Jan 2009 20:16:08 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=191</guid>
<description></description>
<content:encoded><![CDATA[I was recently contacted by <a href="http://www.packtpub.com/">PACKT Publishing</a> and asked to provide a review for <a href="http://www.packtpub.com/lighttpd/book">Lighttpd</a>.  Following is the review.<!--more-->
<div id="hreview-A-Good-Introduction-To-Lighttpd" class="hreview">
<h2 class="summary">A Good Introduction to Lighttpd</h2>
<abbr class="dtreviewed" title="2009-01-21T09:22-05:00">Jan 21, 2009</abbr> by <span class="reviewer vcard"><span class="fn">Jason R. Leveille</span></span>
<div class="item"><a class="fn url" href="http://www.packtpub.com/lighttpd/book">Lighttpd</a></div>
<abbr class="rating" title="4">★★★★☆</abbr><span class="version" style="display: none;">0.4</span>

<div class="description item vcard">For quite a while now I have been deploying web applications to <a href="http://www.apache.org/">Apache</a> and <a href="http://www.iis.net/">IIS</a> web servers.  My personal blog (this blog!) used to be served by the Apache Web Server, in a relatively low memory environment (256M ... ok, maybe that isn't low for some of you).  At the start of January '09 I started having memory/server/swap issues.  At around the same time I received <a href="http://www.lighttpd.net/">Lighttpd</a> in the mail from PACKT.  With book in hand, in a few short hours I made the switch to Lighttpd and things have been running well ever since.  If you're interested in exploring what Lighttpd can do for you, I would recommend this book for your bookshelf.  In case it is relevant, I was a complete and total Lighttpd newb prior to receiving this book ... I still feel like a newb, but at least I now have a good reference in hand.

<!--more-->

<h3>The Parts I Liked</h3>

The book covered a wide range of topics, including: a basic introduction to lighttpd, installation, security, encryption, optimization, virtual hosting (and topics in *CGI), among other things.  Overall I really thought this book was solid, for a number of reasons:

<ul>
	<li>It contains a lot of relevant and rich code examples</li>
	<li>It provides a lot of detail with regards to whatever the topic is being addressed</li>
	<li>Each chapter wastes no time in addressing the topics you are likely to find most important (virtual hosts, security, streaming content, serving static media)</li>
	<li>There is little fluff in the book. In certain books I can take a sense of humor.  In other books I just want the facts.  This book provides the facts</li>
	<li>It provides a full chapter on SSL with good examples, etc</li>
	<li>It provides a full chapter on security, including the evasion of denial of service (<a href="http://en.wikipedia.org/wiki/Denial_of_service">DoS</a>) attacks, setting up <a href="http://linux.about.com/od/commands/l/blcmdl8_logrota.htm">logrotate</a> (which I was not familiar with), and grepping your log files.  It becomes apparent rather quickly that the author really wants you to feel comfortable trying to administer and secure your web server</li>
	<li>It contains an entire chapter on optimizing Lighttpd, including load testing and caching</li>
	<li>It provides information on migrating from Apache, and hosting common web applications (<a href="http://wordpress.org/">Wordpress</a>, <a href="http://www.phpmyadmin.net/home_page/index.php">PHPMyAdmin</a>, etc) on Lighttpd.  Let's face it, most of us would be migrating from Apache, and very likely taking Wordpress (etc) along for the ride</li>
</ul>

<h3>The Parts I Struggled With</h3>

From the beginning of the book, the author discusses version 1.5.0 of Lighttpd.  He also makes statements such as:

<blockquote>
Chapter 12: As of Lighttpd 1.4.7, this module has been superseded by mod_magnet, ...</blockquote>

The problem I have here is that if you look on the Lighttpd website, the most recent version of the web server is 1.4.20.  I would rather have heard nothing at all about future versions of Lighttpd.  I found it distracting, continually wondering if I should be using version 1.4.blah, or version 1.5.  Only to find that I couldn't find these mystery versions (maybe I didn't look as hard as I should have).  I also found I had some issues with some of the code examples.  In some cases I had to revert to Googling to figure out the issue I was trying to solve (sorry, I can't think of a good example of this at the moment).

<h3>Conclusion</h3>

Throughout my time investigating Lighttpd it has become apparent that this web server is not under heavy development.  As a matter of fact, I came across many rumblings with regards to the projects stalled state.  I'm not sure, but perhaps as the book was under development, 1.4.7 and 1.5.0 were very real.  Perhaps post production those development branches died.  I really don't know.  I do think if you are going to choose to run Lighttpd you have to keep these things in mind.  Regardless, if you are going to run this web server this book would be a great companion as you are learning.</div>

</div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>191</wp:post_id>
<wp:post_date>2009-01-23 15:16:08</wp:post_date>
<wp:post_date_gmt>2009-01-23 20:16:08</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>book-review-lighttpd</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1234548388</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>162</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>68.167.144.98</wp:comment_author_IP>
<wp:comment_date>2009-02-05 10:17:31</wp:comment_date>
<wp:comment_date_gmt>2009-02-05 15:17:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[NOTE: I have moved back to Apache (and I haven't had any issues since the move).]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Simple Managed Content: SimpleMC</title>
<link>http://jasonleveille.com/2009/02/simple-managed-content-simplemc/</link>
<pubDate>Mon, 02 Feb 2009 18:39:03 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=220</guid>
<description></description>
<content:encoded><![CDATA[Today, with the support of <a href="http://www.blueatlas.com">Blue Atlas Interactive</a>, I am releasing version 0.90 of Simple Managed Content (SimpleMC).  SimpleMC, which requires PHP/MySQL, aims to provide an easy way for content editors to manage blocks of content.  The following links and screencast should give you a good picture of the project:
<ul>
	<li><a href="http://github.com/leveille/simple-mc/tree/master">GitHub Project Home</a></li>
	<li><a href="http://leveille.lighthouseapp.com/projects/24238-simple-mc/overview">Lighthouse Project Home</a></li>
	<li><a href="http://groups.google.com/group/simple_mc">Google Group</a></li>
	<li><a href="http://smc.jasonleveille.com">Project Demo</a></li>
	<li>A project of <a href="http://www.blueatlas.com">Blue Atlas Interactive</a></li>
</ul>

[caption id="" align="aligncenter" width="454" caption="SimpleMC Screencast (.swf)"]<a href="https://blueatlas.s3.amazonaws.com/simplemc/simplemc_intro_flash/index.htm"><img title="SimpleMC Screenshot" src="http://jasonleveille.com/wp-content/uploads/2009/02/04/simplemc_screenshot.png" alt="SimpleMC Screenshot" width="454" height="410" /></a>[/caption]

<h3>Features</h3>
<ul>
	<li><a href="http://www.fckeditor.net/">FCK Editor</a></li>
	<li><a href="http://extjs.com/">ExtJS</a> for interface components</li>
	<li><a href="http://code.google.com/p/minify/">Minify</a> for CSS/JS minification</li>
	<li><a href="http://htmlpurifier.org/">HTMLPurifier</a> for content purification</li>
	<li>A simple caching solution</li>
	<li>Debug/Production modes</li>
	<li>Backend user/content administrator</li>
</ul>
<h3>Thoughts</h3>
This project started as most projects do, with the needs of a client.  Over time its focus has remained on that of simplifying content block management.   Though we hope to one day have the ability to add/manage pages, our goal is not to provide a full scale CMS.  In the right situation, we feel that this project provides a good choice for managing content.  In other situations, it would likely be a poor choice.  We look forward to any feedback you might have.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>220</wp:post_id>
<wp:post_date>2009-02-02 13:39:03</wp:post_date>
<wp:post_date_gmt>2009-02-02 18:39:03</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>simple-managed-content-simplemc</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1233868440</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Graduate School Independent Study</title>
<link>http://jasonleveille.com/2009/02/graduate-school-independent-study/</link>
<pubDate>Thu, 05 Feb 2009 02:29:49 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=252</guid>
<description></description>
<content:encoded><![CDATA[This is my last semester of graduate school.  In May I will be graduating with a <abbr title="Master of Science in Computer Science">MSCS</abbr> degree.  This semester I am taking an Operating Systems course as well as an independent study.  So far the subject matter for the <abbr title="Operating Systems">OS</abbr> course has been good, but what I'm really excited about is my independent study.  Last week I submitted my study proposal and on the same day found out that it had been accepted.  I am thankful that I have professors who are open-minded (and not stuck in the theoretical muck).  It is my goal to document my progress here on this blog, starting with the posting of my proposal.<!--more-->
<h3>Portions of My Independent Study Proposal</h3>
<h4>The Building of a Blogging Engine</h4>
Thank you for considering my proposal for independent study. Please let me know if you have any questions or comments. My phone number is  (xxx)-xxx-xxxx, and my email is blueberry@pie.yum.
<h4>Overview</h4>
<ul>
	<li>During the course of this project I hope to build a blogging engine, powered by <a href="http://python.org/">Python</a> and the <a href="http://pylonshq.com/">Pylons</a> Web Development framework, and backed by <a href="http://www.postgresql.org/">PostgreSQL</a>.</li>
	<li>It is my goal to also include as a component of the engine, a “lifestream” application backed by <a href="http://couchdb.apache.org/">CouchDB</a> ("a distributed, fault-tolerant and schema-free document-oriented database accessible via a RESTful HTTP/JSON API" - <a href="http://couchdb.apache.org/">http://couchdb.apache.org/</a>)</li>
	<li>Finally, for every aspect of the build and implementation of this engine (with the exception of <a href="http://httpd.apache.org/">Apache2</a> and <a href="http://git-scm.com/">git</a>), it is my goal to use technologies that I have never used before in production.</li>
</ul>
<h4>Methods, Technology, and Resources</h4>
The tools that I will be using during this project include: <a href="http://www.debian.org/">Debian</a> 4.0 (or <a href="http://www.freebsd.org/">FreeBSD</a>), <a href="http://python.org/">Python</a>, <a href="http://www.postgresql.org/">PostgreSQL</a>, <a href="http://couchdb.apache.org/">CouchDB</a>, <a href="http://www.dojotoolkit.org/">Dojo</a> javascript library, <a href="http://960.gs/">960 grid</a> CSS framework, <a href="http://httpd.apache.org/">Apache2</a>, <a href="http://nginx.net/">nginx</a> serving static media files, <a href="http://git-scm.com/">git</a> for version control, <a href="http://haveamint.com/">Mint</a> for site analytics (not open source), <a href="http://www.gimp.org/">Gimp</a> for site design, <a href="http://www.vim.org/">VIM</a> as my sole editor/debugger/etc, and my own 1U rack mount server (which I will be installing, etc).
<h4>Challenges and Obstacles</h4>
<ul>
	<li>This is of course an ambitious undertaking as I will have learning curves for almost every aspect of this project.</li>
	<li>With my experience tackling new technologies I feel that I am capable of meeting these challenges head-on.</li>
</ul>
<h4>Comments</h4>
Of the few people that follow this blog, you may remember a post from September of '08, where I wrote about <a href="http://jasonleveille.com/2008/09/blog-overhaul-using-django/">overhauling this blog with Django</a>.  I definitely haven't forgotten about that post.  I don't want to make a habit out of <a href="http://jasonleveille.com/2008/05/this-week-in-doctrine/">not following through</a>.  I have changed things up a bit though.  Instead of Django, I will be using Pylons.  It is my hope that there will be a Django project in my near future at work, and Pylons has piqued my personal curiosity.  So, Pylons it is.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>252</wp:post_id>
<wp:post_date>2009-02-04 21:29:49</wp:post_date>
<wp:post_date_gmt>2009-02-05 02:29:49</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>graduate-school-independent-study</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1236193639</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>209</wp:comment_id>
<wp:comment_author><![CDATA[An Update for April &#8216;09 &laquo; Jason Leveille&#8217;s Blog]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com/2009/04/an-update-for-april-09/</wp:comment_author_url>
<wp:comment_author_IP>192.168.0.1</wp:comment_author_IP>
<wp:comment_date>2009-04-15 09:18:21</wp:comment_date>
<wp:comment_date_gmt>2009-04-15 14:18:21</wp:comment_date_gmt>
<wp:comment_content><![CDATA[[...] however there is no rush.  I believe I will have accomplished enough by early May to meet my Independent Project obligations, however I may or may not deploy the new blog until June [...] ]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type>pingback</wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>194</wp:comment_id>
<wp:comment_author><![CDATA[RUss Jones]]></wp:comment_author>
<wp:comment_author_email>spam@codeofficer.com</wp:comment_author_email>
<wp:comment_author_url>http://www.codeofficer.com/</wp:comment_author_url>
<wp:comment_author_IP>74.65.132.14</wp:comment_author_IP>
<wp:comment_date>2009-02-26 07:02:44</wp:comment_date>
<wp:comment_date_gmt>2009-02-26 12:02:44</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I'm in the process of overhauling mine as well. I've taken a more modular approach to content creation that I think is kind of neat, it should help me in creating more complex pages on the fly. The old site is running off a php cms I've been yearning to ditch.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>195</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>192.168.1.1</wp:comment_author_IP>
<wp:comment_date>2009-02-26 07:05:11</wp:comment_date>
<wp:comment_date_gmt>2009-02-26 12:05:11</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Is your PHP CMS a homegrown solution?  Can't wait to see what you come up with for the new engine.  I'm guessing it'll be a Ruby/Rails solution?  Open Source?  Anyway, best of luck.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>196</wp:comment_id>
<wp:comment_author><![CDATA[RUss Jones]]></wp:comment_author>
<wp:comment_author_email>spam@codeofficer.com</wp:comment_author_email>
<wp:comment_author_url>http://www.codeofficer.com/</wp:comment_author_url>
<wp:comment_author_IP>74.65.132.14</wp:comment_author_IP>
<wp:comment_date>2009-02-26 07:10:23</wp:comment_date>
<wp:comment_date_gmt>2009-02-26 12:10:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Naw, the PHP one i was using was Expression Engine, from the creators of the CodeIgniter framework. I was pretty excited about it originally, even forked out 90$ to get the paid features. WHAT?! pay for a cms you say!? Ya, its pretty elegant software and as I always say I don't mind paying for good things. That said, I wouldn't do it again. Happy to give you a tour sometime of my app, its already quite functional, though not fully implemented. I may have a screencast I did of it handy somewhere. WIll look.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>197</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>192.168.1.1</wp:comment_author_IP>
<wp:comment_date>2009-02-26 07:15:27</wp:comment_date>
<wp:comment_date_gmt>2009-02-26 12:15:27</wp:comment_date_gmt>
<wp:comment_content><![CDATA[I've worked with every other CMS out there except EE, though I think I have an EE project in my near future.  I've also paid for an EE license, but the client backed out of before the work began. 

Anyhow, I'd love to take a look at things (via  working demo, etc ... whatever is convenient for you).]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>My Path to a Career in Web Development</title>
<link>http://jasonleveille.com/2009/02/career-web-development/</link>
<pubDate>Tue, 10 Feb 2009 01:45:13 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=282</guid>
<description></description>
<content:encoded><![CDATA[I enjoy hearing about the paths people have taken on the journey to their current job.  Many people seem to find themselves with a job they previously never would have envisioned holding.  As little as 6 years ago I could not have imagined having a career in Web Development.  Here is how I got here...<!--more-->
<h3>High School</h3>
I went to High School in Northern Penobscot County, in <a href="http://en.wikipedia.org/wiki/Howland,_Maine">Howland</a>, Maine.  At <a href="http://www.msad31.com/?cat_id=50">Penobscot Valley High School</a>, home of the Howlers, I was very focused on athletics.  During this time I was only vaguely familiar with the home row keys on the keyboard, but I was very familiar with hard work.  My work ethic would later pay its dividends when I discovered how much I enjoyed topics in Web Design and Development.
<h3>College</h3>
In 1994 I attended <a href="http://www.mainemaritime.edu/">Maine Maritime Academy</a> in <a href="http://www.castine.me.us/">Castine</a>, Maine, in their <a href="http://en.wikipedia.org/wiki/United_States_Merchant_Marine">Merchant Marine</a> and Power Plant Engineering programs.  At MMA I took 1 computer class, where I remember feeling completely overwhelmed.  After 1 year I transfered to <a href="http://www.thomas.edu/">Thomas College</a> in <a href="http://www.watervillemaine.net/">Waterville</a>, Maine, where I entered the Math/Computer Information Teacher Education program.  This meant that upon graduation I would be certified to teach both Math and Computer courses.  I shouldn't have been certified to teach computer courses (sorry Thomas).  The program was young and lacked clear direction (or it lacked a clear vision for what kind of computer courses we should be taking).  To illustrate this, I remember how excited I was during student teaching when some 6th grader showed me how to make a watermark in MS Word.  I showed my good friend and roommate <a href="http://blogs.msdn.com/chadboyd/archive/2007/07/26/katmai-sql-2008-the-list-of-new-features.aspx">Chad Boyd</a> (who is now a lead Database Engineer for Microsoft).  He thought I was a complete moron.  Fortunately, I had a good work ethic and a genuine interest in teaching computers, and I didn't stay a complete moron forever.
<h3>The Working World - Teaching</h3>
I was a High School <a href="/teaching">teacher</a> for 8 years, and I loved the work. My first 2 years of teaching were at <a href="http://www.poland-hs.u29.k12.me.us/">Poland Regional High School</a> in <a href="http://www.polandtownoffice.org/Pages/index">Poland Spring</a>, Maine.  My last 6 were at <a href="http://www.qohs.org">Quince Orchard High School</a> in <a href="http://www.gaithersburgmd.gov/">Gaithersburg</a>, Maryland.  Towards the end of that 8 years I increasingly found myself looking forward to my time without students so that I could work on web design and development. I would use my planning periods to read blogs/books and work on projects.  Each day I tried to learn something new.  There was a period of almost 2 years where all I thought about was CSS and XHTML.  I wanted to be a better web developer.  During my last 6 months of teaching I started to feel that I wasn't being fair to my students.  My attention was elsewhere.  So, I stopped teaching in 2007.
<h3>The Working World - Web Development Fulltime</h3>
Even though I'm doing development work fulltime now, my excitement for what I'm doing/learning hasn't stopped.  I look forward to learning something new every day (no matter how trivial), and I look forward to reading what is happening in the world in which I work.  At any given time I am (trying to) reading 3 or 4 books and working on multiple projects.  I will also be graduating in May with a Masters Degree in Computer Science.  Unfortunately I don't get nearly enough time to write or share all the things I'm working on.  I hope that changes in the future.
<h3>Last Thoughts</h3>
I really enjoyed writing this blog post.  I rarely ever think about high scool and college.  Both those worlds seem so far away that I feel like I'm seeing them through Coke bottle glasses when my attention does turn their way.  Now that I have thought about them, it reminds me how much I miss: spending so much time with my family; training with my brothers for whatever season was coming up; skiing at <a href="http://www.sugarloaf.com/">Sugarloaf</a> and <a href="http://www.sundayriver.com/">Sunday River</a>; playing baseball; playing soccer; standing in front of a classroom; all the great people I've been fortunate enough to know along my path; etc.

For a long time in my life (&gt; 15 years) I was very focused on athletics and exercise.  My hobbies included my bike and my running shoes.  About 5 years ago that focus shifted to computers, and now my hobbies include my books and my source code.  I hope to one day find a calm balance between the two.  I could surely use the excercise, and I'm almost certain finding that balance would make me a better developer.  Perhaps after graduate school ... or perhaps after my kids grow a little older ... or perhaps when all the browsers "<a href="http://www.angelfire.com/realm/theatre/holiday.html">in the world join hands and sing together in the  spirit of harmony and peace</a>".

Write about your story and share a link here.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>282</wp:post_id>
<wp:post_date>2009-02-09 20:45:13</wp:post_date>
<wp:post_date_gmt>2009-02-10 01:45:13</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>career-web-development</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1234230667</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>165</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>76.100.197.164</wp:comment_author_IP>
<wp:comment_date>2009-02-09 20:47:56</wp:comment_date>
<wp:comment_date_gmt>2009-02-10 01:47:56</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Just in case you are absolutely enthralled by my life story [<a href="http://teachmetheweb.org/index.php/tmtw/interview/interview_with_jason_leveille/" rel="nofollow">My story elsewhere</a>]. If you've made it this far congratulations.  I think everyone else fell asleep.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>173</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>76.100.197.164</wp:comment_author_IP>
<wp:comment_date>2009-02-11 20:01:41</wp:comment_date>
<wp:comment_date_gmt>2009-02-12 01:01:41</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for stopping by Marc.  Feel free to tell us your story and share a link here.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>170</wp:comment_id>
<wp:comment_author><![CDATA[Deanna]]></wp:comment_author>
<wp:comment_author_email>romero.deanna@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>98.204.196.78</wp:comment_author_IP>
<wp:comment_date>2009-02-10 21:04:53</wp:comment_date>
<wp:comment_date_gmt>2009-02-11 02:04:53</wp:comment_date_gmt>
<wp:comment_content><![CDATA[It's funny how I'm on a similar path now.  I entered college always thinking I would get a degree in Music, even though I didn't start out as a Music major.  I always expected to be working as a musician.  But now, I spend all free time at work, doing web design/development.  And there's a fairly good chance I will continue working at the same job upon graduating...with a Music degree.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>171</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>76.100.197.164</wp:comment_author_IP>
<wp:comment_date>2009-02-10 21:54:27</wp:comment_date>
<wp:comment_date_gmt>2009-02-11 02:54:27</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for stopping by Deanna.  My best bit of advice (not that you asked) is to allow yourself to grow into what you want to become.  Where you end up and what you end up doing after graduation doesn't have to define what you'll become 10 years from now.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>172</wp:comment_id>
<wp:comment_author><![CDATA[Marc Grabanski]]></wp:comment_author>
<wp:comment_author_email>m@marcgrabanski.com</wp:comment_author_email>
<wp:comment_author_url>http://marcgrabanski.com</wp:comment_author_url>
<wp:comment_author_IP>69.180.147.84</wp:comment_author_IP>
<wp:comment_date>2009-02-11 16:47:42</wp:comment_date>
<wp:comment_date_gmt>2009-02-11 21:47:42</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks for sharing your story, Jason.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>202</wp:comment_id>
<wp:comment_author><![CDATA[Gonzo]]></wp:comment_author>
<wp:comment_author_email>BLDries@yahoo.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>76.178.209.167</wp:comment_author_IP>
<wp:comment_date>2009-03-11 15:08:23</wp:comment_date>
<wp:comment_date_gmt>2009-03-11 20:08:23</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Nice job J.  I was curious to see how you got to where you are.  Stay tuned and I will post my journey.  You have grown into such a intelligent, well spoken individual,  good job!

-Bill]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>CakePHP vs Django vs Rails vs Who Cares - Make a Decision</title>
<link>http://jasonleveille.com/2009/02/cakephp-vs-django-vs-rails-vs-who-cares-make-a-decision/</link>
<pubDate>Thu, 12 Feb 2009 01:50:27 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=272</guid>
<description></description>
<content:encoded><![CDATA[As someone who:
<ol>
	<li>has made a framework choice, and developed numerous projects on that framework (<a href="http://cakephp.org/">CakePHP</a>) and,</li>
	<li>is always <a href="http://www.djangoproject.com/">poking</a> <a href="http://pylonshq.com/">around</a> <a href="http://rubyonrails.org/">with</a> <a href="http://framework.zend.com/">other</a> <a href="http://codeigniter.com/">frameworks</a></li>
</ol>
I am often asked about the tough choice of picking among all the great framework choices (both in and out of the <a href="http://php.net/">PHP</a> world).  My advice is always the same.<!--more-->
<h3>Who Cares - Make a Decision</h3>
Getting stuck in <a href="http://www.google.com/search?hl=en&amp;q=which+framework+should+I+choose&amp;btnG=Google+Search&amp;aq=f&amp;oq=which+framework+should+I+choos">choice limbo</a> is bad for many reasons.  Perhaps the biggest one of all has to do with inaction.  If you are unsure which framework to choose from, chances are pretty good you're not writing code or being as productive as you could be.  If you're not writing code than you're not starting the process of getting over one or more learning curves (every framework will carry a learning curve ... if you choose a framework outside of a language you are familiar with, than you'll have many learning curves to get over).
<h3>Go Easy on Yourself</h3>
I would recommend selecting a framework in a language that you are already familiar with.  If you are a PHP person, choose a <a href="http://www.google.com/search?hl=en&amp;q=php+frameworks&amp;btnG=Search">PHP framework</a>.  If you are a Python person, choose from a <a href="http://www.google.com/search?hl=en&amp;q=python+frameworks&amp;btnG=Search">Python framework</a>.  If you are a Ruby person, choose from a <a href="http://www.google.com/search?hl=en&amp;q=ruby+frameworks&amp;btnG=Search">Ruby framework</a>.  Just pick one and go with it, but don't make the task any more difficult than it needs to be.
<h3>Life After a Few Applications</h3>
You won't get anywhere with your choice unless you write a few applications with your chosen framework.  You'll find (and this is the good part), that after you gain the confidence you can only gain by getting your hands dirty, you'll more easily be able to transition into another framework.  Once you gain a firm grasp on the concepts of <a href="http://en.wikipedia.org/wiki/Model-view-controller">MVC</a>, it's amazing how familiar other MVC frameworks will look.  If after a few projects you feel as though you've made a poor choice, choose something else.  Your new found confidence and experience should make the transition much less painful.
<h3>Should you Choose a Framework</h3>
If you look for them, you'll find more <a href="http://www.google.com/search?hl=en&amp;q=frameworks+suck&amp;btnG=Search">opinions</a> <a href="http://www.sitepoint.com/blogs/2008/08/29/rasmus-lerdorf-php-frameworks-think-again/">regarding</a> frameworks than you could possibly care to read.  My personal feeling is that:
<ol>
	<li>unless you are writing an application that can't afford the performance penalty that is likely to come along with any framework (perhaps &lt; .005% of applications on the Internet are in this category, and congratulations if you are working on one), <strong>or</strong></li>
	<li>you are working on an application that doesn't need a framework to begin with, <strong>or</strong></li>
	<li>you shouldn't be writing a custom application (when perhaps the best thing you can do for your client is choose a proven CMS ... one that eases content management/maintenance/etc) <strong>than</strong></li>
</ol>
Yes, you should choose a framework.  A good framework will help you stay organized, will remove a lot of mundane (but won't remove the need for you to be responsible!), and will come packaged with proven, maintained, debuged, tested, cared for, etc, code.
<h3>You're Also Choosing a Community</h3>
It's not all about the code.  Though a framework won't do your job for you, it can help you be better at your job.  Part of getting better is learning, and choosing a framework with a good community will help you learn.  Whatever you choose, either be involved or observe the community.  Admittedly, I am not very involved in the <a href="http://groups.google.com/group/cake-php">CakePHP community</a> (for many reasons ... including the fact that I develop in .Net, Classic ASP, and Python).  But I am constantly observing the community.  I receive a daily digest of Google Group postings, I occasionally follow conversations on <a href="http://en.wikipedia.org/wiki/IRC">IRC</a>, and I read ~20 blogs having something to do with CakePHP.  I follow the community even though it's been more than 2 months since I've developed in CakePHP.  I've made a commitment to this framework and I would be doing myself a disservice by not maintaining some sort of connection to the community.
<h3>Last Thoughts</h3>
In case I haven't been clear about this: JUST MAKE A CHOICE and don't worry about it.  Just make a choice and develop a few real applications with your choice.  If you're worried about making the wrong choice, don't be.  If you're asking if you should choose framework X or framework Y, than you're wasting time.  Making a choice is liberating.  Liberate yourself and start coding.

Even though you are choosing a framework, never stop learning/reading the language in which the framework is written.  I sometimes code with CakePHP, however I read PHP books/blogs/magazines that have nothing to do with CakePHP.  I read programming books/blogs/magazines so that I can be a better developer.  Try to remember that you are a programmer first; you are a PHP/Python/PERL/Ruby/etc programmer second; and you are a CakePHP/Django/Rails/etc developer third.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>272</wp:post_id>
<wp:post_date>2009-02-11 20:50:27</wp:post_date>
<wp:post_date_gmt>2009-02-12 01:50:27</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>cakephp-vs-django-vs-rails-vs-who-cares-make-a-decision</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1234655244</wp:meta_value>
</wp:postmeta>
<wp:comment>
<wp:comment_id>186</wp:comment_id>
<wp:comment_author><![CDATA[noiz777]]></wp:comment_author>
<wp:comment_author_email>noiz777@gmail.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>216.106.172.221</wp:comment_author_IP>
<wp:comment_date>2009-02-21 11:19:17</wp:comment_date>
<wp:comment_date_gmt>2009-02-21 16:19:17</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Thanks 4 the advise...i was just struggling with this lately, now i feel more comfortable with making my choice]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>188</wp:comment_id>
<wp:comment_author><![CDATA[leveille]]></wp:comment_author>
<wp:comment_author_email>leveillej@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://jasonleveille.com</wp:comment_author_url>
<wp:comment_author_IP>76.100.197.164</wp:comment_author_IP>
<wp:comment_date>2009-02-21 15:30:44</wp:comment_date>
<wp:comment_date_gmt>2009-02-21 20:30:44</wp:comment_date_gmt>
<wp:comment_content><![CDATA[@noiz777: No problem at all.  What did you end up choosing for a framework?]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>1</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>201</wp:comment_id>
<wp:comment_author><![CDATA[KANG Ghee Keong]]></wp:comment_author>
<wp:comment_author_email>kangghee@yahoo.com</wp:comment_author_email>
<wp:comment_author_url></wp:comment_author_url>
<wp:comment_author_IP>220.255.7.217</wp:comment_author_IP>
<wp:comment_date>2009-03-09 01:39:13</wp:comment_date>
<wp:comment_date_gmt>2009-03-09 06:39:13</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Haha.  I'm another one who is faced with this choice.  Surprisingly difficult but yes, your best advise yet, is to pick a community.

I'm inclined to choose CakePHP, as this one has a great bunch in my neighborhood meeting monthly just to chat!]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
<wp:comment>
<wp:comment_id>207</wp:comment_id>
<wp:comment_author><![CDATA[Beto Aveiga]]></wp:comment_author>
<wp:comment_author_email>luis.aveiga@gmail.com</wp:comment_author_email>
<wp:comment_author_url>http://www.powdevel.com</wp:comment_author_url>
<wp:comment_author_IP>190.154.97.149</wp:comment_author_IP>
<wp:comment_date>2009-03-25 03:03:31</wp:comment_date>
<wp:comment_date_gmt>2009-03-25 08:03:31</wp:comment_date_gmt>
<wp:comment_content><![CDATA[Más claro que eso... imposible. Quedarse en la indecisión usualmente cobra un precio más alto que decidirse por un framework no tan apropiado.
Y como diría el Chapulín Colorado: "Lo sospeché desde un principio".

Acostumbro desarrollar sitios con Drupal, pero ahora particularmente tengo un sistema con requerimientos muy "caprichosos" lo que me exige -IMHO- utilizar código propio.

Me he decidido por empezar con CI.

Gracias por el post.]]></wp:comment_content>
<wp:comment_approved>1</wp:comment_approved>
<wp:comment_type></wp:comment_type>
<wp:comment_parent>0</wp:comment_parent>
<wp:comment_user_id>0</wp:comment_user_id>
</wp:comment>
	</item>
<item>
<title>Building the new Web Server</title>
<link>http://jasonleveille.com/2009/02/building-the-new-web-server/</link>
<pubDate>Thu, 12 Feb 2009 16:23:41 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=327</guid>
<description></description>
<content:encoded><![CDATA[In <a href="http://jasonleveille.com/2009/02/graduate-school-independent-study/">an earlier</a> post I mentioned the fact that I will be rebuilding this blog.  One of my goals was to move away from <a href="http://www.slicehost.com/">Slicehost</a> and onto my own server.  I now have the server in my office, and I am starting the process of building the server to meet my requirements.  Here are some specs and some images in case you are curious.
<ul>
	<li>HP Netserver LC 2000r</li>
	<li>Pentium 3, 733MHz</li>
	<li>20GB HD</li>
	<li>512 MB RAM</li>
</ul>
Yeah, I'll be packing this puppy with ram and possibly upgrading the CPU.

[caption id="" align="aligncenter" width="387" caption="New Server Image 1"]<a href="http://www.flickr.com/photos/leveilles/3274595788/in/photostream/"><img title="New Server Image 1" src="http://farm4.static.flickr.com/3478/3274595788_09938cd11b.jpg" alt="New Server Image 1" width="387" height="258" /></a>[/caption]

[caption id="" align="aligncenter" width="387" caption="New Server Image 2"]<a href="http://www.flickr.com/photos/leveilles/3273777405/in/photostream/"><img title="New Server Image 2" src="http://farm4.static.flickr.com/3528/3273777405_4d86c05e60_b.jpg" alt="New Server Image 2" width="387" height="258" /></a>[/caption]

Much thanks goes to <a href="http://www.blueatlas.com">Blue Atlas</a> for not only giving me the server and an IP address, but for also providing me with support!]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>327</wp:post_id>
<wp:post_date>2009-02-12 11:23:41</wp:post_date>
<wp:post_date_gmt>2009-02-12 16:23:41</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>building-the-new-web-server</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1235644465</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Book Review: Pragmatic Version Control Using Git</title>
<link>http://jasonleveille.com/2009/02/book-review-pragmatic-version-control-using-git/</link>
<pubDate>Mon, 16 Feb 2009 04:57:05 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=210</guid>
<description></description>
<content:encoded><![CDATA[I recently finished <a href="http://www.pragprog.com/titles/tsgit/pragmatic-version-control-using-git">Pragmatic Version Control Using Git</a>.  Following is the review.<!--more-->
<div id="hreview-A-Good-Introduction-To-Lighttpd" class="hreview">
<h2 class="summary">An Excellent Git Resource</h2>
<abbr class="dtreviewed" title="2009-01-21T09:22-05:00">Feb. 15, 2009</abbr> by <span class="reviewer vcard"><span class="fn">Jason R. Leveille</span></span>
<div class="item"><a href="http://www.pragprog.com/titles/tsgit/pragmatic-version-control-using-git">Pragmatic Version Control Using Git</a></div>
<abbr class="rating" title="5">★★★★★</abbr><span class="version" style="display: none;">0.5</span>
<div class="description item vcard">

I have been a fan of <a href="http://www.travisswicegood.com/">Travis Swicegood's</a> work for a while now.  He not only has the ability to <a href="http://www.simpletest.org/">write</a> <a href="http://phpt.info/">good</a> <a href="http://www.ning.com/">software</a>, but he can also talk about it.  Travis' latest work, <em>Pragmatic Version Control Using Git</em>, is an excellent introduction into the world of distributed version control with <a href="http://git-scm.com/">Git</a>.  For a long time I've been a <a href="http://subversion.tigris.org/">Subversion</a> user, and for a while now Git has been getting a lot of good press.  Like anyone who wants to use the best tools available I often wondered if the grass was greener on the Git side.  Travis addresses the advantages Git has over <abbr title="subversion">SVN</abbr> (and he even shows you how to use Git with <abbr title="subversion">SVN</abbr>), which should help you in derterming the color of your version control grass.  If you want to investigate what Git can do for you, not only will this book provide an excellent introduction, but it will also provide a great reference.  I recommend this one for your bookshelf.
<h3>The Parts I Liked</h3>
These days I don't have a lot of time for books that fail to get to the good stuff quickly.  This book is a quick read and gets right to the point.  It starts with an introduction and moves right into the steps needed to set up this version control system.  From there it moves quickly into creating a project and working directly with Git.

Git has a very rich feature set which could overwhelm a new user.  Travis does a nice job distilling the details down to exactly what you need to know, while including material later on in the book for users with more advanced needs.  Topics include, among other things: tags, branches, history, remote branches, best practices, and advanced topics.  Since I'm not one for repeating what you can find elsewhere, take a look at the full <a href="http://media.pragprog.com/titles/tsgit/toc.pdf">table of contents</a> for a complete list of topics.

In addition to the topics previously mentioned, the book also has administrative and appendixes sections.  These sections alone are worth the price tag for this book.  Topics include:
<ul>
	<li>Migrating to Git</li>
	<li>Running a Git Server with Gitosis</li>
	<li>A Git Command Quick Reference</li>
	<li>Other Resources and Tools</li>
</ul>
<h3>The Parts I Struggled With</h3>
Although I stand by my 5 rating for this book, everything didn't go as smoothly as I would have liked.  Namely, I had a bit of a difficult time setting up <a href="http://scie.nti.st/2007/11/14/hosting-git-repositories-the-easy-and-secure-way">Gitosis</a>.  Everything was fine until I had to initialize gitosis.  At this point things started going wrong for me (Ubuntu 8.04 is what I tested with).  I'm sorry that I can't provide better details, as it has been a month since I struggled with this part of the book.  Admittedly, I didn't put much of an effort into setting up Gitosis.  <a href="https://github.com/">GitHub</a> currently meets and exceeds all <a href="https://github.com/leveille">my Git hosting</a> needs.  When the time comes for me to have the need for private git repositories, I'll revisit Gitosis.
<h3>Conclusion</h3>
For a long time I've been using Subversion for version control.  In the short time I've been using Git, it has become my version control system of choice.  As far as I'm concerned, it has lived up to the hype.  Like anything else there is a bit of a learning curve with Git, however with resources such as this book you'll hit the ground running.  Not only that, but this book is really nice to have for the inevitable need of a refresher.

If you like quick reads, packed with nuggets of very useful information, knowing full well that you'll eventually need access to more advanced topics, than this might very well be the perfect Git book for you.</div>
</div>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>210</wp:post_id>
<wp:post_date>2009-02-15 23:57:05</wp:post_date>
<wp:post_date_gmt>2009-02-16 04:57:05</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>book-review-pragmatic-version-control-using-git</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1239801807</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Web Server Transition Complete</title>
<link>http://jasonleveille.com/2009/02/webserver-transition-complete/</link>
<pubDate>Thu, 26 Feb 2009 10:37:49 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=360</guid>
<description></description>
<content:encoded><![CDATA[This blog is now being hosted from <a href="http://jasonleveille.com/2009/02/building-the-new-web-server/">my own web server</a>.  <a href="http://www.slicehost.com/">Slicehost</a> has served me very well for the last 6 months, however, complete control over every aspect of my server is something I've wanted for a long time.  The transition didn't go as smooth as I would have liked (the DNS record was pointing at my home IP address rather than my static IP ... whatever), but things now seem to be in working order.  If you notice any odd behavior please let me know.  For the more curious, here are some facts:
<ul>
	<li>Debian GNU/Linux 5.0.0 <a href="http://www.debian.org/releases/lenny/">(Lenny</a>)</li>
	<li>HP Netserver LC 2000r</li>
	<li>Pentium 3, 733MHz</li>
	<li>20GB HD</li>
	<li>2.5 GB RAM, which was dirt cheap</li>
</ul>

[caption id="" align="aligncenter" width="387" caption="New Server Image 2"]<a href="http://www.flickr.com/photos/leveilles/3273777405/in/photostream/"><img title="New Server Image 2" src="http://farm4.static.flickr.com/3528/3273777405_4d86c05e60_b.jpg" alt="New Server Image 2" width="387" height="258" /></a>[/caption]

I'm making good progress towards my goal of not only running the site from my own web server, but also <a href="http://jasonleveille.com/2009/02/graduate-school-independent-study/">building my own blog engine</a>.  My fingers are crossed that things keep progressing smoothly.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>360</wp:post_id>
<wp:post_date>2009-02-26 05:37:49</wp:post_date>
<wp:post_date_gmt>2009-02-26 10:37:49</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>webserver-transition-complete</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1235645025</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>An Update for March '09</title>
<link>http://jasonleveille.com/2009/03/an-update-for-march-09/</link>
<pubDate>Fri, 13 Mar 2009 20:23:17 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=376</guid>
<description></description>
<content:encoded><![CDATA[As the month mark approaches since my last post I figured I would take a few moments to talk about some of the things I've been working on.  I've been working on:
<ul>
	<li>being an attentive father when my girls are not sleeping</li>
	<li>a rather large <a href="http://plone.org/">Plone</a> project (the combining of multiple sites into one) which is approaching deployment.  Day by day I'm learning to appreciate Plone more and more.  There are days when I wish Plone were in front of me so I could punch it in the head.  There are other days when I'm thankful for this really great CMS.</li>
	<li>a <a href="http://mu.wordpress.org/">Wordpress MU</a> project that is also approaching deployment.  Wordpress MU has proven to be the correct choice for this particular project, based on project scale, content, and user requirements.  This particular project has been a joy to work on.</li>
	<li>learning <a href="http://pylonshq.com/">Pylons</a> (and <a href="http://sqlalchemy.org/">SQLAlchemy</a>/<a href="http://www.makotemplates.org/">Mako</a>), and in parallel, continuing to learn <a href="http://python.org/">Python</a>.  I'm currently working my way through "<a href="http://pylonsbook.com/">The Pylons Book</a>", and it is going very well.  I really like this framework.</li>
	<li>getting through 2 graduate courses.  I'm so ready to be done with school.</li>
	<li>getting <a href="http://en.wikipedia.org/wiki/Love_handle">love handles.</a> I never thought I'd say this, but I love the pear shaped look I'm developing ... not.</li>
</ul>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>376</wp:post_id>
<wp:post_date>2009-03-13 15:23:17</wp:post_date>
<wp:post_date_gmt>2009-03-13 20:23:17</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>an-update-for-march-09</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1236975800</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>Breaking the Maintenance Budget</title>
<link>http://jasonleveille.com/2009/03/breaking-the-maintenance-budget/</link>
<pubDate>Thu, 19 Mar 2009 18:11:00 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=380</guid>
<description></description>
<content:encoded><![CDATA[Anyone who works in web design and development is familiar with spending a lot of time implementing client requests: modify this photo, change this footer text, add this navigation item, remove this link, etc.  Knowing this, I try to think about the decisions I'm making while putting together a template or writing code.  I often ask myself if the decision I'm currently making will impact maintenance later on.
<blockquote><p>Poor decisions during development/implementation lead to poor decisions during maintenance. (<a href="http://twitter.com/jleveille/status/1254555057">via Twitter</a>)</blockquote></p>

The quote above could be reworded to: "Poor decisions during development/implementation lead to more difficult maintenance later on".  I never claim to be perfect.  I know I make mistakes and I try to learn from those mistakes.  I try not to judge the work of others, but sometimes it is ok to be judgmental.  Sometimes it is ok to speak out against poor decisions.

<!--more-->
<h3>The Edit Request</h3>
Today I was asked to remove a link from a navigation list.

[caption id="" align="aligncenter" width="458" caption="Navigation List"]<a href="http://www.flickr.com/photos/leveilles/3368417580/"><img title="Navigation List" src="http://farm4.static.flickr.com/3546/3368417580_6a6b3ec877_o.png" alt="Navigation List" width="458" height="96" /></a>[/caption]
<h3>Removing the Link</h3>
[caption id="" align="aligncenter" width="442" caption="After I Removed the Link"]<a href="http://www.flickr.com/photos/leveilles/3368417638/"><img title="After the Edit" src="http://farm4.static.flickr.com/3440/3368417638_eba9ff06d3_o.png" alt="After I Removed the Link" width="442" height="86" /></a>[/caption]

At this point I realized this template builder had achieved the button effect using one solid image.  I crossed my fingers and hoped that the image was a transparent PNG.
<h3>The Solid Background Image - a JPEG</h3>
[caption id="" align="aligncenter" width="511" caption="The JPEG Background Image"]<a href="http://www.flickr.com/photos/leveilles/3368417722/"><img title="The JPEG Background Image" src="http://farm4.static.flickr.com/3564/3368417722_aba0a5f039_o.png" alt="asdf" width="511" height="242" /></a>[/caption]

The problem here is that the background behind the buttons is a patterned background.  Of course, any time you put a transparent gradient over a patterned background you're going to have your work cut out for you.
<h3>Breaking the Maintenance Budget</h3>
If  client asks me to remove a link from their navigation, the last thing I want to do is charge them for 2 hours.  In the example above, we settled on an alternate link to replace the one we were removing, however had I rebuilt this navigation, even 2 hours would probably not have been enough time.  I would have had to:
<ul>
	<li>Recut the images (likely for a <a href="http://www.alistapart.com/articles/slidingdoors/">sliding doors</a> implementation)</li>
	<li>Reworked the CSS</li>
	<li>Tested in various browsers</li>
</ul>
Thankfully, and without a hint of the technical underpinnings, we were able to convince the client that replacing the link (instead of removing) was the better approach.  Typically this kind of implementation is a window into a flawed template build.  One that will only cause problems as time goes by.  Decisions such as the one above are a source of major frustration when the maintenance man comes calling.  Without asking the simple question, "how will this affect maintenance", you could be breaking the maintenance budget.  In the case above, we would have had to have eaten the additional cost to rework the navigation, or risked the potential of losing credibility with our client.  Neither is a good choice as far as I'm concerned.]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>380</wp:post_id>
<wp:post_date>2009-03-19 13:11:00</wp:post_date>
<wp:post_date_gmt>2009-03-19 18:11:00</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>breaking-the-maintenance-budget</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1238602170</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
<item>
<title>An Update for April '09</title>
<link>http://jasonleveille.com/2009/04/an-update-for-april-09/</link>
<pubDate>Wed, 15 Apr 2009 14:18:16 +0000</pubDate>
<dc:creator><![CDATA[leveille]]></dc:creator>
<guid isPermaLink="false">http://jasonleveille.com/?p=395</guid>
<description></description>
<content:encoded><![CDATA[March and April have been pretty busy months for me.  Here are some things I've been working on, reading, studying, thinking about, etc.
<ul>
	<li>A few weeks back we deployed one of the largest site projects I had ever worked on (built using <a href="http://plone.org/">Plone</a>).  The deployment went great and post deployment has been very smooth.  I'm hoping to find the time to write about my experience with Plone.</li>
	<li>This month I seem to have an abundance of <abbr title="Photoshop Deluxe">PSD</abbr> files awaiting template build.  Luckily, I work with some exceptionally talented designers and working with their PSD files is a pleasure.  One of the templates will skin a <a href="http://www.dotnetnuke.com/">DotNetNuke</a> site build; another will skin an <a href="http://expressionengine.com/">ExpressionEngine</a> site build; two will represent skins for custom solutions; and another will skin a <a href="http://wordpress.org/">Wordpress</a> site build.</li>
	<li>For the past month or so it seems that I have been using every one of my spare minutes working with <a href="http://www.pylonshq.com/">Pylons </a>and <a href="http://www.python.org/">Python</a>.  The more I code in Python the more I'm getting sucked in.  My new blog (<a href="http://github.com/leveille/wurdig/tree/master">Wurdig</a> is the name) is coming along nicely.  I feel like I have a ton more to complete, however there is no rush.  I believe I will have accomplished enough by early May to meet my <a href="http://jasonleveille.com/2009/02/graduate-school-independent-study/">Independent Project</a> obligations, however I may or may not deploy the new blog until June 1.</li>
	<li>I'm looking at a frozen instance of <a href="http://www.eclipse.org/">Eclipse</a>/<a href="http://aptana.com/studio/">Aptana Studio</a> and wondering if I should just dump them completely.  I would say 40% of my coding time is in <a href="http://www.vim.org/">VIM</a> anyway, and I don't really need the FTP/SFTP/SVN support offered by Aptana Studio (all of which I can manage via command line).  I need to reevaluate this.</li>
	<li>I just finished reading <a href="http://www.packtpub.com/building-websites-with-expressionengine-1.6/book">Building Websites with ExpressionEngine 1.6</a> (and I'm currently writing a review).  This book has solidified my thinking that <a href="http://www.google.com/url?sa=t&amp;source=web&amp;ct=res&amp;cd=1&amp;url=http%3A%2F%2Fexpressionengine.com%2F&amp;ei=JurlSbX4JZKNtgeHppmYAg&amp;usg=AFQjCNGpPjL_Te01PiwaO7v2uK6FLFnS6w&amp;sig2=FO-OIpAhTHahafj7JqY01w"><abbr title="Expression Engine">EE</abbr></a> will be a good CMS choice for a lot of projects I work on (projects that have flexible template requirements, more fine grained access control, etc).  Luckily at the end of this month I'll be starting my first <abbr title="Expression Engine">EE</abbr> project.  I'm excited.</li>
	<li>I just purchased 4 more books from <a href="http://www.amazon.com">Amazon</a> and I'm looking forward to their arrival:
<ul>
	<li><a href="http://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X/ref=pd_bbs_sr_1?ie=UTF8&amp;s=books&amp;qid=1239804286&amp;sr=8-1">The Pragmatic Programmer: From Journeyman to Master</a></li>
	<li><a href="http://www.amazon.com/Essential-SQLAlchemy-Rick-Copeland/dp/0596516142/ref=sr_1_1?ie=UTF8&amp;s=books&amp;qid=1239804316&amp;sr=1-1">Essential SQLAlchemy</a></li>
	<li><a href="http://www.amazon.com/HTTP-Developers-Handbook-Library/dp/0672324547/ref=sr_1_1?ie=UTF8&amp;s=books&amp;qid=1239804343&amp;sr=1-1">HTTP Developer's Handbook (Developer's Library)</a></li>
	<li><a href="http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742/ref=sr_1_1?ie=UTF8&amp;s=books&amp;qid=1239804367&amp;sr=1-1">JavaScript: The Good Parts</a></li>
</ul>
</li>
	<li><a href="http://github.com/leveille/simple-mc/tree/master">SimpleMC</a> has been seeing some action on the <a href="http://groups.google.com/group/simple_mc">SMC Google group</a>.  It looks like a few more people are starting to use the project.  A developer friend of mine (whose <a href="http://tracker.trollfot.org/wiki/Dolmen">work</a> I really respect) called SMC heavy for the few things that it does do.  He is absolutely correct about that, however it provided me with a good learning opportunity for <a href="http://extjs.com/">EXTJS</a>.</li>
	<li>I'll be graduating in May!!</li>
</ul>]]></content:encoded>
<excerpt:encoded><![CDATA[]]></excerpt:encoded>
<wp:post_id>395</wp:post_id>
<wp:post_date>2009-04-15 09:18:16</wp:post_date>
<wp:post_date_gmt>2009-04-15 14:18:16</wp:post_date_gmt>
<wp:comment_status>closed</wp:comment_status>
<wp:ping_status>open</wp:ping_status>
<wp:post_name>an-update-for-april-09</wp:post_name>
<wp:status>publish</wp:status>
<wp:post_parent>0</wp:post_parent>
<wp:menu_order>0</wp:menu_order>
<wp:post_type>post</wp:post_type>
<wp:post_password></wp:post_password>
<wp:postmeta>
<wp:meta_key>aktt_notify_twitter</wp:meta_key>
<wp:meta_value>no</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_lock</wp:meta_key>
<wp:meta_value>1239805201</wp:meta_value>
</wp:postmeta>
<wp:postmeta>
<wp:meta_key>_edit_last</wp:meta_key>
<wp:meta_value>1</wp:meta_value>
</wp:postmeta>
	</item>
</channel>
</rss>
